   5.   4.10221~@~10~@~M~@~Remove table CtMenuOption~@~N~@~IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id('dbo.CtMenuOption')) EXEC ('drop table dbo.CtMenuOption')
   5.   4.10221~@~20~@~M~@~Change table UsrPref~@~N~@~IF EXISTS (SELECT 1 FROM dbo.syscolumns WHERE name = 'MenuOption' and id = object_id('UsrPref'))
BEGIN
	IF EXISTS (SELECT 1 from sysobjects where name = 'DF_UsrPref_PrjListVisible') EXEC ('ALTER TABLE dbo.UsrPref DROP CONSTRAINT DF_UsrPref_PrjListVisible')
	EXEC ('CREATE TABLE dbo.Tmp_UsrPref (
		UsrPrefId int NOT NULL IDENTITY (1, 1),
		UsrId int NULL,
		UsrGroupId smallint NULL,
		CompanyId smallint NULL,
		MemberId int NULL,
		AgentId int NULL,
		BrokerId int NULL,
		CustomerId int NULL,
		InvestorId int NULL,
		VendorId int NULL,
		ProjectId smallint NULL,
		SystemId tinyint NULL,
		PrefDefault char(1) NOT NULL,
		UsrPrefDesc nvarchar(50) NOT NULL,
		SysListVisible char(1) NOT NULL,
		ComListVisible char(1) NOT NULL,
		PrjListVisible char(1) NOT NULL,
		MenuOptId int NOT NULL,
		PageBannerImg varchar(100) NULL,
		UsrStyleSheet varchar(MAX) NULL,
		SplashImg varchar(100) NULL)
		SET IDENTITY_INSERT dbo.Tmp_UsrPref ON
		INSERT INTO dbo.Tmp_UsrPref (UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, PageBannerImg, UsrStyleSheet, SplashImg)
		SELECT UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, 2, PageBannerImg, UsrStyleSheet, SplashImg FROM dbo.UsrPref
		SET IDENTITY_INSERT dbo.Tmp_UsrPref OFF
		DROP TABLE dbo.UsrPref
		EXEC sp_rename ''dbo.Tmp_UsrPref'', ''UsrPref'', ''OBJECT''
		ALTER TABLE dbo.UsrPref ADD CONSTRAINT PK_UsrPref PRIMARY KEY CLUSTERED (UsrPrefId)')
END
   5.   4.10221~@~30~@~M~@~Change table Menu~@~Y~@~IF NOT EXISTS (SELECT 1 FROM dbo.syscolumns WHERE name = 'IconUrl' and id = object_id('Menu'))
BEGIN
	EXEC ('CREATE TABLE dbo.Tmp_Menu (
	MenuId int NOT NULL IDENTITY (1, 1),
	MenuIndex smallint NOT NULL,
	MenuName varchar(30) NOT NULL,
	MenuDesc nvarchar(100) NULL,
	Miscellaneous varchar(500) NULL,
	ParentId int NULL,
	ReportId int NULL,
	ScreenId int NULL,
	WizardId int NULL,
	IconUrl nvarchar(500) NULL)
	SET IDENTITY_INSERT dbo.Tmp_Menu ON
	INSERT INTO dbo.Tmp_Menu (MenuId, MenuIndex, MenuName, MenuDesc, Miscellaneous, ParentId, ReportId, ScreenId, WizardId)
		SELECT MenuId, MenuIndex, MenuName, MenuDesc, Miscellaneous, ParentId, ReportId, ScreenId, WizardId FROM dbo.Menu
	SET IDENTITY_INSERT dbo.Tmp_Menu OFF
	ALTER TABLE dbo.MenuHlp DROP CONSTRAINT FK_MenuHlp_Menu
	DROP TABLE dbo.Menu
	EXECUTE sp_rename ''dbo.Tmp_Menu'', ''Menu'', ''OBJECT'' 
	ALTER TABLE dbo.Menu ADD CONSTRAINT PK_Menu PRIMARY KEY CLUSTERED (MenuId)
	CREATE NONCLUSTERED INDEX IX_Menu_ParentId ON dbo.Menu (ParentId,MenuIndex)')
	EXEC ('ALTER TABLE dbo.MenuHlp ADD CONSTRAINT FK_MenuHlp_Menu FOREIGN KEY (MenuId) REFERENCES dbo.Menu (MenuId)')
END
   5.  12.10511~@~10~@~M~@~Change table MenuHlp~@~Y~@~EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_MenuHlp_Menu'') ALTER TABLE dbo.MenuHlp DROP CONSTRAINT FK_MenuHlp_Menu CREATE TABLE dbo.Tmp_MenuHlp (MenuHlpId int NOT NULL, MenuId int NOT NULL, CultureId smallint NOT NULL, MenuText nvarchar(30) NOT NULL)') EXEC (' INSERT INTO dbo.Tmp_MenuHlp (MenuHlpId, MenuId, CultureId, MenuText) SELECT convert(int,MenuHlpId), convert(int,MenuId), convert(smallint,CultureId), MenuText FROM dbo.MenuHlp IF (SELECT COUNT(1) FROM dbo.Tmp_MenuHlp) > 0 OR (SELECT COUNT(1) FROM dbo.MenuHlp) = 0 DROP TABLE dbo.MenuHlp') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.MenuHlp'')) CREATE TABLE dbo.MenuHlp (MenuHlpId Int IDENTITY NOT NULL, MenuId Int NOT NULL, CultureId SmallInt NOT NULL, MenuText NVarChar(50) NOT NULL, CONSTRAINT PK_MenuHlp PRIMARY KEY CLUSTERED (MenuHlpId))') EXEC (' SET IDENTITY_INSERT dbo.MenuHlp ON INSERT INTO dbo.MenuHlp (MenuHlpId, MenuId, CultureId, MenuText) SELECT MenuHlpId, MenuId, CultureId, MenuText FROM dbo.Tmp_MenuHlp SET IDENTITY_INSERT dbo.MenuHlp OFF IF (SELECT COUNT(1) FROM dbo.MenuHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_MenuHlp) = 0 DROP TABLE dbo.Tmp_MenuHlp CREATE  UNIQUE NONCLUSTERED INDEX IX_MenuHlp_MenuId ON dbo.MenuHlp (CultureId,MenuId) ALTER TABLE dbo.MenuHlp WITH NOCHECK ADD CONSTRAINT FK_MenuHlp_Menu FOREIGN KEY (MenuId) REFERENCES dbo.Menu (MenuId)')
   5.  13.10622~@~10~@~M~@~Change index on Label~@~Y~@~EXEC ('DROP INDEX Label.IX_Label')
EXEC ('CREATE UNIQUE NONCLUSTERED INDEX IX_Label ON dbo.Label 
(
	CultureId,
	LabelCat,
	LabelKey,
	CompanyId
)')
   5.  14.10707~@~10~@~M~@~Change table Label's LabelCat to not null~@~Y~@~EXEC ('UPDATE dbo.Label set LabelCat = LabelKey WHERE LabelCat is null')
EXEC ('CREATE TABLE dbo.Tmp_Label (LabelId int NOT NULL, CultureId smallint NOT NULL, LabelCat varchar(50) NULL, LabelKey varchar(50) NOT NULL, LabelText nvarchar(1000) NOT NULL, CompanyId smallint NULL, SortOrder smallint NULL)')
EXEC ('INSERT INTO dbo.Tmp_Label (LabelId, CultureId, LabelCat, LabelKey, LabelText, CompanyId, SortOrder) SELECT convert(int,LabelId), convert(smallint,CultureId), LabelCat, LabelKey, LabelText, convert(smallint,CompanyId), convert(smallint,SortOrder) FROM dbo.Label IF (SELECT COUNT(1) FROM dbo.Tmp_Label) > 0 OR (SELECT COUNT(1) FROM dbo.Label) = 0 DROP TABLE dbo.Label')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Label'')) CREATE TABLE dbo.Label (LabelId Int IDENTITY NOT NULL, CultureId SmallInt NOT NULL, LabelCat VarChar(50) NOT NULL, LabelKey VarChar(50) NOT NULL, LabelText NVarChar(1000) NOT NULL, CompanyId SmallInt NULL, SortOrder SmallInt NULL, CONSTRAINT PK_Label PRIMARY KEY CLUSTERED (LabelId))')
EXEC ('SET IDENTITY_INSERT dbo.Label ON INSERT INTO dbo.Label (LabelId, CultureId, LabelCat, LabelKey, LabelText, CompanyId, SortOrder) SELECT LabelId, CultureId, LabelCat, LabelKey, LabelText, CompanyId, SortOrder FROM dbo.Tmp_Label SET IDENTITY_INSERT dbo.Label OFF IF (SELECT COUNT(1) FROM dbo.Label) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Label) = 0 DROP TABLE dbo.Tmp_Label')
EXEC ('CREATE UNIQUE NONCLUSTERED INDEX IX_Label ON dbo.Label (CultureId,LabelCat,LabelKey,CompanyId)')
   5.  21.10914~@~10~@~M~@~Change table Screen~@~Y~@~EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_ScreenCri_Screen'') ALTER TABLE dbo.ScreenCri DROP CONSTRAINT FK_ScreenCri_Screen IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_ScreenHlp_Screen'') ALTER TABLE dbo.ScreenHlp DROP CONSTRAINT FK_ScreenHlp_Screen IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_ScreenObj_Screen'') ALTER TABLE dbo.ScreenObj DROP CONSTRAINT FK_ScreenObj_Screen CREATE TABLE dbo.Tmp_Screen (ScreenId int NOT NULL, ProgramName varchar(20) NOT NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NOT NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId smallint NULL, SearchWidth smallint NULL, SearchAscending char(1) NOT NULL, GridRows tinyint NULL, GridClass varchar(30) NULL, GridTitle nvarchar(50) NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NOT NULL, HasDeleteAll char(1) NOT NULL, ValidateReq char(1) NOT NULL, DeferError char(1) NULL)')
 EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(smallint,SearchId), convert(smallint,SearchWidth), SearchAscending, convert(tinyint,GridRows), GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen')
 EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId SmallInt NULL, SearchWidth SmallInt NULL, SearchAscending Char(1) NOT NULL, SearchMode Char(1) NOT NULL, GridRows TinyInt NULL, GridClass VarChar(30) NULL, GridTitle NVarChar(50) NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))')
 EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_SearchMode DEFAULT (''A'') FOR SearchMode ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, ''A'', GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen CREATE  UNIQUE NONCLUSTERED INDEX IX_Screen_ProgramName ON dbo.Screen (ProgramName) ALTER TABLE dbo.ScreenCri WITH NOCHECK ADD CONSTRAINT FK_ScreenCri_Screen FOREIGN KEY (ScreenId) REFERENCES dbo.Screen (ScreenId) ALTER TABLE dbo.ScreenHlp WITH NOCHECK ADD CONSTRAINT FK_ScreenHlp_Screen FOREIGN KEY (ScreenId) REFERENCES dbo.Screen (ScreenId) ALTER TABLE dbo.ScreenObj WITH NOCHECK ADD CONSTRAINT FK_ScreenObj_Screen FOREIGN KEY (ScreenId) REFERENCES dbo.Screen (ScreenId)')
   5.  21.10914~@~20~@~M~@~Change table CtSearchMode~@~N~@~EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtSearchMode'')) CREATE TABLE dbo.CtSearchMode (SearchCd Char(1) NOT NULL, SearchName NVarChar(20) NOT NULL, CONSTRAINT PK_CtSearchMode PRIMARY KEY CLUSTERED (SearchCd))')
IF NOT EXISTS (SELECT 1 FROM dbo.CtSearchMode WHERE SearchCd = 'A')
BEGIN
	EXEC ('INSERT dbo.CtSearchMode VALUES (''A'',''Auto Complete'')')
	EXEC ('INSERT dbo.CtSearchMode VALUES (''C'',''Combo Box'')')
END
   6.   2.11011~@~10~@~M~@~Change table Label~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Label (LabelId int NULL, CultureId smallint NULL, LabelCat varchar(50) NULL, LabelKey varchar(50) NULL, LabelText nvarchar(1000) NULL, CompanyId smallint NULL, SortOrder smallint NULL)') EXEC (' INSERT INTO dbo.Tmp_Label (LabelId, CultureId, LabelCat, LabelKey, LabelText, CompanyId, SortOrder) SELECT convert(int,LabelId), convert(smallint,CultureId), LabelCat, LabelKey, LabelText, convert(smallint,CompanyId), convert(smallint,SortOrder) FROM dbo.Label IF (SELECT COUNT(1) FROM dbo.Tmp_Label) > 0 OR (SELECT COUNT(1) FROM dbo.Label) = 0 DROP TABLE dbo.Label') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Label'')) CREATE TABLE dbo.Label (LabelId Int IDENTITY NOT NULL, CultureId SmallInt NOT NULL, LabelCat VarChar(50) NOT NULL, LabelKey VarChar(50) NOT NULL, LabelText NVarChar(max) NOT NULL, CompanyId SmallInt NULL, SortOrder SmallInt NULL, CONSTRAINT PK_Label PRIMARY KEY CLUSTERED (LabelId))') EXEC (' ALTER TABLE dbo.Label ADD CONSTRAINT DF_Label_LabelCat DEFAULT (''NA'') FOR LabelCat SET IDENTITY_INSERT dbo.Label ON INSERT INTO dbo.Label (LabelId, CultureId, LabelCat, LabelKey, LabelText, CompanyId, SortOrder) SELECT LabelId, CultureId, LabelCat, LabelKey, LabelText, CompanyId, SortOrder FROM dbo.Tmp_Label SET IDENTITY_INSERT dbo.Label OFF IF (SELECT COUNT(1) FROM dbo.Label) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Label) = 0 DROP TABLE dbo.Tmp_Label CREATE  UNIQUE NONCLUSTERED INDEX IX_Label ON dbo.Label (CultureId,LabelCat,LabelKey,CompanyId)')
   6.   4.11017~@~10~@~M~@~Change table Screen~@~Y~@~ EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_ScreenCri_Screen'') ALTER TABLE dbo.ScreenCri DROP CONSTRAINT FK_ScreenCri_Screen IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_ScreenHlp_Screen'') ALTER TABLE dbo.ScreenHlp DROP CONSTRAINT FK_ScreenHlp_Screen IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_ScreenObj_Screen'') ALTER TABLE dbo.ScreenObj DROP CONSTRAINT FK_ScreenObj_Screen CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId smallint NULL, SearchWidth smallint NULL, SearchAscending char(1) NULL, SearchMode char(1) NULL, GridRows tinyint NULL, GridClass varchar(30) NULL, GridTitle nvarchar(50) NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, HasDeleteAll char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(smallint,SearchId), convert(smallint,SearchWidth), SearchAscending, SearchMode, convert(tinyint,GridRows), GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId SmallInt NULL, SearchWidth SmallInt NULL, SearchAscending Char(1) NOT NULL, SearchMode Char(1) NOT NULL, GridRows TinyInt NULL, GridClass VarChar(30) NULL, GridTitle NVarChar(50) NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, MasterPageFile VarChar(100) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_SearchMode DEFAULT (''A'') FOR SearchMode ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_MasterPageFile DEFAULT (''Default.master'') FOR MasterPageFile SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError, MasterPageFile) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError, ''Default.master'' FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen CREATE  UNIQUE NONCLUSTERED INDEX IX_Screen_ProgramName ON dbo.Screen (ProgramName) ALTER TABLE dbo.ScreenCri WITH NOCHECK ADD CONSTRAINT FK_ScreenCri_Screen FOREIGN KEY (ScreenId) REFERENCES dbo.Screen (ScreenId) ALTER TABLE dbo.ScreenHlp WITH NOCHECK ADD CONSTRAINT FK_ScreenHlp_Screen FOREIGN KEY (ScreenId) REFERENCES dbo.Screen (ScreenId) ALTER TABLE dbo.ScreenObj WITH NOCHECK ADD CONSTRAINT FK_ScreenObj_Screen FOREIGN KEY (ScreenId) REFERENCES dbo.Screen (ScreenId)')
   6.   9.20103~@~10~@~M~@~Change table Screen~@~Y~@~ EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_ScreenCri_Screen'') ALTER TABLE dbo.ScreenCri DROP CONSTRAINT FK_ScreenCri_Screen IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_ScreenHlp_Screen'') ALTER TABLE dbo.ScreenHlp DROP CONSTRAINT FK_ScreenHlp_Screen IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_ScreenObj_Screen'') ALTER TABLE dbo.ScreenObj DROP CONSTRAINT FK_ScreenObj_Screen CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId smallint NULL, SearchWidth smallint NULL, SearchAscending char(1) NULL, SearchMode char(1) NULL, GridRows tinyint NULL, GridClass varchar(30) NULL, GridTitle nvarchar(50) NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, HasDeleteAll char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, MasterPageFile varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError, MasterPageFile) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(smallint,SearchId), convert(smallint,SearchWidth), SearchAscending, SearchMode, convert(tinyint,GridRows), GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError, MasterPageFile FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId SmallInt NULL, SearchWidth SmallInt NULL, SearchAscending Char(1) NOT NULL, SearchMode Char(1) NOT NULL, GridRows TinyInt NULL, GridClass VarChar(30) NULL, GridTitle NVarChar(50) NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, MasterPageFile VarChar(100) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_SearchMode DEFAULT (''A'') FOR SearchMode ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_MasterPageFile DEFAULT (''Default.master'') FOR MasterPageFile ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, ''N'' FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen CREATE  UNIQUE NONCLUSTERED INDEX IX_Screen_ProgramName ON dbo.Screen (ProgramName) ALTER TABLE dbo.ScreenCri WITH NOCHECK ADD CONSTRAINT FK_ScreenCri_Screen FOREIGN KEY (ScreenId) REFERENCES dbo.Screen (ScreenId) ALTER TABLE dbo.ScreenHlp WITH NOCHECK ADD CONSTRAINT FK_ScreenHlp_Screen FOREIGN KEY (ScreenId) REFERENCES dbo.Screen (ScreenId) ALTER TABLE dbo.ScreenObj WITH NOCHECK ADD CONSTRAINT FK_ScreenObj_Screen FOREIGN KEY (ScreenId) REFERENCES dbo.Screen (ScreenId)')
   6.   9.20103~@~20~@~M~@~Change table ScreenDel~@~Y~@~EXEC ('DROP TABLE dbo.ScreenDel')
EXEC ('CREATE TABLE dbo.ScreenDel(ScreenDelId int IDENTITY(1,1) NOT NULL, ScreenId int NOT NULL, ProgramName varchar(100) NOT NULL, MultiDesignDb char(1) NOT NULL, CONSTRAINT PK_ScreenDel PRIMARY KEY CLUSTERED (ScreenDelId))')
   6.   9.20103~@~30~@~M~@~Change table ReportDel~@~Y~@~EXEC ('DROP TABLE dbo.ReportDel')
EXEC ('CREATE TABLE dbo.ReportDel(ReportDelId int IDENTITY(1,1) NOT NULL, ReportId int NOT NULL, ProgramName varchar(100) NOT NULL, CONSTRAINT PK_ReportDel PRIMARY KEY CLUSTERED (ReportDelId))')
   6.   9.20103~@~40~@~M~@~Change table WizardDel~@~Y~@~EXEC ('DROP TABLE dbo.WizardDel')
EXEC ('CREATE TABLE dbo.WizardDel(WizardDelId int IDENTITY(1,1) NOT NULL, WizardId int NOT NULL, ProgramName varchar(100) NOT NULL, CONSTRAINT PK_WizardDel PRIMARY KEY CLUSTERED (WizardDelId))')
   6.  10.20109~@~10~@~M~@~Change table Report~@~Y~@~ EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_ReportCri_Report'') ALTER TABLE dbo.ReportCri DROP CONSTRAINT FK_ReportCri_Report IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_ReportObj_Report'') ALTER TABLE dbo.ReportObj DROP CONSTRAINT FK_ReportObj_Report CREATE TABLE dbo.Tmp_Report (ReportId int NULL, ProgramName varchar(20) NULL, ReportDesc nvarchar(50) NULL, OrientationCd char(1) NULL, ReportTypeCd char(1) NULL, TemplateName varchar(50) NULL, RptTemplateId int NULL, CopyReportId int NULL, TopMargin decimal(8,2) NULL, BottomMargin decimal(8,2) NULL, LeftMargin decimal(8,2) NULL, RightMargin decimal(8,2) NULL, PageHeight decimal(8,2) NULL, PageWidth decimal(8,2) NULL, UnitCd char(2) NULL, WhereClause varchar(1000) NULL, RegClause varchar(400) NULL, RegCode nvarchar(max) NULL, ValClause varchar(400) NULL, ValCode nvarchar(max) NULL, UpdClause varchar(200) NULL, UpdCode nvarchar(max) NULL, XlsClause varchar(200) NULL, XlsCode nvarchar(max) NULL, GenerateRp char(1) NULL, AllowSelect char(1) NULL, ModifiedBy int NULL, ModifiedOn datetime NULL, LastGenDt datetime NULL, CompanyLs varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_Report (ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplateId, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs) SELECT convert(int,ReportId), ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, convert(int,RptTemplateId), convert(int,CopyReportId), convert(decimal(8,2),TopMargin), convert(decimal(8,2),BottomMargin), convert(decimal(8,2),LeftMargin), convert(decimal(8,2),RightMargin), convert(decimal(8,2),PageHeight), convert(decimal(8,2),PageWidth), UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, convert(int,ModifiedBy), ModifiedOn, LastGenDt, CompanyLs FROM dbo.Report IF (SELECT COUNT(1) FROM dbo.Tmp_Report) > 0 OR (SELECT COUNT(1) FROM dbo.Report) = 0 DROP TABLE dbo.Report') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Report'')) CREATE TABLE dbo.Report (ReportId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ReportDesc NVarChar(50) NULL, OrientationCd Char(1) NOT NULL, ReportTypeCd Char(1) NOT NULL, TemplateName VarChar(50) NULL, RptTemplateId Int NULL, CopyReportId Int NULL, TopMargin Decimal(8,2) NOT NULL, BottomMargin Decimal(8,2) NOT NULL, LeftMargin Decimal(8,2) NOT NULL, RightMargin Decimal(8,2) NOT NULL, PageHeight Decimal(8,2) NOT NULL, PageWidth Decimal(8,2) NOT NULL, UnitCd Char(2) NOT NULL, WhereClause VarChar(1000) NULL, RegClause VarChar(400) NULL, RegCode NVarChar(max) NULL, ValClause VarChar(400) NULL, ValCode NVarChar(max) NULL, UpdClause VarChar(200) NULL, UpdCode NVarChar(max) NULL, XlsClause VarChar(200) NULL, XlsCode NVarChar(max) NULL, GenerateRp Char(1) NOT NULL, AllowSelect Char(1) NOT NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastGenDt DateTime NULL, CompanyLs VarChar(1000) NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Report PRIMARY KEY CLUSTERED (ReportId))') EXEC (' ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_TopMargin DEFAULT (1) FOR TopMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_BottomMargin DEFAULT (1) FOR BottomMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_LeftMargin DEFAULT (1) FOR LeftMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_RightMargin DEFAULT (1) FOR RightMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_PageHeight DEFAULT (11) FOR PageHeight ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_PageWidth DEFAULT (8.5) FOR PageWidth ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_UnitCd DEFAULT (''in'') FOR UnitCd ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_AllowSelect DEFAULT (''N'') FOR AllowSelect ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Report ON INSERT INTO dbo.Report (ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplateId, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, NeedRegen) SELECT ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplateId, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, ''N'' FROM dbo.Tmp_Report SET IDENTITY_INSERT dbo.Report OFF IF (SELECT COUNT(1) FROM dbo.Report) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Report) = 0 DROP TABLE dbo.Tmp_Report CREATE  UNIQUE NONCLUSTERED INDEX IX_Report_ProgramName ON dbo.Report (ProgramName) ALTER TABLE dbo.ReportCri WITH NOCHECK ADD CONSTRAINT FK_ReportCri_Report FOREIGN KEY (ReportId) REFERENCES dbo.Report (ReportId) ALTER TABLE dbo.ReportObj WITH NOCHECK ADD CONSTRAINT FK_ReportObj_Report FOREIGN KEY (ReportId) REFERENCES dbo.Report (ReportId)')
   6.  10.20109~@~20~@~M~@~Change table Wizard~@~Y~@~ EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_WizardObj_Wizard'') ALTER TABLE dbo.WizardObj DROP CONSTRAINT FK_WizardObj_Wizard CREATE TABLE dbo.Tmp_Wizard (WizardId int NULL, WizardTypeId tinyint NULL, MasterTableId int NULL, WizardTitle nvarchar(50) NULL, ProgramName varchar(50) NULL, DefWorkSheet nvarchar(50) NULL, DefStartRow smallint NULL, DefOverwrite char(1) NULL, OvwrReadonly char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Wizard (WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly) SELECT convert(int,WizardId), convert(tinyint,WizardTypeId), convert(int,MasterTableId), WizardTitle, ProgramName, DefWorkSheet, convert(smallint,DefStartRow), DefOverwrite, OvwrReadonly FROM dbo.Wizard IF (SELECT COUNT(1) FROM dbo.Tmp_Wizard) > 0 OR (SELECT COUNT(1) FROM dbo.Wizard) = 0 DROP TABLE dbo.Wizard') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Wizard'')) CREATE TABLE dbo.Wizard (WizardId Int IDENTITY NOT NULL, WizardTypeId TinyInt NOT NULL, MasterTableId Int NOT NULL, WizardTitle NVarChar(50) NOT NULL, ProgramName VarChar(50) NOT NULL, DefWorkSheet NVarChar(50) NOT NULL, DefStartRow SmallInt NOT NULL, DefOverwrite Char(1) NOT NULL, OvwrReadonly Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Wizard PRIMARY KEY CLUSTERED (WizardId))') EXEC (' ALTER TABLE dbo.Wizard ADD CONSTRAINT DF_Wizard_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Wizard ON INSERT INTO dbo.Wizard (WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, NeedRegen) SELECT WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, ''N'' FROM dbo.Tmp_Wizard SET IDENTITY_INSERT dbo.Wizard OFF IF (SELECT COUNT(1) FROM dbo.Wizard) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Wizard) = 0 DROP TABLE dbo.Tmp_Wizard CREATE  UNIQUE NONCLUSTERED INDEX IX_Wizard_ProgramName ON dbo.Wizard (ProgramName) ALTER TABLE dbo.WizardObj WITH NOCHECK ADD CONSTRAINT FK_WizardObj_Wizard FOREIGN KEY (WizardId) REFERENCES dbo.Wizard (WizardId)')
   6.  10.20109~@~30~@~M~@~Clean up procedures~@~Y~@~IF EXISTS (SELECT 1 FROM sys.objects WHERE name = 'IsNeedRegen') EXEC ('DROP PROCEDURE dbo.IsNeedRegen')
IF EXISTS (SELECT 1 FROM sys.objects WHERE name = 'Ir_UpdNeedRegen') EXEC ('DROP PROCEDURE dbo.Ir_UpdNeedRegen')
IF EXISTS (SELECT 1 FROM sys.objects WHERE name = 'SetNeedRegen') EXEC ('DROP PROCEDURE dbo.SetNeedRegen')
   6.  11.20113~@~30~@~M~@~Clean up constraints not needed~@~Y~@~IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name = 'FK_ScreenObj_ScreenTab')
	EXEC ('ALTER TABLE dbo.ScreenObj DROP CONSTRAINT FK_ScreenObj_ScreenTab')
IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name = 'FK_ScreenObj_Screen')
	EXEC ('ALTER TABLE dbo.ScreenObj DROP CONSTRAINT FK_ScreenObj_Screen')
IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name = 'FK_ScreenCri_Screen')
	EXEC ('ALTER TABLE dbo.ScreenCri DROP CONSTRAINT FK_ScreenCri_Screen')
IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name = 'FK_FilterHlp_ScreenFilter')
	EXEC ('ALTER TABLE dbo.ScreenFilterHlp DROP CONSTRAINT FK_FilterHlp_ScreenFilter')
IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name = 'FK_ScreenHlp_Screen')
	EXEC ('ALTER TABLE dbo.ScreenHlp DROP CONSTRAINT FK_ScreenHlp_Screen')
IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name = 'FK_ScreenTabHlp_ScreenTab')
	EXEC ('ALTER TABLE dbo.ScreenTabHlp DROP CONSTRAINT FK_ScreenTabHlp_ScreenTab')
IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name = 'FK_ReportCri_Report')
	EXEC ('ALTER TABLE dbo.ReportCri DROP CONSTRAINT FK_ReportCri_Report')
IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name = 'FK_ReportObj_Report')
	EXEC ('ALTER TABLE dbo.ReportObj DROP CONSTRAINT FK_ReportObj_Report')
   6.  11.20113~@~40~@~M~@~Change table Screen and update GenerateSr~@~Y~@~EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId smallint NULL, SearchWidth smallint NULL, SearchAscending char(1) NULL, SearchMode char(1) NULL, GridRows tinyint NULL, GridClass varchar(30) NULL, GridTitle nvarchar(50) NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, HasDeleteAll char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, MasterPageFile varchar(100) NULL, NeedRegen char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(smallint,SearchId), convert(smallint,SearchWidth), SearchAscending, SearchMode, convert(tinyint,GridRows), GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId SmallInt NULL, SearchWidth SmallInt NULL, SearchAscending Char(1) NOT NULL, SearchMode Char(1) NOT NULL, GridRows TinyInt NULL, GridClass VarChar(30) NULL, GridTitle NVarChar(50) NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, MasterPageFile VarChar(100) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_SearchMode DEFAULT (''A'') FOR SearchMode ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_MasterPageFile DEFAULT (''Default.master'') FOR MasterPageFile ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, ''Y'', HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen CREATE  UNIQUE NONCLUSTERED INDEX IX_Screen_ProgramName ON dbo.Screen (ProgramName)')
EXEC ('UPDATE dbo.screen SET GenerateSr = ''N'' WHERE GenerateSc = ''N''')
   6.  11.20113~@~20~@~M~@~Change table Entity~@~N~@~EXEC (' CREATE TABLE dbo.Tmp_Entity (EntityId smallint NULL, EntityName nvarchar(100) NULL, EntityCode varchar(4) NULL, DeployPath varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_Entity (EntityId, EntityName, EntityCode, DeployPath) SELECT convert(smallint,EntityId), EntityName, EntityCode, DeployPath FROM dbo.Entity IF (SELECT COUNT(1) FROM dbo.Tmp_Entity) > 0 OR (SELECT COUNT(1) FROM dbo.Entity) = 0 DROP TABLE dbo.Entity') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Entity'')) CREATE TABLE dbo.Entity (EntityId SmallInt NOT NULL, EntityName NVarChar(100) NOT NULL, EntityCode VarChar(10) NOT NULL, DeployPath VarChar(100) NOT NULL, CONSTRAINT PK_Entity PRIMARY KEY CLUSTERED (EntityId))') EXEC (' INSERT INTO dbo.Entity (EntityId, EntityName, EntityCode, DeployPath) SELECT EntityId, EntityName, EntityCode, DeployPath FROM dbo.Tmp_Entity IF (SELECT COUNT(1) FROM dbo.Entity) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Entity) = 0 DROP TABLE dbo.Tmp_Entity')
   6.  12.20117~@~10~@~M~@~Change table Label~@~Y~@~EXEC (' CREATE TABLE dbo.Tmp_Label (LabelId int NULL, CultureId smallint NULL, LabelCat varchar(50) NULL, LabelKey varchar(50) NULL, LabelText nvarchar(max) NULL, CompanyId smallint NULL, SortOrder smallint NULL)') EXEC (' INSERT INTO dbo.Tmp_Label (LabelId, CultureId, LabelCat, LabelKey, LabelText, CompanyId, SortOrder) SELECT convert(int,LabelId), convert(smallint,CultureId), LabelCat, LabelKey, LabelText, convert(smallint,CompanyId), convert(smallint,SortOrder) FROM dbo.Label IF (SELECT COUNT(1) FROM dbo.Tmp_Label) > 0 OR (SELECT COUNT(1) FROM dbo.Label) = 0 DROP TABLE dbo.Label') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Label'')) CREATE TABLE dbo.Label (LabelId Int IDENTITY NOT NULL, LabelDesc VarChar(200) NULL, CultureId SmallInt NOT NULL, LabelCat VarChar(50) NOT NULL, LabelKey VarChar(50) NOT NULL, LabelText NVarChar(max) NOT NULL, CompanyId SmallInt NULL, SortOrder SmallInt NULL, CONSTRAINT PK_Label PRIMARY KEY CLUSTERED (LabelId))') EXEC (' ALTER TABLE dbo.Label ADD CONSTRAINT DF_Label_LabelCat DEFAULT (''NA'') FOR LabelCat SET IDENTITY_INSERT dbo.Label ON INSERT INTO dbo.Label (LabelId, CultureId, LabelCat, LabelKey, LabelText, CompanyId, SortOrder) SELECT LabelId, CultureId, LabelCat, LabelKey, LabelText, CompanyId, SortOrder FROM dbo.Tmp_Label SET IDENTITY_INSERT dbo.Label OFF IF (SELECT COUNT(1) FROM dbo.Label) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Label) = 0 DROP TABLE dbo.Tmp_Label CREATE  UNIQUE NONCLUSTERED INDEX IX_Label ON dbo.Label (CultureId,LabelCat,LabelKey,CompanyId) IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IX_Label'') CREATE NONCLUSTERED INDEX IX_Label ON dbo.Label(CultureId,LabelCat,LabelKey,CompanyId)')
EXEC ('UPDATE dbo.Label SET LabelDesc = LabelCat + '': '' + LabelKey + '' ('' + b.CultureTypeName + '')'' FROM dbo.Label a INNER JOIN [[?]]Design.dbo.VwCulture b ON a.CultureId = b.CultureId')
   6.  13.20118~@~20~@~M~@~Add table AppZipId~@~N~@~EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AppZipId'')) CREATE TABLE dbo.AppZipId (DocId Int IDENTITY NOT NULL, MasterId Int NOT NULL, DocName NVarChar(100) NOT NULL, MimeType VarChar(100) NOT NULL, DocSize BigInt NOT NULL, DocImage VarBinary(max) NOT NULL, InputBy Int NULL, InputOn DateTime NULL, Active Char(1) NOT NULL, CONSTRAINT PK_AppZipId PRIMARY KEY CLUSTERED (DocId))') EXEC ('') EXEC ('')
   6.  14.20120~@~10~@~M~@~Change table Screen~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId smallint NULL, SearchWidth smallint NULL, SearchAscending char(1) NULL, SearchMode char(1) NULL, GridRows tinyint NULL, GridClass varchar(30) NULL, GridTitle nvarchar(50) NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, MasterPageFile varchar(100) NULL, NeedRegen char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(smallint,SearchId), convert(smallint,SearchWidth), SearchAscending, SearchMode, convert(tinyint,GridRows), GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId SmallInt NULL, SearchWidth SmallInt NULL, SearchAscending Char(1) NOT NULL, SearchMode Char(1) NULL, GridRows TinyInt NULL, GridClass VarChar(30) NULL, GridTitle NVarChar(50) NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, MasterPageFile VarChar(100) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_MasterPageFile DEFAULT (''Default.master'') FOR MasterPageFile ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen CREATE  UNIQUE NONCLUSTERED INDEX IX_Screen_ProgramName ON dbo.Screen (ProgramName)')
   6.  16.20201~@~10~@~M~@~Change table UtReportDel~@~Y~@~EXEC ('DROP TABLE dbo.UtReportDel')
EXEC ('CREATE TABLE dbo.UtReportDel(UtReportDelId int IDENTITY(1,1) NOT NULL, ReportId int NOT NULL, ProgramName varchar(100) NOT NULL, CONSTRAINT PK_UtReportDel PRIMARY KEY CLUSTERED (UtReportDelId))')
   6.  17.20208~@~10~@~M~@~Change all combobox to autocomplete~@~Y~@~EXEC ('UPDATE dbo.ScreenCri SET DisplayModeId = 38 WHERE DisplayModeId in (18,22)')
EXEC ('UPDATE dbo.ScreenObj SET DisplayModeId = 38 WHERE DisplayModeId in (18,22)')
EXEC ('UPDATE dbo.ReportCri SET DisplayModeId = 38 FROM dbo.ReportCri a INNER JOIN dbo.Report b ON a.ReportId = b.ReportId  WHERE a.DisplayModeId in (18,22) AND b.ReportTypeCd <> ''C''')
   6.  18.20214~@~10~@~M~@~Change table Report~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Report (ReportId int NULL, ProgramName varchar(20) NULL, ReportDesc nvarchar(50) NULL, OrientationCd char(1) NULL, ReportTypeCd char(1) NULL, TemplateName varchar(50) NULL, RptTemplateId int NULL, CopyReportId int NULL, TopMargin decimal(8,2) NULL, BottomMargin decimal(8,2) NULL, LeftMargin decimal(8,2) NULL, RightMargin decimal(8,2) NULL, PageHeight decimal(8,2) NULL, PageWidth decimal(8,2) NULL, UnitCd char(2) NULL, WhereClause varchar(1000) NULL, RegClause varchar(400) NULL, RegCode nvarchar(max) NULL, ValClause varchar(400) NULL, ValCode nvarchar(max) NULL, UpdClause varchar(200) NULL, UpdCode nvarchar(max) NULL, XlsClause varchar(200) NULL, XlsCode nvarchar(max) NULL, GenerateRp char(1) NULL, AllowSelect char(1) NULL, ModifiedBy int NULL, ModifiedOn datetime NULL, LastGenDt datetime NULL, CompanyLs varchar(1000) NULL, NeedRegen char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Report (ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplateId, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, NeedRegen) SELECT convert(int,ReportId), ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, convert(int,RptTemplateId), convert(int,CopyReportId), convert(decimal(8,2),TopMargin), convert(decimal(8,2),BottomMargin), convert(decimal(8,2),LeftMargin), convert(decimal(8,2),RightMargin), convert(decimal(8,2),PageHeight), convert(decimal(8,2),PageWidth), UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, convert(int,ModifiedBy), ModifiedOn, LastGenDt, CompanyLs, NeedRegen FROM dbo.Report IF (SELECT COUNT(1) FROM dbo.Tmp_Report) > 0 OR (SELECT COUNT(1) FROM dbo.Report) = 0 DROP TABLE dbo.Report') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Report'')) CREATE TABLE dbo.Report (ReportId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ReportDesc NVarChar(50) NULL, OrientationCd Char(1) NOT NULL, ReportTypeCd Char(1) NOT NULL, TemplateName VarChar(50) NULL, RptTemplate Int NULL, CopyReportId Int NULL, TopMargin Decimal(8,2) NOT NULL, BottomMargin Decimal(8,2) NOT NULL, LeftMargin Decimal(8,2) NOT NULL, RightMargin Decimal(8,2) NOT NULL, PageHeight Decimal(8,2) NOT NULL, PageWidth Decimal(8,2) NOT NULL, UnitCd Char(2) NOT NULL, WhereClause VarChar(1000) NULL, RegClause VarChar(400) NULL, RegCode NVarChar(max) NULL, ValClause VarChar(400) NULL, ValCode NVarChar(max) NULL, UpdClause VarChar(200) NULL, UpdCode NVarChar(max) NULL, XlsClause VarChar(200) NULL, XlsCode NVarChar(max) NULL, GenerateRp Char(1) NOT NULL, AllowSelect Char(1) NOT NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastGenDt DateTime NULL, CompanyLs VarChar(1000) NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Report PRIMARY KEY CLUSTERED (ReportId))') EXEC (' ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_TopMargin DEFAULT (1) FOR TopMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_BottomMargin DEFAULT (1) FOR BottomMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_LeftMargin DEFAULT (1) FOR LeftMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_RightMargin DEFAULT (1) FOR RightMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_PageHeight DEFAULT (11) FOR PageHeight ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_PageWidth DEFAULT (8.5) FOR PageWidth ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_UnitCd DEFAULT (''in'') FOR UnitCd ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_AllowSelect DEFAULT (''N'') FOR AllowSelect ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Report ON INSERT INTO dbo.Report (ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplate, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, NeedRegen) SELECT ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplateId, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, NeedRegen FROM dbo.Tmp_Report SET IDENTITY_INSERT dbo.Report OFF IF (SELECT COUNT(1) FROM dbo.Report) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Report) = 0 DROP TABLE dbo.Tmp_Report CREATE  UNIQUE NONCLUSTERED INDEX IX_Report_ProgramName ON dbo.Report (ProgramName)')
   6.  18.20214~@~20~@~M~@~Remove Search Link if Document then upload column~@~Y~@~EXEC ('UPDATE ScreenObj SET ColumnLink = null WHERE ColumnLink is not null and DisplayModeId = 32')
EXEC ('update ScreenObj set ColumnLink = null, DisplayModeId = 39 where DisplayModeId <> 32 AND ColumnLink like ''Upload.aspx?%''')
   6.  18.20214~@~30~@~M~@~Change table UtReport~@~Y~@~EXEC ('IF EXISTS (SELECT 1 FROM sysobjects where name = ''FK_UtReportCri_UtReport'') ALTER TABLE UtReportCri DROP CONSTRAINT FK_UtReportCri_UtReport')
EXEC ('IF EXISTS (SELECT 1 FROM sysobjects where name = ''FK_UtReportObj_UtReport'') ALTER TABLE UtReportObj DROP CONSTRAINT FK_UtReportObj_UtReport')

EXEC (' CREATE TABLE dbo.Tmp_UtReport (ReportId int NULL, ProgramName varchar(20) NULL, ReportDesc nvarchar(50) NULL, OrientationCd char(1) NULL, ReportTypeCd char(1) NULL, TemplateName varchar(50) NULL, RptTemplateId int NULL, CopyReportId int NULL, TopMargin decimal(8,2) NULL, BottomMargin decimal(8,2) NULL, LeftMargin decimal(8,2) NULL, RightMargin decimal(8,2) NULL, PageHeight decimal(8,2) NULL, PageWidth decimal(8,2) NULL, UnitCd char(2) NULL, WhereClause varchar(1000) NULL, RegClause varchar(400) NULL, RegCode nvarchar(max) NULL, ValClause varchar(400) NULL, ValCode nvarchar(max) NULL, UpdClause varchar(200) NULL, UpdCode nvarchar(max) NULL, XlsClause varchar(200) NULL, XlsCode nvarchar(max) NULL, GenerateRp char(1) NULL, AllowSelect char(1) NULL, ModifiedBy int NULL, ModifiedOn datetime NULL, LastGenDt datetime NULL, CompanyLs varchar(1000) NULL)')
EXEC (' INSERT INTO dbo.Tmp_UtReport (ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplateId, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs) SELECT convert(int,ReportId), ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, convert(int,RptTemplateId), convert(int,CopyReportId), convert(decimal(8,2),TopMargin), convert(decimal(8,2),BottomMargin), convert(decimal(8,2),LeftMargin), convert(decimal(8,2),RightMargin), convert(decimal(8,2),PageHeight), convert(decimal(8,2),PageWidth), UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, convert(int,ModifiedBy), ModifiedOn, LastGenDt, CompanyLs FROM dbo.UtReport IF (SELECT COUNT(1) FROM dbo.Tmp_UtReport) > 0 OR (SELECT COUNT(1) FROM dbo.UtReport) = 0 DROP TABLE dbo.UtReport')
EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UtReport'')) CREATE TABLE dbo.UtReport (ReportId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ReportDesc NVarChar(50) NULL, OrientationCd Char(1) NOT NULL, ReportTypeCd Char(1) NOT NULL, TemplateName VarChar(50) NULL, RptTemplate Int NULL, CopyReportId Int NULL, TopMargin Decimal(8,2) NOT NULL, BottomMargin Decimal(8,2) NOT NULL, LeftMargin Decimal(8,2) NOT NULL, RightMargin Decimal(8,2) NOT NULL, PageHeight Decimal(8,2) NOT NULL, PageWidth Decimal(8,2) NOT NULL, UnitCd Char(2) NOT NULL, WhereClause VarChar(1000) NULL, RegClause VarChar(400) NULL, RegCode NVarChar(max) NULL, ValClause VarChar(400) NULL, ValCode NVarChar(max) NULL, UpdClause VarChar(200) NULL, UpdCode NVarChar(max) NULL, XlsClause VarChar(200) NULL, XlsCode NVarChar(max) NULL, GenerateRp Char(1) NOT NULL, AllowSelect Char(1) NOT NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastGenDt DateTime NULL, CompanyLs VarChar(1000) NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_UtReport PRIMARY KEY CLUSTERED (ReportId))')
EXEC (' ALTER TABLE dbo.UtReport ADD CONSTRAINT DF_UtReport_TopMargin DEFAULT (1) FOR TopMargin ALTER TABLE dbo.UtReport ADD CONSTRAINT DF_UtReport_BottomMargin DEFAULT (1) FOR BottomMargin ALTER TABLE dbo.UtReport ADD CONSTRAINT DF_UtReport_LeftMargin DEFAULT (1) FOR LeftMargin ALTER TABLE dbo.UtReport ADD CONSTRAINT DF_UtReport_RightMargin DEFAULT (1) FOR RightMargin ALTER TABLE dbo.UtReport ADD CONSTRAINT DF_UtReport_PageHeight DEFAULT (11) FOR PageHeight ALTER TABLE dbo.UtReport ADD CONSTRAINT DF_UtReport_PageWidth DEFAULT (8.5) FOR PageWidth ALTER TABLE dbo.UtReport ADD CONSTRAINT DF_UtReport_UnitCd DEFAULT (''in'') FOR UnitCd ALTER TABLE dbo.UtReport ADD CONSTRAINT DF_UtReport_AllowSelect DEFAULT (''N'') FOR AllowSelect ALTER TABLE dbo.UtReport ADD CONSTRAINT DF_UtReport_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.UtReport ON INSERT INTO dbo.UtReport (ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplate, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, NeedRegen) SELECT ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplateId, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, ''N'' FROM dbo.Tmp_UtReport SET IDENTITY_INSERT dbo.UtReport OFF IF (SELECT COUNT(1) FROM dbo.UtReport) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UtReport) = 0 DROP TABLE dbo.Tmp_UtReport CREATE  UNIQUE NONCLUSTERED INDEX IX_UtReport_ProgramName ON dbo.UtReport (ProgramName)')
   6.  22.20229~@~10~@~M~@~Remove index on DbColumn table~@~Y~@~IF EXISTS (SELECT 1 FROM sysobjects WHERE name = 'IX_DbColumn') EXEC ('DROP INDEX DbColumn.IX_DbColumn')
   6.  24.20306~@~10~@~M~@~Change table Screen~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId smallint NULL, SearchWidth smallint NULL, SearchAscending char(1) NULL, SearchMode char(1) NULL, GridRows tinyint NULL, GridClass varchar(30) NULL, GridTitle nvarchar(50) NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, MasterPageFile varchar(100) NULL, NeedRegen char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(smallint,SearchId), convert(smallint,SearchWidth), SearchAscending, SearchMode, convert(tinyint,GridRows), GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId SmallInt NULL, SearchWidth SmallInt NULL, SearchAscending Char(1) NOT NULL, SearchMode Char(1) NULL, NumCols TinyInt NOT NULL, GridRows TinyInt NULL, GridClass VarChar(30) NULL, GridTitle NVarChar(50) NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, MasterPageFile VarChar(100) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NumCols DEFAULT (1) FOR NumCols ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_MasterPageFile DEFAULT (''Default.master'') FOR MasterPageFile ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, 1, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen CREATE  UNIQUE NONCLUSTERED INDEX IX_Screen_ProgramName ON dbo.Screen (ProgramName)')
   6.  24.20306~@~20~@~M~@~Add table CtNumCols~@~N~@~IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id('dbo.CtNumCols'))
BEGIN
EXEC ('CREATE TABLE dbo.CtNumCols (NumCols TinyInt NOT NULL, CONSTRAINT PK_CtNumCols PRIMARY KEY CLUSTERED (NumCols))')
EXEC ('INSERT dbo.CtNumCols SELECT 1')
EXEC ('INSERT dbo.CtNumCols SELECT 2')
EXEC ('INSERT dbo.CtNumCols SELECT 3')
END
   6.  38.20409~@~10~@~M~@~Change table RowOvrdPrm~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_RowOvrdPrm (RowOvrdPrmId smallint NULL, RowOvrdId smallint NULL, PermKeyId smallint NULL, SelLevel char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_RowOvrdPrm (RowOvrdPrmId, RowOvrdId, PermKeyId, SelLevel) SELECT convert(smallint,RowOvrdPrmId), convert(smallint,RowOvrdId), convert(smallint,PermKeyId), SelLevel FROM dbo.RowOvrdPrm IF (SELECT COUNT(1) FROM dbo.Tmp_RowOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.RowOvrdPrm) = 0 DROP TABLE dbo.RowOvrdPrm') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.RowOvrdPrm'')) CREATE TABLE dbo.RowOvrdPrm (RowOvrdPrmId SmallInt IDENTITY NOT NULL, RowOvrdId SmallInt NOT NULL, PermKeyId SmallInt NOT NULL, SelLevel Char(1) NOT NULL, AndCondition Char(1) NOT NULL, CONSTRAINT PK_RowOvrdPrm PRIMARY KEY CLUSTERED (RowOvrdPrmId))') EXEC (' ALTER TABLE dbo.RowOvrdPrm ADD CONSTRAINT DF_RowOvrdPrm_AndCondition DEFAULT (''Y'') FOR AndCondition SET IDENTITY_INSERT dbo.RowOvrdPrm ON INSERT INTO dbo.RowOvrdPrm (RowOvrdPrmId, RowOvrdId, PermKeyId, SelLevel, AndCondition) SELECT RowOvrdPrmId, RowOvrdId, PermKeyId, SelLevel, ''Y'' FROM dbo.Tmp_RowOvrdPrm SET IDENTITY_INSERT dbo.RowOvrdPrm OFF IF (SELECT COUNT(1) FROM dbo.RowOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_RowOvrdPrm) = 0 DROP TABLE dbo.Tmp_RowOvrdPrm')

EXEC ('UPDATE RowOvrdPrm SET AndCondition = b.AndCondition FROM dbo.RowOvrdPrm a INNER JOIN [[?]]Design.dbo.CtPermKey b ON a.PermKeyId = b.CtPermKeyId')
   6.  38.20409~@~20~@~M~@~Add table CtAndOr~@~N~@~EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtAndOr'')) CREATE TABLE dbo.CtAndOr (AndOrCd Char(1) NOT NULL, AndOrName NVarChar(10) NOT NULL, CONSTRAINT PK_CtAndOr PRIMARY KEY CLUSTERED (AndOrCd))')
EXEC ('IF (SELECT COUNT(1) FROM dbo.CtAndOr) <= 0 BEGIN INSERT INTO dbo.CtAndOr VALUES (''Y'',''AND'') INSERT INTO dbo.CtAndOr VALUES (''N'',''OR'') END')
   6.  40.20416~@~10~@~M~@~Reinitialize ScreenGrp~@~Y~@~EXEC('
DECLARE @id5 int
DECLARE @id6 int
DECLARE @id7 int
DECLARE @id8 int
DECLARE @id9 int
SELECT @id5 = 0, @id6 = 0, @id7 = 0, @id8 = 0, @id9 = 0
SET IDENTITY_INSERT dbo.ScreenGrp ON
IF EXISTS (SELECT 1 FROM dbo.ScreenGrp WHERE ScreenGrpId = 5 AND ScreenGrpName <> ''Tab1'')
BEGIN
	SELECT @id5 = max(ScreenGrpId) FROM dbo.ScreenGrp
	IF @id5 < 9 SELECT @id5 = 10 ELSE SELECT @id5 = @id5 + 1
	INSERT dbo.ScreenGrp (ScreenGrpId,ScreenId,ScreenGrpTypeCd,ParentGrpId,ScreenGrpName,TabIndex,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth,GrpStyle) 
		SELECT @id5,ScreenId,ScreenGrpTypeCd,ParentGrpId,ScreenGrpName,TabIndex,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth,GrpStyle FROM dbo.ScreenGrp WHERE ScreenGrpId = 5
	UPDATE dbo.ScreenCri SET ScreenGrpId = @id5 WHERE ScreenGrpId = 5
	UPDATE dbo.ScreenObj SET ScreenGrpId = @id5 WHERE ScreenGrpId = 5
	DELETE FROM dbo.ScreenGrp WHERE ScreenGrpId = 5
END
IF EXISTS (SELECT 1 FROM dbo.ScreenGrp WHERE ScreenGrpId = 6 AND ScreenGrpName <> ''Tab1Col1'')
BEGIN
	SELECT @id6 = max(ScreenGrpId) FROM dbo.ScreenGrp
	IF @id6 < 9 SELECT @id6 = 10 ELSE SELECT @id6 = @id6 + 1
	INSERT dbo.ScreenGrp (ScreenGrpId,ScreenId,ScreenGrpTypeCd,ParentGrpId,ScreenGrpName,TabIndex,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth,GrpStyle)
		SELECT @id6,ScreenId,ScreenGrpTypeCd,ParentGrpId,ScreenGrpName,TabIndex,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth,GrpStyle FROM dbo.ScreenGrp WHERE ScreenGrpId = 6
	UPDATE dbo.ScreenCri SET ScreenGrpId = @id6 WHERE ScreenGrpId = 6
	UPDATE dbo.ScreenObj SET ScreenGrpId = @id6 WHERE ScreenGrpId = 6
	DELETE FROM dbo.ScreenGrp WHERE ScreenGrpId = 6
END
IF EXISTS (SELECT 1 FROM dbo.ScreenGrp WHERE ScreenGrpId = 7 AND ScreenGrpName <> ''Tab1Col2'')
BEGIN
	SELECT @id7 = max(ScreenGrpId) FROM dbo.ScreenGrp
	IF @id7 < 9 SELECT @id7 = 10 ELSE SELECT @id7 = @id7 + 1
	INSERT dbo.ScreenGrp (ScreenGrpId,ScreenId,ScreenGrpTypeCd,ParentGrpId,ScreenGrpName,TabIndex,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth,GrpStyle)
		SELECT @id7,ScreenId,ScreenGrpTypeCd,ParentGrpId,ScreenGrpName,TabIndex,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth,GrpStyle FROM dbo.ScreenGrp WHERE ScreenGrpId = 7
	UPDATE dbo.ScreenCri SET ScreenGrpId = @id7 WHERE ScreenGrpId = 7
	UPDATE dbo.ScreenObj SET ScreenGrpId = @id7 WHERE ScreenGrpId = 7
	DELETE FROM dbo.ScreenGrp WHERE ScreenGrpId = 7
END
IF EXISTS (SELECT 1 FROM dbo.ScreenGrp WHERE ScreenGrpId = 8 AND ScreenGrpName <> ''Tab1Col3'')
BEGIN
	SELECT @id8 = max(ScreenGrpId) FROM dbo.ScreenGrp
	IF @id8 < 9 SELECT @id8 = 10 ELSE SELECT @id8 = @id8 + 1
	INSERT dbo.ScreenGrp (ScreenGrpId,ScreenId,ScreenGrpTypeCd,ParentGrpId,ScreenGrpName,TabIndex,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth,GrpStyle)
		SELECT @id8,ScreenId,ScreenGrpTypeCd,ParentGrpId,ScreenGrpName,TabIndex,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth,GrpStyle FROM dbo.ScreenGrp WHERE ScreenGrpId = 8
	UPDATE dbo.ScreenCri SET ScreenGrpId = @id8 WHERE ScreenGrpId = 8
	UPDATE dbo.ScreenObj SET ScreenGrpId = @id8 WHERE ScreenGrpId = 8
	DELETE FROM dbo.ScreenGrp WHERE ScreenGrpId = 8
END
IF EXISTS (SELECT 1 FROM dbo.ScreenGrp WHERE ScreenGrpId = 9 AND ScreenGrpName <> ''Tab1Col4'')
BEGIN
	SELECT @id9 = max(ScreenGrpId) FROM dbo.ScreenGrp
	IF @id9 < 9 SELECT @id9 = 10 ELSE SELECT @id9 = @id9 + 1
	INSERT dbo.ScreenGrp (ScreenGrpId,ScreenId,ScreenGrpTypeCd,ParentGrpId,ScreenGrpName,TabIndex,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth,GrpStyle)
	SELECT @id9,ScreenId,ScreenGrpTypeCd,ParentGrpId,ScreenGrpName,TabIndex,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth,GrpStyle FROM dbo.ScreenGrp WHERE ScreenGrpId = 9
	UPDATE dbo.ScreenCri SET ScreenGrpId = @id9 WHERE ScreenGrpId = 9
	UPDATE dbo.ScreenObj SET ScreenGrpId = @id9 WHERE ScreenGrpId = 9
	DELETE FROM dbo.ScreenGrp WHERE ScreenGrpId = 9
END
IF @id5 <> 0 UPDATE dbo.ScreenGrp SET ParentGrpId = @id5 WHERE ParentGrpId = 5
IF @id6 <> 0 UPDATE dbo.ScreenGrp SET ParentGrpId = @id6 WHERE ParentGrpId = 6
IF @id7 <> 0 UPDATE dbo.ScreenGrp SET ParentGrpId = @id7 WHERE ParentGrpId = 7
IF @id8 <> 0 UPDATE dbo.ScreenGrp SET ParentGrpId = @id8 WHERE ParentGrpId = 8
IF @id9 <> 0 UPDATE dbo.ScreenGrp SET ParentGrpId = @id9 WHERE ParentGrpId = 9
IF NOT EXISTS (SELECT 1 FROM dbo.ScreenGrp WHERE ScreenGrpId = 5 AND ScreenGrpName = ''Tab1'')
BEGIN
	INSERT dbo.ScreenGrp (ScreenGrpId,ParentGrpId,ScreenGrpName,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth)
	VALUES (5,3,''Tab1'',0,''N'',''N'',0)
END
IF NOT EXISTS (SELECT 1 FROM dbo.ScreenGrp WHERE ScreenGrpId = 6 AND ScreenGrpName = ''Tab1Col1'')
BEGIN
	INSERT dbo.ScreenGrp (ScreenGrpId,ParentGrpId,ScreenGrpName,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth)
	VALUES (6,5,''Tab1Col1'',0,''Y'',''N'',0)
END
IF NOT EXISTS (SELECT 1 FROM dbo.ScreenGrp WHERE ScreenGrpId = 7 AND ScreenGrpName = ''Tab1Col2'')
BEGIN
	INSERT dbo.ScreenGrp (ScreenGrpId,ParentGrpId,ScreenGrpName,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth)
	VALUES (7,5,''Tab1Col2'',0,''Y'',''N'',0)
END
IF NOT EXISTS (SELECT 1 FROM dbo.ScreenGrp WHERE ScreenGrpId = 8 AND ScreenGrpName = ''Tab1Col3'')
BEGIN
	INSERT dbo.ScreenGrp (ScreenGrpId,ParentGrpId,ScreenGrpName,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth)
	VALUES (8,5,''Tab1Col3'',0,''Y'',''N'',0)
END
IF NOT EXISTS (SELECT 1 FROM dbo.ScreenGrp WHERE ScreenGrpId = 9 AND ScreenGrpName = ''Tab1Col4'')
BEGIN
	INSERT dbo.ScreenGrp (ScreenGrpId,ParentGrpId,ScreenGrpName,ScreenGrpIndex,ContentVertical,LabelVertical,BorderWidth)
	VALUES (9,5,''Tab1Col4'',0,''Y'',''N'',0)
END
SET IDENTITY_INSERT dbo.ScreenGrp OFF
')
   6.  40.20416~@~20~@~M~@~Add function fMenu~@~Y~@~IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id('dbo.fMenu'))
EXEC ('CREATE FUNCTION dbo.fMenu() RETURNS TABLE 
AS
RETURN 
(
	SELECT MenuId, MenuName FROM dbo.Menu
)')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.VwMenu'')) DROP VIEW dbo.VwMenu')
   6.  43.20420~@~10~@~M~@~Change table ScreenObj~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObj (ScreenObjId int NULL, ScreenId int NULL, MasterTable char(1) NULL, ScreenGrpId int NULL, LabelCss varchar(100) NULL, ContentCss varchar(100) NULL, ColumnId int NULL, ColumnName varchar(20) NULL, ColumnDesc varchar(100) NULL, DefaultValue nvarchar(100) NULL, SystemValue nvarchar(100) NULL, ColumnWrap char(1) NULL, ColumnJustify char(1) NULL, ColumnSize smallint NULL, ColumnHeight smallint NULL, DisplayModeId tinyint NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, TabFolderId int NULL, TabIndex smallint NULL, SortOrder smallint NULL, RequiredValid char(1) NULL, MaskValid varchar(50) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, SystemValue, ColumnWrap, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd) SELECT convert(int,ScreenObjId), convert(int,ScreenId), MasterTable, convert(int,ScreenGrpId), LabelCss, ContentCss, convert(int,ColumnId), ColumnName, ColumnDesc, DefaultValue, SystemValue, ColumnWrap, ColumnJustify, convert(smallint,ColumnSize), convert(smallint,ColumnHeight), convert(tinyint,DisplayModeId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), AggregateCd, GenerateSp, convert(int,TabFolderId), convert(smallint,TabIndex), convert(smallint,SortOrder), RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObj'')) CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, ScreenGrpId Int NOT NULL, LabelCss VarChar(100) NULL, ContentCss VarChar(100) NULL, ColumnId Int NULL, ColumnName VarChar(20) NOT NULL, ColumnDesc VarChar(100) NULL, DefaultValue NVarChar(100) NULL, SystemValue NVarChar(100) NULL, ColumnWrap Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ColumnHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(50) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, SystemValue, ColumnWrap, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, SystemValue, ColumnWrap, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, ''Y'' FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj CREATE  NONCLUSTERED INDEX IX_ScreenObj_ScreenId ON dbo.ScreenObj (ScreenId,TabIndex)')
   6.  45.20518~@~10~@~M~@~Change Custom Label Description~@~Y~@~UPDATE dbo.Label SET
LabelDesc = LabelCat + ': ' + ISNULL(RIGHT('000'+CONVERT(varchar,SortOrder),4)+' ','') + LabelKey + ' (' + b.CultureTypeName + ')'
FROM dbo.Label a INNER JOIN [[?]]Design.dbo.VwCulture b ON a.CultureId = b.CultureId
   6.  46.20522~@~10~@~M~@~Add criteria display view~@~N~@~IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id('dbo.VwDisplayType'))
EXEC ('DROP VIEW dbo.VwDisplayType')
EXEC ('CREATE VIEW dbo.VwDisplayType AS SELECT TypeId, TypeName, TypeDesc, DisplayDefault FROM dbo.CtDisplayType
WHERE TypeId IN (1,3,4,5,17,18,20,33,35,38,40)')

EXEC ('UPDATE dbo.ReportCri SET DisplayModeId = 33 where DisplayModeId in (8,19,30,31,34)')
EXEC ('UPDATE dbo.ScreenCri SET DisplayModeId = 33 where DisplayModeId in (8,19,30,31,34)')
EXEC ('UPDATE dbo.ReportCri SET DisplayModeId = 1 where DisplayModeId in (9,16)')
EXEC ('UPDATE dbo.ScreenCri SET DisplayModeId = 1 where DisplayModeId in (9,16)')
   6.  46.20522~@~20~@~M~@~Drop redundant table CtRptDisplay~@~N~@~IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id('dbo.CtRptDisplay'))
EXEC ('DROP TABLE dbo.CtRptDisplay')
   6.  51.20610~@~10~@~M~@~Change table DbColumn~@~Y~@~ EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_DbColumn_DbTable'') ALTER TABLE dbo.DbColumn DROP CONSTRAINT FK_DbColumn_DbTable CREATE TABLE dbo.Tmp_DbColumn (ColumnId int NULL, TableId int NULL, ExternalTable varchar(50) NULL, ColumnName varchar(20) NULL, ColumnDesc varchar(100) NULL, DataType tinyint NULL, ColumnLength smallint NULL, ColumnScale tinyint NULL, AllowNulls char(1) NULL, ColumnIdentity char(1) NULL, PrimaryKey char(1) NULL, IsIndex char(1) NULL, ColObjective nvarchar(200) NULL, PrevColName varchar(20) NULL, ColumnIndex smallint NULL, DefaultValue nvarchar(50) NULL)') EXEC (' INSERT INTO dbo.Tmp_DbColumn (ColumnId, TableId, ExternalTable, ColumnName, ColumnDesc, DataType, ColumnLength, ColumnScale, AllowNulls, ColumnIdentity, PrimaryKey, IsIndex, ColObjective, PrevColName, ColumnIndex, DefaultValue) SELECT convert(int,ColumnId), convert(int,TableId), ExternalTable, ColumnName, ColumnDesc, convert(tinyint,DataType), convert(smallint,ColumnLength), convert(tinyint,ColumnScale), AllowNulls, ColumnIdentity, PrimaryKey, IsIndex, ColObjective, PrevColName, convert(smallint,ColumnIndex), DefaultValue FROM dbo.DbColumn IF (SELECT COUNT(1) FROM dbo.Tmp_DbColumn) > 0 OR (SELECT COUNT(1) FROM dbo.DbColumn) = 0 DROP TABLE dbo.DbColumn') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.DbColumn'')) CREATE TABLE dbo.DbColumn (ColumnId Int IDENTITY NOT NULL, TableId Int NOT NULL, ColumnIndex SmallInt NULL, ExternalTable VarChar(50) NULL, ColumnName VarChar(20) NOT NULL, ColumnDesc VarChar(100) NULL, DataType TinyInt NOT NULL, ColumnLength SmallInt NOT NULL, ColumnScale TinyInt NULL, DefaultValue NVarChar(50) NULL, AllowNulls Char(1) NOT NULL, ColumnIdentity Char(1) NOT NULL, PrimaryKey Char(1) NOT NULL, IsIndexU Char(1) NOT NULL, IsIndex Char(1) NOT NULL, ColObjective NVarChar(200) NULL, PrevColName VarChar(20) NULL, CONSTRAINT PK_DbColumn PRIMARY KEY CLUSTERED (ColumnId))') EXEC (' ALTER TABLE dbo.DbColumn ADD CONSTRAINT DF_DbColumn_IsIndexU DEFAULT (''N'') FOR IsIndexU ALTER TABLE dbo.DbColumn ADD CONSTRAINT DF_DbColumn_IsIndex DEFAULT (''N'') FOR IsIndex SET IDENTITY_INSERT dbo.DbColumn ON INSERT INTO dbo.DbColumn (ColumnId, TableId, ColumnIndex, ExternalTable, ColumnName, ColumnDesc, DataType, ColumnLength, ColumnScale, DefaultValue, AllowNulls, ColumnIdentity, PrimaryKey, IsIndexU, IsIndex, ColObjective, PrevColName) SELECT ColumnId, TableId, ColumnIndex, ExternalTable, ColumnName, ColumnDesc, DataType, ColumnLength, ColumnScale, DefaultValue, AllowNulls, ColumnIdentity, PrimaryKey, ''N'', IsIndex, ColObjective, PrevColName FROM dbo.Tmp_DbColumn SET IDENTITY_INSERT dbo.DbColumn OFF IF (SELECT COUNT(1) FROM dbo.DbColumn) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_DbColumn) = 0 DROP TABLE dbo.Tmp_DbColumn ALTER TABLE dbo.DbColumn WITH NOCHECK ADD CONSTRAINT FK_DbColumn_DbTable FOREIGN KEY (TableId) REFERENCES dbo.DbTable (TableId)')
   6.  51.20610~@~20~@~M~@~Change table Wizard~@~Y~@~ EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_WizardObj_Wizard'') ALTER TABLE dbo.WizardObj DROP CONSTRAINT FK_WizardObj_Wizard CREATE TABLE dbo.Tmp_Wizard (WizardId int NULL, WizardTypeId tinyint NULL, MasterTableId int NULL, WizardTitle nvarchar(50) NULL, ProgramName varchar(50) NULL, DefWorkSheet nvarchar(50) NULL, DefStartRow smallint NULL, DefOverwrite char(1) NULL, OvwrReadonly char(1) NULL, NeedRegen char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Wizard (WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, NeedRegen) SELECT convert(int,WizardId), convert(tinyint,WizardTypeId), convert(int,MasterTableId), WizardTitle, ProgramName, DefWorkSheet, convert(smallint,DefStartRow), DefOverwrite, OvwrReadonly, NeedRegen FROM dbo.Wizard IF (SELECT COUNT(1) FROM dbo.Tmp_Wizard) > 0 OR (SELECT COUNT(1) FROM dbo.Wizard) = 0 DROP TABLE dbo.Wizard') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Wizard'')) CREATE TABLE dbo.Wizard (WizardId Int IDENTITY NOT NULL, WizardTypeId TinyInt NOT NULL, MasterTableId Int NOT NULL, WizardTitle NVarChar(50) NOT NULL, ProgramName VarChar(50) NOT NULL, DefWorkSheet NVarChar(50) NOT NULL, DefStartRow SmallInt NOT NULL, DefOverwrite Char(1) NOT NULL, OvwrReadonly Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Wizard PRIMARY KEY CLUSTERED (WizardId))') EXEC (' ALTER TABLE dbo.Wizard ADD CONSTRAINT DF_Wizard_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Wizard ON INSERT INTO dbo.Wizard (WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, NeedRegen) SELECT WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, NeedRegen FROM dbo.Tmp_Wizard SET IDENTITY_INSERT dbo.Wizard OFF IF (SELECT COUNT(1) FROM dbo.Wizard) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Wizard) = 0 DROP TABLE dbo.Tmp_Wizard ALTER TABLE dbo.WizardObj WITH NOCHECK ADD CONSTRAINT FK_WizardObj_Wizard FOREIGN KEY (WizardId) REFERENCES dbo.Wizard (WizardId) IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_Wizard'') CREATE UNIQUE NONCLUSTERED INDEX IU_Wizard ON dbo.Wizard(ProgramName)')
   6.  51.20610~@~30~@~M~@~Change table ServerRule~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ServerRule (ServerRuleId int NULL, ScreenId int NULL, RuleTypeId tinyint NULL, MasterTable char(1) NULL, RuleName nvarchar(100) NULL, RuleDesc nvarchar(150) NULL, RuleDescription nvarchar(500) NULL, RuleOrder smallint NULL, ProcedureName varchar(28) NULL, ParameterNames varchar(200) NULL, ParameterTypes varchar(200) NULL, CallingParams varchar(200) NULL, OnAdd char(1) NULL, OnUpd char(1) NULL, OnDel char(1) NULL, BeforeCRUD char(1) NULL, RuleCode nvarchar(max) NULL, ModifiedBy int NULL, ModifiedOn datetime NULL, LastGenDt datetime NULL)') EXEC (' INSERT INTO dbo.Tmp_ServerRule (ServerRuleId, ScreenId, RuleTypeId, MasterTable, RuleName, RuleDesc, RuleDescription, RuleOrder, ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, ModifiedBy, ModifiedOn, LastGenDt) SELECT convert(int,ServerRuleId), convert(int,ScreenId), convert(tinyint,RuleTypeId), MasterTable, RuleName, RuleDesc, RuleDescription, convert(smallint,RuleOrder), ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, convert(int,ModifiedBy), ModifiedOn, LastGenDt FROM dbo.ServerRule IF (SELECT COUNT(1) FROM dbo.Tmp_ServerRule) > 0 OR (SELECT COUNT(1) FROM dbo.ServerRule) = 0 DROP TABLE dbo.ServerRule') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ServerRule'')) CREATE TABLE dbo.ServerRule (ServerRuleId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, RuleTypeId TinyInt NOT NULL, MasterTable Char(1) NOT NULL, RuleName NVarChar(100) NOT NULL, RuleDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, RuleOrder SmallInt NOT NULL, ProcedureName VarChar(28) NOT NULL, ParameterNames VarChar(200) NULL, ParameterTypes VarChar(200) NULL, CallingParams VarChar(200) NULL, OnAdd Char(1) NOT NULL, OnUpd Char(1) NOT NULL, OnDel Char(1) NOT NULL, BeforeCRUD Char(1) NOT NULL, RuleCode NVarChar(max) NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastGenDt DateTime NULL, CONSTRAINT PK_ServerRule PRIMARY KEY CLUSTERED (ServerRuleId))') EXEC (' SET IDENTITY_INSERT dbo.ServerRule ON INSERT INTO dbo.ServerRule (ServerRuleId, ScreenId, RuleTypeId, MasterTable, RuleName, RuleDesc, RuleDescription, RuleOrder, ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, ModifiedBy, ModifiedOn, LastGenDt) SELECT ServerRuleId, ScreenId, RuleTypeId, MasterTable, RuleName, RuleDesc, RuleDescription, RuleOrder, ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, ModifiedBy, ModifiedOn, LastGenDt FROM dbo.Tmp_ServerRule SET IDENTITY_INSERT dbo.ServerRule OFF IF (SELECT COUNT(1) FROM dbo.ServerRule) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ServerRule) = 0 DROP TABLE dbo.Tmp_ServerRule IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IX_ServerRule'') CREATE NONCLUSTERED INDEX IX_ServerRule ON dbo.ServerRule(ScreenId,RuleOrder)')
   6.  57.20727~@~10~@~M~@~Update image references~@~Y~@~UPDATE Menu SET IconUrl = REPLACE(IconUrl,'image','~/image') where CHARINDEX('~',IconUrl) <> 1

UPDATE ScreenObj SET DefaultValue = replace(replace(b.ColumnHeader,'\','/'),'../','~/')
FROM ScreenObj a INNER JOIN ScreenObjHlp b ON a.ScreenObjId = b.ScreenObjId AND CultureId = 1
WHERE a.DisplayModeId = 28 AND a.ColumnId is null AND a.DefaultValue is null AND b.ColumnHeader is not null

UPDATE ScreenObjHlp SET ColumnHeader = null
FROM ScreenObj a INNER JOIN ScreenObjHlp b ON a.ScreenObjId = b.ScreenObjId
WHERE a.DisplayModeId = 28 AND a.ColumnId is null AND b.ColumnHeader is not null
   6.  57.20727~@~20~@~M~@~Add column to Rptwizcat~@~Y~@~IF NOT EXISTS (SELECT 1 FROM dbo.syscolumns WHERE name='SampleImage')
BEGIN
	ALTER TABLE dbo.RptWizCat DROP COLUMN RptWizCatImg
	ALTER TABLE dbo.RptWizCat ADD SampleImage varbinary(max) null
END
   6.  57.20727~@~30~@~M~@~Change all ComboBox to AutoComplete in ReportCri~@~Y~@~update ReportCri set DisplayModeId = 38 where DisplayModeId in (18,22)
   6.  57.20727~@~40~@~M~@~Change table Usr~@~N~@~EXEC ('CREATE TABLE dbo.Tmp_Usr (UsrId int NULL, LoginName nvarchar(32) NULL, UsrEmail nvarchar(50) NULL, UsrName nvarchar(50) NULL, UsrPassword varbinary(32) NULL, ConfirmPwd varbinary(32) NULL, ExtPassword varbinary(255) NULL, CultureId smallint NULL, InternalUsr char(1) NULL, TechnicalUsr char(1) NULL, UsrGroupLs varchar(1000) NULL, CompanyLs varchar(1000) NULL, ProjectLs varchar(1000) NULL, InvestorId int NULL, CustomerId int NULL, VendorId int NULL, AgentId int NULL, BrokerId int NULL, MemberId int NULL, DefSystemId tinyint NULL, DefProjectId smallint NULL, DefCompanyId int NULL, FailedAttempt tinyint NULL, FailedAttemptFP tinyint NULL, LastFailedDt datetime NULL, LastSuccessDt datetime NULL, LastPwdChgDt datetime NULL, HintQuestionId tinyint NULL, HintAnswer nvarchar(50) NULL, Active char(1) NULL, ModifiedOn datetime NULL, UsrImprLink varchar(200) NULL, PwdDuration smallint NULL, PwdWarn smallint NULL)')
 EXEC ('INSERT INTO dbo.Tmp_Usr (UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, PwdDuration, PwdWarn) SELECT convert(int,UsrId), LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, convert(smallint,CultureId), InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, convert(int,InvestorId), convert(int,CustomerId), convert(int,VendorId), convert(int,AgentId), convert(int,BrokerId), convert(int,MemberId), convert(tinyint,DefSystemId), convert(smallint,DefProjectId), convert(int,DefCompanyId), convert(tinyint,FailedAttempt), convert(tinyint,FailedAttemptFP), LastFailedDt, LastSuccessDt, LastPwdChgDt, convert(tinyint,HintQuestionId), HintAnswer, Active, ModifiedOn, UsrImprLink, convert(smallint,PwdDuration), convert(smallint,PwdWarn) FROM dbo.Usr IF (SELECT COUNT(1) FROM dbo.Tmp_Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Usr) = 0 DROP TABLE dbo.Usr')
 EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Usr'')) CREATE TABLE dbo.Usr (UsrId Int IDENTITY NOT NULL, LoginName NVarChar(32) NOT NULL, UsrEmail NVarChar(50) NULL, UsrName NVarChar(50) NULL, UsrPassword VarBinary(32) NULL, ConfirmPwd VarBinary(32) NULL, ExtPassword VarBinary(255) NULL, CultureId SmallInt NOT NULL, InternalUsr Char(1) NOT NULL, TechnicalUsr Char(1) NOT NULL, UsrGroupLs VarChar(1000) NOT NULL, CompanyLs VarChar(1000) NULL, ProjectLs VarChar(1000) NULL, InvestorId Int NULL, CustomerId Int NULL, VendorId Int NULL, AgentId Int NULL, BrokerId Int NULL, MemberId Int NULL, DefSystemId TinyInt NOT NULL, DefProjectId SmallInt NULL, DefCompanyId Int NULL, FailedAttempt TinyInt NULL, FailedAttemptFP TinyInt NULL, LastFailedDt DateTime NULL, LastSuccessDt DateTime NULL, LastPwdChgDt DateTime NULL, HintQuestionId TinyInt NULL, HintAnswer NVarChar(50) NULL, Active Char(1) NOT NULL, ModifiedOn DateTime NOT NULL, UsrImprLink VarChar(200) NULL, PwdDuration SmallInt NOT NULL, PwdWarn SmallInt NOT NULL, PicMed VarBinary(max) NULL, CONSTRAINT PK_Usr PRIMARY KEY CLUSTERED (UsrId))')
 EXEC ('ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_CultureId DEFAULT (1) FOR CultureId ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_InternalUsr DEFAULT (''N'') FOR InternalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_TechnicalUsr DEFAULT (''N'') FOR TechnicalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdDuration DEFAULT (9999) FOR PwdDuration ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdWarn DEFAULT (0) FOR PwdWarn SET IDENTITY_INSERT dbo.Usr ON INSERT INTO dbo.Usr (UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, PwdDuration, PwdWarn) SELECT UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, PwdDuration, PwdWarn FROM dbo.Tmp_Usr SET IDENTITY_INSERT dbo.Usr OFF IF (SELECT COUNT(1) FROM dbo.Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Usr) = 0 DROP TABLE dbo.Tmp_Usr CREATE  NONCLUSTERED INDEX IX_Usr_UsrName ON dbo.Usr (UsrName) CREATE  UNIQUE NONCLUSTERED INDEX IX_Usr_LoginName ON dbo.Usr (LoginName)')
   6.  58.20810~@~10~@~M~@~Change table Entity~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_Entity (EntityId smallint NULL, EntityName nvarchar(100) NULL, EntityCode varchar(10) NULL, DeployPath varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_Entity (EntityId, EntityName, EntityCode, DeployPath) SELECT convert(smallint,EntityId), EntityName, EntityCode, DeployPath FROM dbo.Entity IF (SELECT COUNT(1) FROM dbo.Tmp_Entity) > 0 OR (SELECT COUNT(1) FROM dbo.Entity) = 0 DROP TABLE dbo.Entity') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Entity'')) CREATE TABLE dbo.Entity (EntityId SmallInt NOT NULL, EntityImg VarBinary(max) NULL, EntityName NVarChar(100) NOT NULL, EntityCode VarChar(10) NOT NULL, DeployPath VarChar(100) NOT NULL, CONSTRAINT PK_Entity PRIMARY KEY CLUSTERED (EntityId))') EXEC (' INSERT INTO dbo.Entity (EntityId, EntityName, EntityCode, DeployPath) SELECT EntityId, EntityName, EntityCode, DeployPath FROM dbo.Tmp_Entity IF (SELECT COUNT(1) FROM dbo.Entity) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Entity) = 0 DROP TABLE dbo.Tmp_Entity')
   6.  60.20824~@~10~@~M~@~Change table CtButtonType~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_CtButtonType (ButtonTypeId tinyint NULL, ObjectType char(1) NULL, ButtonTypeName varchar(20) NULL, ButtonTypeDesc nvarchar(50) NULL, ButtonVisible char(1) NULL, ButtonIsImage char(1) NULL, ButtonImage varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_CtButtonType (ButtonTypeId, ObjectType, ButtonTypeName, ButtonTypeDesc, ButtonVisible, ButtonIsImage, ButtonImage) SELECT convert(tinyint,ButtonTypeId), ObjectType, ButtonTypeName, ButtonTypeDesc, ButtonVisible, ButtonIsImage, ButtonImage FROM dbo.CtButtonType IF (SELECT COUNT(1) FROM dbo.Tmp_CtButtonType) > 0 OR (SELECT COUNT(1) FROM dbo.CtButtonType) = 0 DROP TABLE dbo.CtButtonType') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtButtonType'')) CREATE TABLE dbo.CtButtonType (ButtonTypeId TinyInt NOT NULL, ObjectType Char(1) NOT NULL, ButtonTypeName VarChar(20) NOT NULL, ButtonTypeDesc NVarChar(50) NOT NULL, ButtonVisible Char(1) NOT NULL, ButtonIsImage Char(1) NOT NULL, CONSTRAINT PK_CtButtonType PRIMARY KEY CLUSTERED (ButtonTypeId))') EXEC (' INSERT INTO dbo.CtButtonType (ButtonTypeId, ObjectType, ButtonTypeName, ButtonTypeDesc, ButtonVisible, ButtonIsImage) SELECT ButtonTypeId, ObjectType, ButtonTypeName, ButtonTypeDesc, ButtonVisible, ButtonIsImage FROM dbo.Tmp_CtButtonType IF (SELECT COUNT(1) FROM dbo.CtButtonType) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtButtonType) = 0 DROP TABLE dbo.Tmp_CtButtonType CREATE  UNIQUE NONCLUSTERED INDEX IX_CtButtonType ON dbo.CtButtonType (ObjectType,ButtonTypeName)')
   6.  60.20824~@~20~@~M~@~Change table ButtonHlp~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ButtonHlp (ButtonHlpId int NULL, ScreenId int NULL, ReportId int NULL, WizardId int NULL, CultureId smallint NULL, ButtonTypeId tinyint NULL, ButtonName nvarchar(20) NULL, ButtonToolTip nvarchar(100) NULL, ButtonVisible char(1) NULL, ButtonIsImage char(1) NULL, ButtonImage varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_ButtonHlp (ButtonHlpId, ScreenId, ReportId, WizardId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip, ButtonVisible, ButtonIsImage, ButtonImage) SELECT convert(int,ButtonHlpId), convert(int,ScreenId), convert(int,ReportId), convert(int,WizardId), convert(smallint,CultureId), convert(tinyint,ButtonTypeId), ButtonName, ButtonToolTip, ButtonVisible, ButtonIsImage, ButtonImage FROM dbo.ButtonHlp IF (SELECT COUNT(1) FROM dbo.Tmp_ButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.ButtonHlp) = 0 DROP TABLE dbo.ButtonHlp') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ButtonHlp'')) CREATE TABLE dbo.ButtonHlp (ButtonHlpId Int IDENTITY NOT NULL, ScreenId Int NULL, ReportId Int NULL, WizardId Int NULL, CultureId SmallInt NOT NULL, ButtonTypeId TinyInt NOT NULL, ButtonName NVarChar(20) NULL, ButtonToolTip NVarChar(100) NULL, ButtonVisible Char(1) NOT NULL, ButtonIsImage Char(1) NOT NULL, CONSTRAINT PK_ButtonHlp PRIMARY KEY CLUSTERED (ButtonHlpId))') EXEC (' SET IDENTITY_INSERT dbo.ButtonHlp ON INSERT INTO dbo.ButtonHlp (ButtonHlpId, ScreenId, ReportId, WizardId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip, ButtonVisible, ButtonIsImage) SELECT ButtonHlpId, ScreenId, ReportId, WizardId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip, ButtonVisible, ButtonIsImage FROM dbo.Tmp_ButtonHlp SET IDENTITY_INSERT dbo.ButtonHlp OFF IF (SELECT COUNT(1) FROM dbo.ButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ButtonHlp) = 0 DROP TABLE dbo.Tmp_ButtonHlp CREATE  UNIQUE NONCLUSTERED INDEX IX_ButtonHlp ON dbo.ButtonHlp (ScreenId,ReportId,WizardId,CultureId,ButtonTypeId)')
   6.  61.20828~@~10~@~M~@~Change table ReportCri~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ReportCri (ReportCriId int NULL, ReportId int NULL, ReportCriDesc varchar(100) NULL, ReportGrpId int NULL, LabelCss varchar(100) NULL, ContentCss varchar(100) NULL, TableId int NULL, TableAbbr varchar(10) NULL, ColumnName varchar(20) NULL, TabIndex smallint NULL, DataTypeId tinyint NULL, DataTypeSize smallint NULL, DisplayModeId tinyint NULL, ColumnSize smallint NULL, RowSize smallint NULL, DdlKeyColumnName varchar(50) NULL, DdlRefColumnName varchar(50) NULL, DdlSrtColumnName varchar(50) NULL, RequiredValid char(1) NULL, WhereClause varchar(1000) NULL, RegClause varchar(400) NULL)') EXEC (' INSERT INTO dbo.Tmp_ReportCri (ReportCriId, ReportId, ReportCriDesc, ReportGrpId, LabelCss, ContentCss, TableId, TableAbbr, ColumnName, TabIndex, DataTypeId, DataTypeSize, DisplayModeId, ColumnSize, RowSize, DdlKeyColumnName, DdlRefColumnName, DdlSrtColumnName, RequiredValid, WhereClause, RegClause) SELECT convert(int,ReportCriId), convert(int,ReportId), ReportCriDesc, convert(int,ReportGrpId), LabelCss, ContentCss, convert(int,TableId), TableAbbr, ColumnName, convert(smallint,TabIndex), convert(tinyint,DataTypeId), convert(smallint,DataTypeSize), convert(tinyint,DisplayModeId), convert(smallint,ColumnSize), convert(smallint,RowSize), DdlKeyColumnName, DdlRefColumnName, DdlSrtColumnName, RequiredValid, WhereClause, RegClause FROM dbo.ReportCri IF (SELECT COUNT(1) FROM dbo.Tmp_ReportCri) > 0 OR (SELECT COUNT(1) FROM dbo.ReportCri) = 0 DROP TABLE dbo.ReportCri') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ReportCri'')) CREATE TABLE dbo.ReportCri (ReportCriId Int IDENTITY NOT NULL, ReportId Int NOT NULL, ReportCriDesc VarChar(100) NULL, ReportGrpId Int NOT NULL, LabelCss VarChar(100) NULL, ContentCss VarChar(100) NULL, TableId Int NULL, TableAbbr VarChar(10) NULL, ColumnName VarChar(20) NOT NULL, TabIndex SmallInt NOT NULL, DataTypeId TinyInt NOT NULL, DataTypeSize SmallInt NULL, DisplayModeId TinyInt NOT NULL, ColumnSize SmallInt NULL, RowSize SmallInt NULL, DdlKeyColumnName VarChar(50) NULL, DdlRefColumnName VarChar(50) NULL, DdlSrtColumnName VarChar(50) NULL, RequiredValid Char(1) NOT NULL, DefaultValue NVarChar(100) NULL, WhereClause VarChar(1000) NULL, RegClause VarChar(400) NULL, CONSTRAINT PK_ReportCri PRIMARY KEY CLUSTERED (ReportCriId))') EXEC (' SET IDENTITY_INSERT dbo.ReportCri ON INSERT INTO dbo.ReportCri (ReportCriId, ReportId, ReportCriDesc, ReportGrpId, LabelCss, ContentCss, TableId, TableAbbr, ColumnName, TabIndex, DataTypeId, DataTypeSize, DisplayModeId, ColumnSize, RowSize, DdlKeyColumnName, DdlRefColumnName, DdlSrtColumnName, RequiredValid, WhereClause, RegClause) SELECT ReportCriId, ReportId, ReportCriDesc, ReportGrpId, LabelCss, ContentCss, TableId, TableAbbr, ColumnName, TabIndex, DataTypeId, DataTypeSize, DisplayModeId, ColumnSize, RowSize, DdlKeyColumnName, DdlRefColumnName, DdlSrtColumnName, RequiredValid, WhereClause, RegClause FROM dbo.Tmp_ReportCri SET IDENTITY_INSERT dbo.ReportCri OFF IF (SELECT COUNT(1) FROM dbo.ReportCri) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ReportCri) = 0 DROP TABLE dbo.Tmp_ReportCri CREATE  UNIQUE NONCLUSTERED INDEX IX_ReportCri_ReportId ON dbo.ReportCri (ReportId,TabIndex,ColumnName)')
   6.  61.20828~@~20~@~M~@~Change table Report~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Report (ReportId int NULL, ProgramName varchar(20) NULL, ReportDesc nvarchar(50) NULL, OrientationCd char(1) NULL, ReportTypeCd char(1) NULL, TemplateName varchar(50) NULL, RptTemplate int NULL, CopyReportId int NULL, TopMargin decimal(8,2) NULL, BottomMargin decimal(8,2) NULL, LeftMargin decimal(8,2) NULL, RightMargin decimal(8,2) NULL, PageHeight decimal(8,2) NULL, PageWidth decimal(8,2) NULL, UnitCd char(2) NULL, WhereClause varchar(1000) NULL, RegClause varchar(400) NULL, RegCode nvarchar(max) NULL, ValClause varchar(400) NULL, ValCode nvarchar(max) NULL, UpdClause varchar(200) NULL, UpdCode nvarchar(max) NULL, XlsClause varchar(200) NULL, XlsCode nvarchar(max) NULL, GenerateRp char(1) NULL, AllowSelect char(1) NULL, ModifiedBy int NULL, ModifiedOn datetime NULL, LastGenDt datetime NULL, CompanyLs varchar(1000) NULL, NeedRegen char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Report (ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplate, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, NeedRegen) SELECT convert(int,ReportId), ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, convert(int,RptTemplate), convert(int,CopyReportId), convert(decimal(8,2),TopMargin), convert(decimal(8,2),BottomMargin), convert(decimal(8,2),LeftMargin), convert(decimal(8,2),RightMargin), convert(decimal(8,2),PageHeight), convert(decimal(8,2),PageWidth), UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, convert(int,ModifiedBy), ModifiedOn, LastGenDt, CompanyLs, NeedRegen FROM dbo.Report IF (SELECT COUNT(1) FROM dbo.Tmp_Report) > 0 OR (SELECT COUNT(1) FROM dbo.Report) = 0 DROP TABLE dbo.Report') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Report'')) CREATE TABLE dbo.Report (ReportId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ReportDesc NVarChar(50) NULL, OrientationCd Char(1) NOT NULL, ReportTypeCd Char(1) NOT NULL, TemplateName VarChar(50) NULL, RptTemplate Int NULL, CopyReportId Int NULL, TopMargin Decimal(8,2) NOT NULL, BottomMargin Decimal(8,2) NOT NULL, LeftMargin Decimal(8,2) NOT NULL, RightMargin Decimal(8,2) NOT NULL, PageHeight Decimal(8,2) NOT NULL, PageWidth Decimal(8,2) NOT NULL, UnitCd Char(2) NOT NULL, WhereClause VarChar(1000) NULL, RegClause VarChar(400) NULL, RegCode NVarChar(max) NULL, ValClause VarChar(400) NULL, ValCode NVarChar(max) NULL, UpdClause VarChar(200) NULL, UpdCode NVarChar(max) NULL, XlsClause VarChar(200) NULL, XlsCode NVarChar(max) NULL, GenerateRp Char(1) NOT NULL, AllowSelect Char(1) NOT NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastGenDt DateTime NULL, CompanyLs VarChar(1000) NULL, NeedRegen Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, CONSTRAINT PK_Report PRIMARY KEY CLUSTERED (ReportId))') EXEC (' ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_TopMargin DEFAULT (1) FOR TopMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_BottomMargin DEFAULT (1) FOR BottomMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_LeftMargin DEFAULT (1) FOR LeftMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_RightMargin DEFAULT (1) FOR RightMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_PageHeight DEFAULT (11) FOR PageHeight ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_PageWidth DEFAULT (8.5) FOR PageWidth ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_UnitCd DEFAULT (''in'') FOR UnitCd ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_AllowSelect DEFAULT (''N'') FOR AllowSelect ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_AuthRequired DEFAULT (''Y'') FOR AuthRequired SET IDENTITY_INSERT dbo.Report ON INSERT INTO dbo.Report (ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplate, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, NeedRegen, AuthRequired) SELECT ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplate, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, NeedRegen, ''Y'' FROM dbo.Tmp_Report SET IDENTITY_INSERT dbo.Report OFF IF (SELECT COUNT(1) FROM dbo.Report) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Report) = 0 DROP TABLE dbo.Tmp_Report CREATE  UNIQUE NONCLUSTERED INDEX IX_Report_ProgramName ON dbo.Report (ProgramName)')
   6.  61.20828~@~30~@~M~@~Change table Screen~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId smallint NULL, SearchWidth smallint NULL, SearchAscending char(1) NULL, SearchMode char(1) NULL, NumCols tinyint NULL, GridRows tinyint NULL, GridClass varchar(30) NULL, GridTitle nvarchar(50) NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, MasterPageFile varchar(100) NULL, NeedRegen char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(smallint,SearchId), convert(smallint,SearchWidth), SearchAscending, SearchMode, convert(tinyint,NumCols), convert(tinyint,GridRows), GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId SmallInt NULL, SearchWidth SmallInt NULL, SearchAscending Char(1) NOT NULL, SearchMode Char(1) NULL, NumCols TinyInt NOT NULL, GridRows TinyInt NULL, GridClass VarChar(30) NULL, GridTitle NVarChar(50) NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, MasterPageFile VarChar(100) NOT NULL, NeedRegen Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NumCols DEFAULT (1) FOR NumCols ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_MasterPageFile DEFAULT (''Default.master'') FOR MasterPageFile ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen, AuthRequired) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen, ''Y'' FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen CREATE  UNIQUE NONCLUSTERED INDEX IX_Screen_ProgramName ON dbo.Screen (ProgramName)')
   6.  61.20828~@~40~@~M~@~Change table Wizard~@~Y~@~ EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_WizardObj_Wizard'') ALTER TABLE dbo.WizardObj DROP CONSTRAINT FK_WizardObj_Wizard CREATE TABLE dbo.Tmp_Wizard (WizardId int NULL, WizardTypeId tinyint NULL, MasterTableId int NULL, WizardTitle nvarchar(50) NULL, ProgramName varchar(50) NULL, DefWorkSheet nvarchar(50) NULL, DefStartRow smallint NULL, DefOverwrite char(1) NULL, OvwrReadonly char(1) NULL, NeedRegen char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Wizard (WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, NeedRegen) SELECT convert(int,WizardId), convert(tinyint,WizardTypeId), convert(int,MasterTableId), WizardTitle, ProgramName, DefWorkSheet, convert(smallint,DefStartRow), DefOverwrite, OvwrReadonly, NeedRegen FROM dbo.Wizard IF (SELECT COUNT(1) FROM dbo.Tmp_Wizard) > 0 OR (SELECT COUNT(1) FROM dbo.Wizard) = 0 DROP TABLE dbo.Wizard') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Wizard'')) CREATE TABLE dbo.Wizard (WizardId Int IDENTITY NOT NULL, WizardTypeId TinyInt NOT NULL, MasterTableId Int NOT NULL, WizardTitle NVarChar(50) NOT NULL, ProgramName VarChar(50) NOT NULL, DefWorkSheet NVarChar(50) NOT NULL, DefStartRow SmallInt NOT NULL, DefOverwrite Char(1) NOT NULL, OvwrReadonly Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, CONSTRAINT PK_Wizard PRIMARY KEY CLUSTERED (WizardId))') EXEC (' ALTER TABLE dbo.Wizard ADD CONSTRAINT DF_Wizard_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Wizard ADD CONSTRAINT DF_Wizard_AuthRequired DEFAULT (''Y'') FOR AuthRequired SET IDENTITY_INSERT dbo.Wizard ON INSERT INTO dbo.Wizard (WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, NeedRegen, AuthRequired) SELECT WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, NeedRegen, ''Y'' FROM dbo.Tmp_Wizard SET IDENTITY_INSERT dbo.Wizard OFF IF (SELECT COUNT(1) FROM dbo.Wizard) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Wizard) = 0 DROP TABLE dbo.Tmp_Wizard ALTER TABLE dbo.WizardObj WITH NOCHECK ADD CONSTRAINT FK_WizardObj_Wizard FOREIGN KEY (WizardId) REFERENCES dbo.Wizard (WizardId) IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_Wizard'') CREATE UNIQUE NONCLUSTERED INDEX IU_Wizard ON dbo.Wizard(ProgramName)')
   6.  61.20828~@~50~@~M~@~Change table UsrPref~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_UsrPref (UsrPrefId int NULL, UsrId int NULL, UsrGroupId smallint NULL, CompanyId int NULL, MemberId int NULL, AgentId int NULL, BrokerId int NULL, CustomerId int NULL, InvestorId int NULL, VendorId int NULL, ProjectId smallint NULL, SystemId tinyint NULL, PrefDefault char(1) NULL, UsrPrefDesc nvarchar(50) NULL, SysListVisible char(1) NULL, ComListVisible char(1) NULL, PrjListVisible char(1) NULL, MenuOptId int NULL, PageBannerImg varchar(100) NULL, UsrStyleSheet varchar(max) NULL, SplashImg varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_UsrPref (UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, PageBannerImg, UsrStyleSheet, SplashImg) SELECT convert(int,UsrPrefId), convert(int,UsrId), convert(smallint,UsrGroupId), convert(int,CompanyId), convert(int,MemberId), convert(int,AgentId), convert(int,BrokerId), convert(int,CustomerId), convert(int,InvestorId), convert(int,VendorId), convert(smallint,ProjectId), convert(tinyint,SystemId), PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, convert(int,MenuOptId), PageBannerImg, UsrStyleSheet, SplashImg FROM dbo.UsrPref IF (SELECT COUNT(1) FROM dbo.Tmp_UsrPref) > 0 OR (SELECT COUNT(1) FROM dbo.UsrPref) = 0 DROP TABLE dbo.UsrPref') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrPref'')) CREATE TABLE dbo.UsrPref (UsrPrefId Int IDENTITY NOT NULL, UsrId Int NULL, UsrGroupId SmallInt NULL, CompanyId Int NULL, MemberId Int NULL, AgentId Int NULL, BrokerId Int NULL, CustomerId Int NULL, InvestorId Int NULL, VendorId Int NULL, ProjectId SmallInt NULL, SystemId TinyInt NULL, PrefDefault Char(1) NOT NULL, UsrPrefDesc NVarChar(50) NOT NULL, SysListVisible Char(1) NOT NULL, ComListVisible Char(1) NOT NULL, PrjListVisible Char(1) NOT NULL, MenuOptId Int NOT NULL, PageBannerImg VarChar(100) NULL, UsrStyleSheet VarChar(max) NULL, SplashImg VarChar(100) NULL, MasterPgFile VarChar(100) NULL, CONSTRAINT PK_UsrPref PRIMARY KEY CLUSTERED (UsrPrefId))') EXEC (' ALTER TABLE dbo.UsrPref ADD CONSTRAINT DF_UsrPref_PrjListVisible DEFAULT (''N'') FOR PrjListVisible SET IDENTITY_INSERT dbo.UsrPref ON INSERT INTO dbo.UsrPref (UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, PageBannerImg, UsrStyleSheet, SplashImg) SELECT UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, PageBannerImg, UsrStyleSheet, SplashImg FROM dbo.Tmp_UsrPref SET IDENTITY_INSERT dbo.UsrPref OFF IF (SELECT COUNT(1) FROM dbo.UsrPref) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UsrPref) = 0 DROP TABLE dbo.Tmp_UsrPref')
   6.  61.20828~@~60~@~M~@~Change table Screen~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId smallint NULL, SearchWidth smallint NULL, SearchAscending char(1) NULL, SearchMode char(1) NULL, NumCols tinyint NULL, GridRows tinyint NULL, GridClass varchar(30) NULL, GridTitle nvarchar(50) NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, MasterPageFile varchar(100) NULL, NeedRegen char(1) NULL, AuthRequired char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen, AuthRequired) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(smallint,SearchId), convert(smallint,SearchWidth), SearchAscending, SearchMode, convert(tinyint,NumCols), convert(tinyint,GridRows), GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, MasterPageFile, NeedRegen, AuthRequired FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId SmallInt NULL, SearchWidth SmallInt NULL, SearchAscending Char(1) NOT NULL, SearchMode Char(1) NULL, NumCols TinyInt NOT NULL, GridRows TinyInt NULL, GridClass VarChar(30) NULL, GridTitle NVarChar(50) NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NumCols DEFAULT (1) FOR NumCols ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, NeedRegen, AuthRequired) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, NeedRegen, AuthRequired FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen CREATE  UNIQUE NONCLUSTERED INDEX IX_Screen_ProgramName ON dbo.Screen (ProgramName)')
   6.  62.20829~@~10~@~M~@~Change table UsrPref~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_UsrPref (UsrPrefId int NULL, UsrId int NULL, UsrGroupId smallint NULL, CompanyId int NULL, MemberId int NULL, AgentId int NULL, BrokerId int NULL, CustomerId int NULL, InvestorId int NULL, VendorId int NULL, ProjectId smallint NULL, SystemId tinyint NULL, PrefDefault char(1) NULL, UsrPrefDesc nvarchar(50) NULL, SysListVisible char(1) NULL, ComListVisible char(1) NULL, PrjListVisible char(1) NULL, MenuOptId int NULL, PageBannerImg varchar(100) NULL, UsrStyleSheet varchar(max) NULL, SplashImg varchar(100) NULL, MasterPgFile varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_UsrPref (UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, PageBannerImg, UsrStyleSheet, SplashImg, MasterPgFile) SELECT convert(int,UsrPrefId), convert(int,UsrId), convert(smallint,UsrGroupId), convert(int,CompanyId), convert(int,MemberId), convert(int,AgentId), convert(int,BrokerId), convert(int,CustomerId), convert(int,InvestorId), convert(int,VendorId), convert(smallint,ProjectId), convert(tinyint,SystemId), PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, convert(int,MenuOptId), PageBannerImg, UsrStyleSheet, SplashImg, MasterPgFile FROM dbo.UsrPref IF (SELECT COUNT(1) FROM dbo.Tmp_UsrPref) > 0 OR (SELECT COUNT(1) FROM dbo.UsrPref) = 0 DROP TABLE dbo.UsrPref') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrPref'')) CREATE TABLE dbo.UsrPref (UsrPrefId Int IDENTITY NOT NULL, UsrId Int NULL, UsrGroupId SmallInt NULL, CompanyId Int NULL, MemberId Int NULL, AgentId Int NULL, BrokerId Int NULL, CustomerId Int NULL, InvestorId Int NULL, VendorId Int NULL, ProjectId SmallInt NULL, SystemId TinyInt NULL, PrefDefault Char(1) NOT NULL, UsrPrefDesc NVarChar(50) NOT NULL, SysListVisible Char(1) NOT NULL, ComListVisible Char(1) NOT NULL, PrjListVisible Char(1) NOT NULL, MenuOptId Int NOT NULL, PageBannerImg VarChar(100) NULL, UsrStyleSheet VarChar(max) NULL, SplashImg VarChar(100) NULL, MasterPgFile VarChar(100) NULL, SampleImage VarBinary(max) NULL, CONSTRAINT PK_UsrPref PRIMARY KEY CLUSTERED (UsrPrefId))') EXEC (' ALTER TABLE dbo.UsrPref ADD CONSTRAINT DF_UsrPref_PrjListVisible DEFAULT (''N'') FOR PrjListVisible SET IDENTITY_INSERT dbo.UsrPref ON INSERT INTO dbo.UsrPref (UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, PageBannerImg, UsrStyleSheet, SplashImg, MasterPgFile) SELECT UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, PageBannerImg, UsrStyleSheet, SplashImg, MasterPgFile FROM dbo.Tmp_UsrPref SET IDENTITY_INSERT dbo.UsrPref OFF IF (SELECT COUNT(1) FROM dbo.UsrPref) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UsrPref) = 0 DROP TABLE dbo.Tmp_UsrPref')
   6.  64.20912~@~10~@~M~@~Change table StaticPg~@~Y~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.StaticPg'')) CREATE TABLE dbo.StaticPg (StaticPgId Int IDENTITY NOT NULL, StaticPgTitle NVarChar(50) NOT NULL, StaticPgCss NVarChar(max) NULL, StaticPgHtm NVarChar(max) NOT NULL, MasterPgFile VarChar(100) NULL, CONSTRAINT PK_StaticPg PRIMARY KEY CLUSTERED (StaticPgId))') EXEC ('') EXEC ('') EXEC ('')
   6.  65.20913~@~10~@~M~@~Change table Menu~@~Y~@~ EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_MenuHlp_Menu'') ALTER TABLE dbo.MenuHlp DROP CONSTRAINT FK_MenuHlp_Menu CREATE TABLE dbo.Tmp_Menu (MenuId int NULL, MenuIndex smallint NULL, MenuName varchar(30) NULL, MenuDesc nvarchar(100) NULL, Miscellaneous varchar(500) NULL, ParentId int NULL, ReportId int NULL, ScreenId int NULL, WizardId int NULL, IconUrl nvarchar(500) NULL)') EXEC (' INSERT INTO dbo.Tmp_Menu (MenuId, MenuIndex, MenuName, MenuDesc, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, IconUrl) SELECT convert(int,MenuId), convert(smallint,MenuIndex), MenuName, MenuDesc, Miscellaneous, convert(int,ParentId), convert(int,ReportId), convert(int,ScreenId), convert(int,WizardId), IconUrl FROM dbo.Menu IF (SELECT COUNT(1) FROM dbo.Tmp_Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Menu) = 0 DROP TABLE dbo.Menu') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Menu'')) CREATE TABLE dbo.Menu (MenuId Int IDENTITY NOT NULL, MenuIndex SmallInt NOT NULL, MenuName VarChar(30) NOT NULL, MenuDesc NVarChar(100) NULL, Miscellaneous VarChar(100) NULL, ParentId Int NULL, ReportId Int NULL, ScreenId Int NULL, WizardId Int NULL, StaticPgId Int NULL, IconUrl NVarChar(300) NULL, CONSTRAINT PK_Menu PRIMARY KEY CLUSTERED (MenuId))') EXEC (' SET IDENTITY_INSERT dbo.Menu ON INSERT INTO dbo.Menu (MenuId, MenuIndex, MenuName, MenuDesc, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, IconUrl) SELECT MenuId, MenuIndex, MenuName, MenuDesc, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, IconUrl FROM dbo.Tmp_Menu SET IDENTITY_INSERT dbo.Menu OFF IF (SELECT COUNT(1) FROM dbo.Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Menu) = 0 DROP TABLE dbo.Tmp_Menu CREATE  NONCLUSTERED INDEX IX_Menu_ParentId ON dbo.Menu (ParentId,MenuIndex) ALTER TABLE dbo.MenuHlp WITH NOCHECK ADD CONSTRAINT FK_MenuHlp_Menu FOREIGN KEY (MenuId) REFERENCES dbo.Menu (MenuId)')
   6.  67.20921~@~10~@~M~@~Change table Screen~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId smallint NULL, SearchWidth smallint NULL, SearchAscending char(1) NULL, SearchMode char(1) NULL, NumCols tinyint NULL, GridRows tinyint NULL, GridClass varchar(30) NULL, GridTitle nvarchar(50) NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, NeedRegen char(1) NULL, AuthRequired char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, NeedRegen, AuthRequired) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(smallint,SearchId), convert(smallint,SearchWidth), SearchAscending, SearchMode, convert(tinyint,NumCols), convert(tinyint,GridRows), GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, NeedRegen, AuthRequired FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId Int NULL, SearchWidth SmallInt NULL, SearchAscending Char(1) NOT NULL, SearchMode Char(1) NULL, NumCols TinyInt NOT NULL, GridRows TinyInt NULL, GridClass VarChar(30) NULL, GridTitle NVarChar(50) NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NumCols DEFAULT (1) FOR NumCols ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, NeedRegen, AuthRequired) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, CONVERT(Int,SearchId), SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, NeedRegen, AuthRequired FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen CREATE  UNIQUE NONCLUSTERED INDEX IX_Screen_ProgramName ON dbo.Screen (ProgramName)')
   6.  67.20921~@~20~@~M~@~Change table CtDisplayType~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_CtDisplayType (TypeId tinyint NULL, TypeName varchar(20) NULL, TypeDesc varchar(20) NULL, DisplayDefault char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_CtDisplayType (TypeId, TypeName, TypeDesc, DisplayDefault) SELECT convert(tinyint,TypeId), TypeName, TypeDesc, DisplayDefault FROM dbo.CtDisplayType IF (SELECT COUNT(1) FROM dbo.Tmp_CtDisplayType) > 0 OR (SELECT COUNT(1) FROM dbo.CtDisplayType) = 0 DROP TABLE dbo.CtDisplayType') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtDisplayType'')) CREATE TABLE dbo.CtDisplayType (TypeId TinyInt NOT NULL, TypeName VarChar(20) NOT NULL, TypeDesc VarChar(20) NOT NULL, DisplayDesc NVarChar(1000) NULL, DisplayDefault Char(1) NOT NULL, CONSTRAINT PK_CtDisplayType PRIMARY KEY CLUSTERED (TypeId))') EXEC (' INSERT INTO dbo.CtDisplayType (TypeId, TypeName, TypeDesc, DisplayDefault) SELECT TypeId, TypeName, TypeDesc, DisplayDefault FROM dbo.Tmp_CtDisplayType IF (SELECT COUNT(1) FROM dbo.CtDisplayType) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtDisplayType) = 0 DROP TABLE dbo.Tmp_CtDisplayType')
   6.  67.20921~@~30~@~M~@~Change table ClientTier~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_ClientTier (ClientTierId tinyint NULL, ClientTierName nvarchar(50) NULL, EntityId int NULL, LanguageCd char(1) NULL, FrameworkCd char(1) NULL, DevProgramPath varchar(100) NULL, WsProgramPath varchar(100) NULL, XlsProgramPath varchar(100) NULL, DevCompilePath varchar(100) NULL, WsCompilePath varchar(100) NULL, XlsCompilePath varchar(100) NULL, IsDefault char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_ClientTier (ClientTierId, ClientTierName, EntityId, LanguageCd, FrameworkCd, DevProgramPath, WsProgramPath, XlsProgramPath, DevCompilePath, WsCompilePath, XlsCompilePath, IsDefault) SELECT convert(tinyint,ClientTierId), ClientTierName, convert(int,EntityId), LanguageCd, FrameworkCd, DevProgramPath, WsProgramPath, XlsProgramPath, DevCompilePath, WsCompilePath, XlsCompilePath, IsDefault FROM dbo.ClientTier IF (SELECT COUNT(1) FROM dbo.Tmp_ClientTier) > 0 OR (SELECT COUNT(1) FROM dbo.ClientTier) = 0 DROP TABLE dbo.ClientTier') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ClientTier'')) CREATE TABLE dbo.ClientTier (ClientTierId TinyInt NOT NULL, ClientTierName NVarChar(50) NOT NULL, EntityId Int NOT NULL, LanguageCd Char(1) NOT NULL, FrameworkCd Char(1) NOT NULL, DevProgramPath VarChar(100) NOT NULL, WsProgramPath VarChar(100) NULL, XlsProgramPath VarChar(100) NULL, DevCompilePath VarChar(100) NULL, WsCompilePath VarChar(100) NULL, XlsCompilePath VarChar(100) NULL, CombineAsm Char(1) NOT NULL, IsDefault Char(1) NOT NULL, CONSTRAINT PK_ClientTier PRIMARY KEY CLUSTERED (ClientTierId))') EXEC (' ALTER TABLE dbo.ClientTier ADD CONSTRAINT DF_ClientTier_CombineAsm DEFAULT (''N'') FOR CombineAsm INSERT INTO dbo.ClientTier (ClientTierId, ClientTierName, EntityId, LanguageCd, FrameworkCd, DevProgramPath, WsProgramPath, XlsProgramPath, DevCompilePath, WsCompilePath, XlsCompilePath, CombineAsm, IsDefault) SELECT ClientTierId, ClientTierName, EntityId, LanguageCd, FrameworkCd, DevProgramPath, WsProgramPath, XlsProgramPath, DevCompilePath, WsCompilePath, XlsCompilePath, ''N'', IsDefault FROM dbo.Tmp_ClientTier IF (SELECT COUNT(1) FROM dbo.ClientTier) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ClientTier) = 0 DROP TABLE dbo.Tmp_ClientTier')
   6.  69.20926~@~10~@~M~@~Change table StaticJs~@~Y~@~EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.StaticJs'')) CREATE TABLE dbo.StaticJs (StaticJsId SmallInt IDENTITY NOT NULL, StaticJsNm NVarChar(200) NOT NULL, ScriptDef NVarChar(max) NULL, CONSTRAINT PK_StaticJs PRIMARY KEY CLUSTERED (StaticJsId))') EXEC ('') EXEC ('') EXEC ('')
   6.  69.20926~@~20~@~M~@~Change table StaticCs~@~Y~@~EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.StaticCs'')) CREATE TABLE dbo.StaticCs (StaticCsId SmallInt IDENTITY NOT NULL, StaticCsNm NVarChar(200) NOT NULL, StyleDef NVarChar(max) NULL, CONSTRAINT PK_StaticCs PRIMARY KEY CLUSTERED (StaticCsId))') EXEC ('') EXEC ('') EXEC ('')
   6.  69.20926~@~30~@~M~@~Change table StaticFi~@~Y~@~EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.StaticFi'')) CREATE TABLE dbo.StaticFi (StaticFiId Int IDENTITY NOT NULL, StaticFiUrl NVarChar(200) NOT NULL, CONSTRAINT PK_StaticFi PRIMARY KEY CLUSTERED (StaticFiId))') EXEC ('') EXEC ('') EXEC ('')
   6.  69.20926~@~40~@~M~@~Change table StaticPg~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_StaticPg (StaticPgId int NULL, StaticPgTitle nvarchar(50) NULL, StaticPgCss nvarchar(max) NULL, StaticPgHtm nvarchar(max) NULL, MasterPgFile varchar(100) NULL)')
EXEC ('INSERT INTO dbo.Tmp_StaticPg (StaticPgId, StaticPgTitle, StaticPgCss, StaticPgHtm, MasterPgFile) SELECT convert(int,StaticPgId), StaticPgTitle, StaticPgCss, StaticPgHtm, MasterPgFile FROM dbo.StaticPg IF (SELECT COUNT(1) FROM dbo.Tmp_StaticPg) > 0 OR (SELECT COUNT(1) FROM dbo.StaticPg) = 0 DROP TABLE dbo.StaticPg')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.StaticPg'')) CREATE TABLE dbo.StaticPg (StaticPgId Int IDENTITY NOT NULL, StaticPgTitle NVarChar(50) NOT NULL, StaticPgCss NVarChar(max) NULL, StaticPgJs NVarChar(max) NULL, StaticPgHtm NVarChar(max) NOT NULL, MasterPgFile VarChar(100) NULL, StaticCsId SmallInt NULL, StaticJsId SmallInt NULL, CONSTRAINT PK_StaticPg PRIMARY KEY CLUSTERED (StaticPgId))')
EXEC ('SET IDENTITY_INSERT dbo.StaticPg ON INSERT INTO dbo.StaticPg (StaticPgId, StaticPgTitle, StaticPgCss, StaticPgHtm, MasterPgFile) SELECT StaticPgId, StaticPgTitle, StaticPgCss, StaticPgHtm, MasterPgFile FROM dbo.Tmp_StaticPg SET IDENTITY_INSERT dbo.StaticPg OFF IF (SELECT COUNT(1) FROM dbo.StaticPg) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_StaticPg) = 0 DROP TABLE dbo.Tmp_StaticPg')
   6.  70.20927~@~10~@~M~@~Change table StaticPg~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_StaticPg (StaticPgId int NULL, StaticPgTitle nvarchar(50) NULL, StaticPgCss nvarchar(max) NULL, StaticPgJs nvarchar(max) NULL, StaticPgHtm nvarchar(max) NULL, MasterPgFile varchar(100) NULL, StaticCsId smallint NULL, StaticJsId smallint NULL)') EXEC (' INSERT INTO dbo.Tmp_StaticPg (StaticPgId, StaticPgTitle, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, StaticCsId, StaticJsId) SELECT convert(int,StaticPgId), StaticPgTitle, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, convert(smallint,StaticCsId), convert(smallint,StaticJsId) FROM dbo.StaticPg IF (SELECT COUNT(1) FROM dbo.Tmp_StaticPg) > 0 OR (SELECT COUNT(1) FROM dbo.StaticPg) = 0 DROP TABLE dbo.StaticPg') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.StaticPg'')) CREATE TABLE dbo.StaticPg (StaticPgId Int IDENTITY NOT NULL, StaticPgNm VarChar(50) NULL, StaticPgTitle NVarChar(100) NOT NULL, StaticPgCss NVarChar(max) NULL, StaticPgJs NVarChar(max) NULL, StaticPgHtm NVarChar(max) NOT NULL, MasterPgFile VarChar(100) NULL, StaticCsId SmallInt NULL, StaticJsId SmallInt NULL, CONSTRAINT PK_StaticPg PRIMARY KEY CLUSTERED (StaticPgId))') EXEC (' SET IDENTITY_INSERT dbo.StaticPg ON INSERT INTO dbo.StaticPg (StaticPgId, StaticPgTitle, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, StaticCsId, StaticJsId) SELECT StaticPgId, StaticPgTitle, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, StaticCsId, StaticJsId FROM dbo.Tmp_StaticPg SET IDENTITY_INSERT dbo.StaticPg OFF IF (SELECT COUNT(1) FROM dbo.StaticPg) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_StaticPg) = 0 DROP TABLE dbo.Tmp_StaticPg')
   6.  70.20927~@~20~@~M~@~Change table StaticPg~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_StaticPg (StaticPgId int NULL, StaticPgNm varchar(50) NULL, StaticPgTitle nvarchar(100) NULL, StaticPgCss nvarchar(max) NULL, StaticPgJs nvarchar(max) NULL, StaticPgHtm nvarchar(max) NULL, MasterPgFile varchar(100) NULL, StaticCsId smallint NULL, StaticJsId smallint NULL)') EXEC (' INSERT INTO dbo.Tmp_StaticPg (StaticPgId, StaticPgNm, StaticPgTitle, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, StaticCsId, StaticJsId) SELECT convert(int,StaticPgId), StaticPgNm, StaticPgTitle, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, convert(smallint,StaticCsId), convert(smallint,StaticJsId) FROM dbo.StaticPg IF (SELECT COUNT(1) FROM dbo.Tmp_StaticPg) > 0 OR (SELECT COUNT(1) FROM dbo.StaticPg) = 0 DROP TABLE dbo.StaticPg') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.StaticPg'')) CREATE TABLE dbo.StaticPg (StaticPgId Int IDENTITY NOT NULL, StaticPgNm VarChar(50) NULL, StaticPgTitle NVarChar(100) NOT NULL, StaticPgCss NVarChar(max) NULL, StaticPgJs NVarChar(max) NULL, StaticPgHtm NVarChar(max) NOT NULL, MasterPgFile VarChar(100) NULL, StaticCsId SmallInt NULL, StaticJsId SmallInt NULL, StaticPgUrl VarChar(200) NULL, CONSTRAINT PK_StaticPg PRIMARY KEY CLUSTERED (StaticPgId))') EXEC (' SET IDENTITY_INSERT dbo.StaticPg ON INSERT INTO dbo.StaticPg (StaticPgId, StaticPgNm, StaticPgTitle, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, StaticCsId, StaticJsId) SELECT StaticPgId, StaticPgNm, StaticPgTitle, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, StaticCsId, StaticJsId FROM dbo.Tmp_StaticPg SET IDENTITY_INSERT dbo.StaticPg OFF IF (SELECT COUNT(1) FROM dbo.StaticPg) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_StaticPg) = 0 DROP TABLE dbo.Tmp_StaticPg')
   7.   4.21011~@~10~@~M~@~Change table ScreenObj~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObj (ScreenObjId int NULL, ScreenId int NULL, MasterTable char(1) NULL, ScreenGrpId int NULL, LabelCss varchar(100) NULL, ContentCss varchar(100) NULL, ColumnId int NULL, ColumnName varchar(20) NULL, ColumnDesc varchar(100) NULL, DefaultValue nvarchar(100) NULL, SystemValue nvarchar(100) NULL, ColumnWrap char(1) NULL, ColumnJustify char(1) NULL, ColumnSize smallint NULL, ColumnHeight smallint NULL, DisplayModeId tinyint NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, TabFolderId int NULL, TabIndex smallint NULL, SortOrder smallint NULL, RequiredValid char(1) NULL, MaskValid varchar(50) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL, IgnoreConfirm char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, SystemValue, ColumnWrap, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT convert(int,ScreenObjId), convert(int,ScreenId), MasterTable, convert(int,ScreenGrpId), LabelCss, ContentCss, convert(int,ColumnId), ColumnName, ColumnDesc, DefaultValue, SystemValue, ColumnWrap, ColumnJustify, convert(smallint,ColumnSize), convert(smallint,ColumnHeight), convert(tinyint,DisplayModeId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), AggregateCd, GenerateSp, convert(int,TabFolderId), convert(smallint,TabIndex), convert(smallint,SortOrder), RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObj'')) CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, ScreenGrpId Int NOT NULL, LabelCss VarChar(100) NULL, ContentCss VarChar(100) NULL, ColumnId Int NULL, ColumnName VarChar(20) NOT NULL, ColumnDesc VarChar(100) NULL, DefaultValue NVarChar(100) NULL, SystemValue NVarChar(100) NULL, ColumnWrap Char(1) NOT NULL, UnderPrevCol Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ColumnHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(50) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_UnderPrevCol DEFAULT (''N'') FOR UnderPrevCol ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, SystemValue, ColumnWrap, UnderPrevCol, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, SystemValue, ColumnWrap, ''N'', ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj')
   7.   5.21018~@~10~@~M~@~Change table CtGridGrp~@~N~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtGridGrp'')) CREATE TABLE dbo.CtGridGrp (GridGrpCd Char(1) NOT NULL, GridGrpName NVarChar(50) NOT NULL, CONSTRAINT PK_CtGridGrp PRIMARY KEY CLUSTERED (GridGrpCd))') EXEC ('') EXEC ('') EXEC ('')
   7.   5.21018~@~20~@~M~@~Change table ScreenObj~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObj (ScreenObjId int NULL, ScreenId int NULL, MasterTable char(1) NULL, ScreenGrpId int NULL, LabelCss varchar(100) NULL, ContentCss varchar(100) NULL, ColumnId int NULL, ColumnName varchar(20) NULL, ColumnDesc varchar(100) NULL, DefaultValue nvarchar(100) NULL, SystemValue nvarchar(100) NULL, ColumnWrap char(1) NULL, UnderPrevCol char(1) NULL, ColumnJustify char(1) NULL, ColumnSize smallint NULL, ColumnHeight smallint NULL, DisplayModeId tinyint NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, TabFolderId int NULL, TabIndex smallint NULL, SortOrder smallint NULL, RequiredValid char(1) NULL, MaskValid varchar(50) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL, IgnoreConfirm char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, SystemValue, ColumnWrap, UnderPrevCol, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT convert(int,ScreenObjId), convert(int,ScreenId), MasterTable, convert(int,ScreenGrpId), LabelCss, ContentCss, convert(int,ColumnId), ColumnName, ColumnDesc, DefaultValue, SystemValue, ColumnWrap, UnderPrevCol, ColumnJustify, convert(smallint,ColumnSize), convert(smallint,ColumnHeight), convert(tinyint,DisplayModeId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), AggregateCd, GenerateSp, convert(int,TabFolderId), convert(smallint,TabIndex), convert(smallint,SortOrder), RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObj'')) CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, ScreenGrpId Int NOT NULL, LabelCss VarChar(100) NULL, ContentCss VarChar(100) NULL, ColumnId Int NULL, ColumnName VarChar(20) NOT NULL, ColumnDesc VarChar(100) NULL, DefaultValue NVarChar(100) NULL, SystemValue NVarChar(100) NULL, ColumnWrap Char(1) NOT NULL, GridGrpCd Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ColumnHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(50) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GridGrpCd DEFAULT (''N'') FOR GridGrpCd ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, SystemValue, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, SystemValue, ColumnWrap, UnderPrevCol, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj')
   7.   8.21115~@~10~@~M~@~Add table CronJob~@~Y~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CronJob'')) DROP TABLE dbo.CronJob')
EXEC ('CREATE TABLE dbo.CronJob (CronJobId Int IDENTITY NOT NULL, CronJobName NVarChar(200) NOT NULL, Year SmallInt NULL, Month TinyInt NULL, Day TinyInt NULL, Hour TinyInt NULL, Minute TinyInt NULL, DayOfWeek TinyInt NULL, LastRun DateTime NULL, NextRun DateTime NULL, JobLink VarChar(200) NOT NULL, LastStatus NVarChar(500) NULL, CONSTRAINT PK_CronJob PRIMARY KEY CLUSTERED (CronJobId))')
   7.  11.21126~@~10~@~M~@~Just in case removed datatype is used~@~Y~@~EXEC ('UPDATE DbColumn SET DataType = 3 WHERE DataType in (5,13,16)')
EXEC ('UPDATE DbColumn SET DataType = 11, ColumnLength = 0 WHERE DataType in (19,20)')
EXEC ('UPDATE ReportObj SET DataTypeId = 3 WHERE DataTypeId in (5,13,16)')
EXEC ('UPDATE ReportObj SET DataTypeId = 11 WHERE DataTypeId in (19,20)')
   7.  12.21210~@~10~@~M~@~Change table ScreenObjHlp~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObjHlp (CultureId smallint NULL, ScreenObjHlpId int NULL, ScreenObjId int NULL, ColumnHeader nvarchar(50) NULL, ToolTip nvarchar(200) NULL, ErrMessage nvarchar(300) NULL, ScreenObjHlpDesc varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObjHlp (CultureId, ScreenObjHlpId, ScreenObjId, ColumnHeader, ToolTip, ErrMessage, ScreenObjHlpDesc) SELECT convert(smallint,CultureId), convert(int,ScreenObjHlpId), convert(int,ScreenObjId), ColumnHeader, ToolTip, ErrMessage, ScreenObjHlpDesc FROM dbo.ScreenObjHlp IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObjHlp) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObjHlp) = 0 DROP TABLE dbo.ScreenObjHlp') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObjHlp'')) CREATE TABLE dbo.ScreenObjHlp (ScreenObjHlpId Int IDENTITY NOT NULL, ScreenObjHlpDesc VarChar(200) NULL, ScreenObjId Int NOT NULL, CultureId SmallInt NOT NULL, ColumnHeader NVarChar(50) NULL, ToolTip NVarChar(200) NULL, ErrMessage NVarChar(300) NULL, TbHint NVarChar(200) NULL, CONSTRAINT PK_ScreenObjHlp PRIMARY KEY CLUSTERED (ScreenObjHlpId))') EXEC (' SET IDENTITY_INSERT dbo.ScreenObjHlp ON INSERT INTO dbo.ScreenObjHlp (ScreenObjHlpId, ScreenObjHlpDesc, ScreenObjId, CultureId, ColumnHeader, ToolTip, ErrMessage) SELECT ScreenObjHlpId, ScreenObjHlpDesc, ScreenObjId, CultureId, ColumnHeader, ToolTip, ErrMessage FROM dbo.Tmp_ScreenObjHlp SET IDENTITY_INSERT dbo.ScreenObjHlp OFF IF (SELECT COUNT(1) FROM dbo.ScreenObjHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObjHlp) = 0 DROP TABLE dbo.Tmp_ScreenObjHlp')
   7.  12.21210~@~20~@~M~@~Change table StaticPg~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_StaticPg (StaticCsId smallint NULL, StaticJsId smallint NULL, StaticPgId int NULL, StaticPgTitle nvarchar(100) NULL, StaticPgCss nvarchar(max) NULL, StaticPgJs nvarchar(max) NULL, StaticPgHtm nvarchar(max) NULL, StaticPgNm varchar(50) NULL, MasterPgFile varchar(100) NULL, StaticPgUrl varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_StaticPg (StaticCsId, StaticJsId, StaticPgId, StaticPgTitle, StaticPgCss, StaticPgJs, StaticPgHtm, StaticPgNm, MasterPgFile, StaticPgUrl) SELECT convert(smallint,StaticCsId), convert(smallint,StaticJsId), convert(int,StaticPgId), StaticPgTitle, StaticPgCss, StaticPgJs, StaticPgHtm, StaticPgNm, MasterPgFile, StaticPgUrl FROM dbo.StaticPg IF (SELECT COUNT(1) FROM dbo.Tmp_StaticPg) > 0 OR (SELECT COUNT(1) FROM dbo.StaticPg) = 0 DROP TABLE dbo.StaticPg') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.StaticPg'')) CREATE TABLE dbo.StaticPg (StaticPgId Int IDENTITY NOT NULL, StaticPgNm VarChar(50) NULL, StaticPgTitle NVarChar(100) NOT NULL, StaticMeta NVarChar(1000) NULL, StaticPgCss NVarChar(max) NULL, StaticPgJs NVarChar(max) NULL, StaticPgHtm NVarChar(max) NOT NULL, MasterPgFile VarChar(100) NULL, StaticCsId SmallInt NULL, StaticJsId SmallInt NULL, StaticPgUrl VarChar(200) NULL, CONSTRAINT PK_StaticPg PRIMARY KEY CLUSTERED (StaticPgId))') EXEC (' SET IDENTITY_INSERT dbo.StaticPg ON INSERT INTO dbo.StaticPg (StaticPgId, StaticPgNm, StaticPgTitle, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, StaticCsId, StaticJsId, StaticPgUrl) SELECT StaticPgId, StaticPgNm, StaticPgTitle, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, StaticCsId, StaticJsId, StaticPgUrl FROM dbo.Tmp_StaticPg SET IDENTITY_INSERT dbo.StaticPg OFF IF (SELECT COUNT(1) FROM dbo.StaticPg) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_StaticPg) = 0 DROP TABLE dbo.Tmp_StaticPg')
   7.  12.21210~@~30~@~M~@~Change table ScreenObj~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObj (DisplayModeId tinyint NULL, ColumnSize smallint NULL, ColumnHeight smallint NULL, TabIndex smallint NULL, SortOrder smallint NULL, ScreenObjId int NULL, ScreenId int NULL, ScreenGrpId int NULL, ColumnId int NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, TabFolderId int NULL, DefaultValue nvarchar(100) NULL, SystemValue nvarchar(100) NULL, MasterTable char(1) NULL, ColumnWrap char(1) NULL, GridGrpCd char(1) NULL, ColumnJustify char(1) NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, RequiredValid char(1) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL, IgnoreConfirm char(1) NULL, LabelCss varchar(100) NULL, ContentCss varchar(100) NULL, ColumnName varchar(20) NULL, ColumnDesc varchar(100) NULL, MaskValid varchar(50) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (DisplayModeId, ColumnSize, ColumnHeight, TabIndex, SortOrder, ScreenObjId, ScreenId, ScreenGrpId, ColumnId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, TabFolderId, DefaultValue, SystemValue, MasterTable, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink) SELECT convert(tinyint,DisplayModeId), convert(smallint,ColumnSize), convert(smallint,ColumnHeight), convert(smallint,TabIndex), convert(smallint,SortOrder), convert(int,ScreenObjId), convert(int,ScreenId), convert(int,ScreenGrpId), convert(int,ColumnId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), convert(int,TabFolderId), DefaultValue, SystemValue, MasterTable, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObj'')) CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, ScreenGrpId Int NOT NULL, LabelCss VarChar(100) NULL, ContentCss VarChar(100) NULL, ColumnId Int NULL, ColumnName VarChar(20) NOT NULL, ColumnDesc VarChar(100) NULL, DefaultValue NVarChar(100) NULL, DefAfter Char(1) NOT NULL, SystemValue NVarChar(100) NULL, DefAlways Char(1) NOT NULL, ColumnWrap Char(1) NOT NULL, GridGrpCd Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ColumnHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(50) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAfter DEFAULT (''N'') FOR DefAfter ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAlways DEFAULT (''N'') FOR DefAlways ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GridGrpCd DEFAULT (''N'') FOR GridGrpCd ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, ''N'', SystemValue, ''N'', ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj')
   7.  13.21213~@~10~@~M~@~Map Input?? and Modified?? to new settings~@~Y~@~EXEC ('UPDATE ScreenObj SET SystemValue = ''getutcdate()'', DisplayModeId = case when DisplayModeId = 30 then 41 else 42 end where ColumnName in (''InputOn'',''CreatedOn'',''EnteredOn'')')
EXEC ('UPDATE ScreenObj SET SystemValue = ''getutcdate()'', DefAlways = ''Y'', DisplayModeId = case when DisplayModeId = 30 then 41 else 42 end where ColumnName in (''ModifiedOn'',''ChangedOn'')')
EXEC ('UPDATE ScreenObj SET DefaultValue = ''LUser.UsrId.ToString()'', DefAfter = ''Y'' where ColumnName in (''InputBy'',''CreatedBy'',''EnteredBy'')')
EXEC ('UPDATE ScreenObj SET DefaultValue = ''LUser.UsrId.ToString()'', DefAfter = ''Y'', DefAlways = ''Y'' where ColumnName in (''ModifiedBy'',''ChangedBy'')')

   7.  17.21220~@~10~@~M~@~Change table StaticPg~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_StaticPg (StaticCsId smallint NULL, StaticJsId smallint NULL, StaticPgId int NULL, StaticPgTitle nvarchar(100) NULL, StaticMeta nvarchar(1000) NULL, StaticPgCss nvarchar(max) NULL, StaticPgJs nvarchar(max) NULL, StaticPgHtm nvarchar(max) NULL, StaticPgNm varchar(50) NULL, MasterPgFile varchar(100) NULL, StaticPgUrl varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_StaticPg (StaticCsId, StaticJsId, StaticPgId, StaticPgTitle, StaticMeta, StaticPgCss, StaticPgJs, StaticPgHtm, StaticPgNm, MasterPgFile, StaticPgUrl) SELECT convert(smallint,StaticCsId), convert(smallint,StaticJsId), convert(int,StaticPgId), StaticPgTitle, StaticMeta, StaticPgCss, StaticPgJs, StaticPgHtm, StaticPgNm, MasterPgFile, StaticPgUrl FROM dbo.StaticPg IF (SELECT COUNT(1) FROM dbo.Tmp_StaticPg) > 0 OR (SELECT COUNT(1) FROM dbo.StaticPg) = 0 DROP TABLE dbo.StaticPg') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.StaticPg'')) CREATE TABLE dbo.StaticPg (StaticPgId Int IDENTITY NOT NULL, StaticPgNm VarChar(50) NOT NULL, StaticPgTitle NVarChar(100) NOT NULL, StaticMeta NVarChar(1000) NULL, StaticPgCss NVarChar(max) NULL, StaticPgJs NVarChar(max) NULL, StaticPgHtm NVarChar(max) NOT NULL, MasterPgFile VarChar(100) NULL, StaticCsId SmallInt NULL, StaticJsId SmallInt NULL, StaticPgUrl VarChar(200) NULL, CONSTRAINT PK_StaticPg PRIMARY KEY CLUSTERED (StaticPgId))') EXEC (' ALTER TABLE dbo.StaticPg ADD CONSTRAINT DF_StaticPg_StaticPgNm DEFAULT (''PgNm'') FOR StaticPgNm SET IDENTITY_INSERT dbo.StaticPg ON INSERT INTO dbo.StaticPg (StaticPgId, StaticPgNm, StaticPgTitle, StaticMeta, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, StaticCsId, StaticJsId, StaticPgUrl) SELECT StaticPgId, CASE WHEN StaticPgNm is null THEN ''PgNm'' ELSE StaticPgNm END, StaticPgTitle, StaticMeta, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, StaticCsId, StaticJsId, StaticPgUrl FROM dbo.Tmp_StaticPg SET IDENTITY_INSERT dbo.StaticPg OFF IF (SELECT COUNT(1) FROM dbo.StaticPg) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_StaticPg) = 0 DROP TABLE dbo.Tmp_StaticPg')
   7.  21.30122~@~10~@~M~@~UPDATE RequiredValid~@~Y~@~UPDATE ScreenObj SET RequiredValid = 'N' from ScreenObj a INNER JOIN ColOvrd b ON a.ScreenObjId = b.ScreenObjId WHERE a.RequiredValid = 'Y' and (b.ColVisible = 'N' OR b.ColReadOnly = 'Y')

   7.  24.30213~@~10~@~M~@~Change table ClientRule~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ClientRule (RuleTypeId tinyint NULL, CultureId smallint NULL, ClientScript smallint NULL, ClientRuleId int NULL, ScreenId int NULL, ReportId int NULL, ScreenObjHlpId int NULL, ScreenCriHlpId int NULL, ReportCriHlpId int NULL, RuleName nvarchar(100) NULL, RuleDesc nvarchar(150) NULL, RuleDescription nvarchar(500) NULL, UserScriptEvent varchar(50) NULL, UserScriptName varchar(50) NULL, ScriptParam varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_ClientRule (RuleTypeId, CultureId, ClientScript, ClientRuleId, ScreenId, ReportId, ScreenObjHlpId, ScreenCriHlpId, ReportCriHlpId, RuleName, RuleDesc, RuleDescription, UserScriptEvent, UserScriptName, ScriptParam) SELECT convert(tinyint,RuleTypeId), convert(smallint,CultureId), convert(smallint,ClientScript), convert(int,ClientRuleId), convert(int,ScreenId), convert(int,ReportId), convert(int,ScreenObjHlpId), convert(int,ScreenCriHlpId), convert(int,ReportCriHlpId), RuleName, RuleDesc, RuleDescription, UserScriptEvent, UserScriptName, ScriptParam FROM dbo.ClientRule IF (SELECT COUNT(1) FROM dbo.Tmp_ClientRule) > 0 OR (SELECT COUNT(1) FROM dbo.ClientRule) = 0 DROP TABLE dbo.ClientRule') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ClientRule'')) CREATE TABLE dbo.ClientRule (ClientRuleId Int IDENTITY NOT NULL, RuleTypeId TinyInt NOT NULL, RuleName NVarChar(100) NOT NULL, RuleDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, ScreenId Int NULL, ReportId Int NULL, CultureId SmallInt NULL, ScreenObjHlpId Int NULL, ScreenCriHlpId Int NULL, ReportCriHlpId Int NULL, ClientScript SmallInt NULL, UserScriptEvent VarChar(50) NULL, UserScriptName VarChar(500) NULL, ScriptParam VarChar(300) NULL, CONSTRAINT PK_ClientRule PRIMARY KEY CLUSTERED (ClientRuleId))') EXEC (' SET IDENTITY_INSERT dbo.ClientRule ON INSERT INTO dbo.ClientRule (ClientRuleId, RuleTypeId, RuleName, RuleDesc, RuleDescription, ScreenId, ReportId, CultureId, ScreenObjHlpId, ScreenCriHlpId, ReportCriHlpId, ClientScript, UserScriptEvent, UserScriptName, ScriptParam) SELECT ClientRuleId, RuleTypeId, RuleName, RuleDesc, RuleDescription, ScreenId, ReportId, CultureId, ScreenObjHlpId, ScreenCriHlpId, ReportCriHlpId, ClientScript, UserScriptEvent, UserScriptName, ScriptParam FROM dbo.Tmp_ClientRule SET IDENTITY_INSERT dbo.ClientRule OFF IF (SELECT COUNT(1) FROM dbo.ClientRule) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ClientRule) = 0 DROP TABLE dbo.Tmp_ClientRule')
   7.  31.30313~@~10~@~M~@~Change table ScreenObj~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObj (DisplayModeId tinyint NULL, ColumnSize smallint NULL, ColumnHeight smallint NULL, TabIndex smallint NULL, SortOrder smallint NULL, ScreenObjId int NULL, ScreenId int NULL, ScreenGrpId int NULL, ColumnId int NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, TabFolderId int NULL, DefaultValue nvarchar(100) NULL, SystemValue nvarchar(100) NULL, MasterTable char(1) NULL, DefAfter char(1) NULL, DefAlways char(1) NULL, ColumnWrap char(1) NULL, GridGrpCd char(1) NULL, ColumnJustify char(1) NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, RequiredValid char(1) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL, IgnoreConfirm char(1) NULL, LabelCss varchar(100) NULL, ContentCss varchar(100) NULL, ColumnName varchar(20) NULL, ColumnDesc varchar(100) NULL, MaskValid varchar(50) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (DisplayModeId, ColumnSize, ColumnHeight, TabIndex, SortOrder, ScreenObjId, ScreenId, ScreenGrpId, ColumnId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, TabFolderId, DefaultValue, SystemValue, MasterTable, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink) SELECT convert(tinyint,DisplayModeId), convert(smallint,ColumnSize), convert(smallint,ColumnHeight), convert(smallint,TabIndex), convert(smallint,SortOrder), convert(int,ScreenObjId), convert(int,ScreenId), convert(int,ScreenGrpId), convert(int,ColumnId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), convert(int,TabFolderId), DefaultValue, SystemValue, MasterTable, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObj'')) CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, ScreenGrpId Int NOT NULL, LabelCss VarChar(1000) NULL, ContentCss VarChar(1000) NULL, ColumnId Int NULL, ColumnName VarChar(20) NOT NULL, ColumnDesc VarChar(200) NULL, DefaultValue NVarChar(200) NULL, DefAfter Char(1) NOT NULL, SystemValue NVarChar(200) NULL, DefAlways Char(1) NOT NULL, ColumnWrap Char(1) NOT NULL, GridGrpCd Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ColumnHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(50) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAfter DEFAULT (''N'') FOR DefAfter ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAlways DEFAULT (''N'') FOR DefAlways ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GridGrpCd DEFAULT (''N'') FOR GridGrpCd ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj')
   7.  32.30315~@~10~@~M~@~Change table ButtonHlp~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ButtonHlp (ButtonTypeId tinyint NULL, CultureId smallint NULL, ButtonHlpId int NULL, ScreenId int NULL, ReportId int NULL, WizardId int NULL, ButtonName nvarchar(20) NULL, ButtonToolTip nvarchar(100) NULL, ButtonVisible char(1) NULL, ButtonIsImage char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_ButtonHlp (ButtonTypeId, CultureId, ButtonHlpId, ScreenId, ReportId, WizardId, ButtonName, ButtonToolTip, ButtonVisible, ButtonIsImage) SELECT convert(tinyint,ButtonTypeId), convert(smallint,CultureId), convert(int,ButtonHlpId), convert(int,ScreenId), convert(int,ReportId), convert(int,WizardId), ButtonName, ButtonToolTip, ButtonVisible, ButtonIsImage FROM dbo.ButtonHlp IF (SELECT COUNT(1) FROM dbo.Tmp_ButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.ButtonHlp) = 0 DROP TABLE dbo.ButtonHlp') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ButtonHlp'')) CREATE TABLE dbo.ButtonHlp (ButtonHlpId Int IDENTITY NOT NULL, ScreenId Int NULL, ReportId Int NULL, WizardId Int NULL, CultureId SmallInt NOT NULL, ButtonTypeId TinyInt NOT NULL, ButtonName NVarChar(200) NULL, ButtonToolTip NVarChar(400) NULL, ButtonVisible Char(1) NOT NULL, ButtonIsImage Char(1) NOT NULL, CONSTRAINT PK_ButtonHlp PRIMARY KEY CLUSTERED (ButtonHlpId))') EXEC (' SET IDENTITY_INSERT dbo.ButtonHlp ON INSERT INTO dbo.ButtonHlp (ButtonHlpId, ScreenId, ReportId, WizardId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip, ButtonVisible, ButtonIsImage) SELECT ButtonHlpId, ScreenId, ReportId, WizardId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip, ButtonVisible, ButtonIsImage FROM dbo.Tmp_ButtonHlp SET IDENTITY_INSERT dbo.ButtonHlp OFF IF (SELECT COUNT(1) FROM dbo.ButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ButtonHlp) = 0 DROP TABLE dbo.Tmp_ButtonHlp')
   7.  33.30326~@~10~@~M~@~Remove AtCulture tables~@~N~@~EXEC ('DROP TABLE dbo.AtCulture')
EXEC ('DROP TABLE dbo.AtCultureLbl')

   7.  33.30326~@~20~@~M~@~Change table CtCulture~@~N~@~EXEC ('CREATE TABLE dbo.Tmp_CtCulture (CultureTypeId smallint NULL, CultureTypeSrt smallint NULL, CultureTypeDesc nvarchar(50) NULL, ImportFileName nvarchar(30) NULL, CultureDefault char(1) NULL, EnNumberRule char(1) NULL, CultureTypeName varchar(6) NULL)')
EXEC ('INSERT INTO dbo.Tmp_CtCulture (CultureTypeId, CultureTypeSrt, CultureTypeDesc, ImportFileName, CultureDefault, EnNumberRule, CultureTypeName) SELECT convert(smallint,CultureTypeId), convert(smallint,CultureTypeSrt), CultureTypeDesc, ImportFileName, CultureDefault, EnNumberRule, CultureTypeName FROM dbo.CtCulture IF (SELECT COUNT(1) FROM dbo.Tmp_CtCulture) > 0 OR (SELECT COUNT(1) FROM dbo.CtCulture) = 0 DROP TABLE dbo.CtCulture')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtCulture'')) CREATE TABLE dbo.CtCulture (CultureTypeId SmallInt IDENTITY NOT NULL, CultureTypeName VarChar(10) NOT NULL, CultureTypeDesc NVarChar(50) NOT NULL, CultureDefault Char(1) NOT NULL, EnNumberRule Char(1) NOT NULL, CountryCd Char(3) NULL, CurrencyCd Char(3) NULL, ToTranslate Char(1) NOT NULL, ImportFileName NVarChar(30) NULL, CONSTRAINT PK_CtCulture PRIMARY KEY CLUSTERED (CultureTypeId))')
EXEC ('ALTER TABLE dbo.CtCulture ADD CONSTRAINT DF_CtCulture_ToTranslate DEFAULT (''N'') FOR ToTranslate SET IDENTITY_INSERT dbo.CtCulture ON INSERT INTO dbo.CtCulture (CultureTypeId, CultureTypeName, CultureTypeDesc, CultureDefault, EnNumberRule, ToTranslate, ImportFileName) SELECT CultureTypeId, CultureTypeName, CultureTypeDesc, CultureDefault, EnNumberRule, ''N'', ImportFileName FROM dbo.Tmp_CtCulture SET IDENTITY_INSERT dbo.CtCulture OFF IF (SELECT COUNT(1) FROM dbo.CtCulture) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtCulture) = 0 DROP TABLE dbo.Tmp_CtCulture')
EXEC ('CREATE UNIQUE NONCLUSTERED INDEX IX_CtCulture ON dbo.CtCulture(CultureTypeName)')

   7.  33.30326~@~30~@~M~@~Change table FxRate~@~N~@~EXEC ('USE [[?]]Cmon')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.FxRate'')) CREATE TABLE dbo.FxRate (FxRateId Int IDENTITY NOT NULL, FrCurrency Char(3) NOT NULL, ToCurrency Char(3) NOT NULL, ToFxRate Decimal(12,4) NOT NULL, ValidFr DateTime NOT NULL, ValidTo DateTime NOT NULL, CONSTRAINT PK_FxRate PRIMARY KEY CLUSTERED (FxRateId))')
EXEC ('CREATE UNIQUE NONCLUSTERED INDEX IX_FxRate ON dbo.FxRate (FrCurrency,ToCurrency,ValidFr)')

   7.  33.30326~@~50~@~M~@~Change table AppInfo~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_AppInfo (VersionMa smallint NULL, VersionMi smallint NULL, AppInfoId int NULL, AppZipId int NULL, Prerequisite nvarchar(max) NULL, Readme nvarchar(max) NULL, VersionDt datetime NULL, AppInfoDesc varchar(50) NULL, AppItemLink varchar(200) NULL)')
EXEC ('INSERT INTO dbo.Tmp_AppInfo (VersionMa, VersionMi, AppInfoId, AppZipId, Prerequisite, Readme, VersionDt, AppInfoDesc, AppItemLink) SELECT convert(smallint,VersionMa), convert(smallint,VersionMi), convert(int,AppInfoId), convert(int,AppZipId), Prerequisite, Readme, VersionDt, AppInfoDesc, AppItemLink FROM dbo.AppInfo IF (SELECT COUNT(1) FROM dbo.Tmp_AppInfo) > 0 OR (SELECT COUNT(1) FROM dbo.AppInfo) = 0 DROP TABLE dbo.AppInfo')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AppInfo'')) CREATE TABLE dbo.AppInfo (AppInfoId Int IDENTITY NOT NULL, AppInfoDesc VarChar(50) NULL, VersionMa SmallInt NOT NULL, VersionMi SmallInt NOT NULL, VersionDt DateTime NULL, AppZipId Int NULL, Prerequisite NVarChar(max) NULL, Readme NVarChar(max) NULL, AppItemLink VarChar(200) NULL, CultureTypeName varchar(10) NULL, VersionValue Money NULL, CONSTRAINT PK_AppInfo PRIMARY KEY CLUSTERED (AppInfoId))')
EXEC ('SET IDENTITY_INSERT dbo.AppInfo ON INSERT INTO dbo.AppInfo (AppInfoId, AppInfoDesc, VersionMa, VersionMi, VersionDt, AppZipId, Prerequisite, Readme, AppItemLink) SELECT AppInfoId, AppInfoDesc, VersionMa, VersionMi, VersionDt, AppZipId, Prerequisite, Readme, AppItemLink FROM dbo.Tmp_AppInfo SET IDENTITY_INSERT dbo.AppInfo OFF IF (SELECT COUNT(1) FROM dbo.AppInfo) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_AppInfo) = 0 DROP TABLE dbo.Tmp_AppInfo')

   7.  34.30327~@~10~@~M~@~Change table UsrImpr~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_UsrImpr (UsrImprId int NULL, UsrId int NULL, ImprUsrId int NULL, UsrImprDesc nvarchar(200) NULL, UsrImprLink varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_UsrImpr (UsrImprId, UsrId, ImprUsrId, UsrImprDesc, UsrImprLink) SELECT convert(int,UsrImprId), convert(int,UsrId), convert(int,ImprUsrId), UsrImprDesc, UsrImprLink FROM dbo.UsrImpr IF (SELECT COUNT(1) FROM dbo.Tmp_UsrImpr) > 0 OR (SELECT COUNT(1) FROM dbo.UsrImpr) = 0 DROP TABLE dbo.UsrImpr') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrImpr'')) CREATE TABLE dbo.UsrImpr (UsrImprId Int IDENTITY NOT NULL, UsrId Int NOT NULL, ImprUsrId Int NOT NULL, UsrImprDesc NVarChar(200) NULL, UsrImprLink VarChar(200) NULL, TestCulture VarChar(10) NULL, TestCurrency Money NULL, CONSTRAINT PK_UsrImpr PRIMARY KEY CLUSTERED (UsrImprId))') EXEC (' SET IDENTITY_INSERT dbo.UsrImpr ON INSERT INTO dbo.UsrImpr (UsrImprId, UsrId, ImprUsrId, UsrImprDesc, UsrImprLink) SELECT UsrImprId, UsrId, ImprUsrId, UsrImprDesc, UsrImprLink FROM dbo.Tmp_UsrImpr SET IDENTITY_INSERT dbo.UsrImpr OFF IF (SELECT COUNT(1) FROM dbo.UsrImpr) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UsrImpr) = 0 DROP TABLE dbo.Tmp_UsrImpr')
   7.  42.30612~@~10~@~M~@~Change table Menu~@~Y~@~EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_MenuHlp_Menu'') ALTER TABLE dbo.MenuHlp DROP CONSTRAINT FK_MenuHlp_Menu CREATE TABLE dbo.Tmp_Menu (MenuIndex smallint NULL, MenuId int NULL, ParentId int NULL, ReportId int NULL, ScreenId int NULL, WizardId int NULL, StaticPgId int NULL, MenuDesc nvarchar(100) NULL, IconUrl nvarchar(300) NULL, MenuName varchar(30) NULL, Miscellaneous varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_Menu (MenuIndex, MenuId, ParentId, ReportId, ScreenId, WizardId, StaticPgId, MenuDesc, IconUrl, MenuName, Miscellaneous) SELECT convert(smallint,MenuIndex), convert(int,MenuId), convert(int,ParentId), convert(int,ReportId), convert(int,ScreenId), convert(int,WizardId), convert(int,StaticPgId), MenuDesc, IconUrl, MenuName, Miscellaneous FROM dbo.Menu IF (SELECT COUNT(1) FROM dbo.Tmp_Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Menu) = 0 DROP TABLE dbo.Menu') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Menu'')) CREATE TABLE dbo.Menu (MenuId Int IDENTITY NOT NULL, MenuIndex SmallInt NOT NULL, MenuName VarChar(30) NOT NULL, MenuDesc NVarChar(300) NULL, Miscellaneous VarChar(100) NULL, ParentId Int NULL, ReportId Int NULL, ScreenId Int NULL, WizardId Int NULL, StaticPgId Int NULL, IconUrl NVarChar(300) NULL, CONSTRAINT PK_Menu PRIMARY KEY CLUSTERED (MenuId))') EXEC (' SET IDENTITY_INSERT dbo.Menu ON INSERT INTO dbo.Menu (MenuId, MenuIndex, MenuName, MenuDesc, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl) SELECT MenuId, MenuIndex, MenuName, MenuDesc, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl FROM dbo.Tmp_Menu SET IDENTITY_INSERT dbo.Menu OFF IF (SELECT COUNT(1) FROM dbo.Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Menu) = 0 DROP TABLE dbo.Tmp_Menu ALTER TABLE dbo.MenuHlp WITH NOCHECK ADD CONSTRAINT FK_MenuHlp_Menu FOREIGN KEY (MenuId) REFERENCES dbo.Menu (MenuId)')

   7.  42.30612~@~20~@~M~@~Update MenuDesc~@~Y~@~EXEC ('DECLARE @ii int, @mm int SELECT @ii = 1, @mm = max(MenuId) from Menu WHILE @ii <= @mm BEGIN IF EXISTS (SELECT 1 FROM Menu WHERE MenuId = @ii) EXEC Ir_InitMenuHlp @ii SELECT @ii = @ii + 1 END')
   7.  43.30624~@~10~@~M~@~Change table CtClientScript~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_CtClientScript (ClientScriptId smallint NULL, ClientScriptDesc nvarchar(100) NULL, ClientScriptEvent varchar(50) NULL, ClientScriptName varchar(50) NULL)') EXEC (' INSERT INTO dbo.Tmp_CtClientScript (ClientScriptId, ClientScriptDesc, ClientScriptEvent, ClientScriptName) SELECT convert(smallint,ClientScriptId), ClientScriptDesc, ClientScriptEvent, ClientScriptName FROM dbo.CtClientScript IF (SELECT COUNT(1) FROM dbo.Tmp_CtClientScript) > 0 OR (SELECT COUNT(1) FROM dbo.CtClientScript) = 0 DROP TABLE dbo.CtClientScript') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtClientScript'')) CREATE TABLE dbo.CtClientScript (ClientScriptId SmallInt NOT NULL, ClientScriptEvent VarChar(50) NOT NULL, ClientScriptName VarChar(50) NOT NULL, ClientScriptDesc NVarChar(100) NOT NULL, ClientScriptHelp NVarChar(1000) NULL, CONSTRAINT PK_CtClientScript PRIMARY KEY CLUSTERED (ClientScriptId))') EXEC (' INSERT INTO dbo.CtClientScript (ClientScriptId, ClientScriptEvent, ClientScriptName, ClientScriptDesc) SELECT ClientScriptId, ClientScriptEvent, ClientScriptName, ClientScriptDesc FROM dbo.Tmp_CtClientScript IF (SELECT COUNT(1) FROM dbo.CtClientScript) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtClientScript) = 0 DROP TABLE dbo.Tmp_CtClientScript')
   7.  43.30624~@~20~@~M~@~Change table Screen~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenTypeId tinyint NULL, NumCols tinyint NULL, GridRows tinyint NULL, SearchWidth smallint NULL, ScreenId int NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId int NULL, ScreenDesc nvarchar(50) NULL, GridTitle nvarchar(50) NULL, SearchAscending char(1) NULL, SearchMode char(1) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, NeedRegen char(1) NULL, AuthRequired char(1) NULL, ProgramName varchar(20) NULL, GridClass varchar(30) NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenTypeId, NumCols, GridRows, SearchWidth, ScreenId, MasterTableId, DetailTableId, SearchId, ScreenDesc, GridTitle, SearchAscending, SearchMode, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, NeedRegen, AuthRequired, ProgramName, GridClass, ScreenObj, ScreenFilter) SELECT convert(tinyint,ScreenTypeId), convert(tinyint,NumCols), convert(tinyint,GridRows), convert(smallint,SearchWidth), convert(int,ScreenId), convert(int,MasterTableId), convert(int,DetailTableId), convert(int,SearchId), ScreenDesc, GridTitle, SearchAscending, SearchMode, GenerateSc, GenerateSr, HasDeleteAll, ValidateReq, DeferError, NeedRegen, AuthRequired, ProgramName, GridClass, ScreenObj, ScreenFilter FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId Int NULL, SearchWidth SmallInt NULL, SearchAscending Char(1) NOT NULL, SearchMode Char(1) NULL, NumCols TinyInt NOT NULL, GridRows TinyInt NULL, GridClass VarChar(30) NULL, GridTitle NVarChar(50) NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ShowGridHead Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NumCols DEFAULT (1) FOR NumCols ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ShowGridHead DEFAULT (''Y'') FOR ShowGridHead ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, NeedRegen, AuthRequired) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ''Y'', ValidateReq, DeferError, NeedRegen, AuthRequired FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen')
   7.  43.30624~@~40~@~M~@~Add table SredTime~@~N~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.SredTime'')) CREATE TABLE dbo.SredTime (SredTimeId Int IDENTITY NOT NULL, MemberId Int NOT NULL, SredTimeDt DateTime NOT NULL, Accomplished NVarChar(1000) NOT NULL, HourSpent Decimal(9,2) NOT NULL, EnteredBy Int NULL, EnteredOn DateTime NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, CONSTRAINT PK_SredTime PRIMARY KEY CLUSTERED (SredTimeId))') EXEC ('') EXEC ('') EXEC ('')
   7.  43.30624~@~30~@~M~@~Add table SredMebr~@~N~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.SredMebr'')) CREATE TABLE dbo.SredMebr (SredMebrId Int IDENTITY NOT NULL, MemberId Int NOT NULL, UserId Int NOT NULL, MemberTitle NVarChar(50) NULL, LT10PercShare Char(1) NOT NULL, MnSalary Money NOT NULL, MnNtxBenefit Money NOT NULL, MnTaxBenefit Money NOT NULL, MnWorkHours Decimal(9,2) NOT NULL, CONSTRAINT PK_SredMebr PRIMARY KEY CLUSTERED (SredMebrId))') EXEC ('') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_SredMebr'') CREATE UNIQUE NONCLUSTERED INDEX IU_SredMebr ON dbo.SredMebr(MemberId,UserId)') EXEC ('')
   7.  44.30626~@~10~@~M~@~Change table Screen~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenTypeId tinyint NULL, NumCols tinyint NULL, GridRows tinyint NULL, SearchWidth smallint NULL, ScreenId int NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId int NULL, ScreenDesc nvarchar(50) NULL, GridTitle nvarchar(50) NULL, SearchAscending char(1) NULL, SearchMode char(1) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ShowGridHead char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, NeedRegen char(1) NULL, AuthRequired char(1) NULL, ProgramName varchar(20) NULL, GridClass varchar(30) NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenTypeId, NumCols, GridRows, SearchWidth, ScreenId, MasterTableId, DetailTableId, SearchId, ScreenDesc, GridTitle, SearchAscending, SearchMode, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, NeedRegen, AuthRequired, ProgramName, GridClass, ScreenObj, ScreenFilter) SELECT convert(tinyint,ScreenTypeId), convert(tinyint,NumCols), convert(tinyint,GridRows), convert(smallint,SearchWidth), convert(int,ScreenId), convert(int,MasterTableId), convert(int,DetailTableId), convert(int,SearchId), ScreenDesc, GridTitle, SearchAscending, SearchMode, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, NeedRegen, AuthRequired, ProgramName, GridClass, ScreenObj, ScreenFilter FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId Int NULL, SearchWidth SmallInt NULL, SearchAscending Char(1) NOT NULL, SearchMode Char(1) NULL, NumCols TinyInt NOT NULL, GridRows TinyInt NULL, GridClass VarChar(30) NULL, GridTitle NVarChar(50) NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ShowGridHead Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, ViewOnly Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NumCols DEFAULT (1) FOR NumCols ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ShowGridHead DEFAULT (''Y'') FOR ShowGridHead ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ViewOnly DEFAULT (''N'') FOR ViewOnly SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, NeedRegen, AuthRequired, ViewOnly) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, GridClass, GridTitle, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, NeedRegen, AuthRequired, ''N'' FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen')
   7.  44.30626~@~20~@~M~@~Change table CtButtonType~@~N~@~EXEC (' CREATE TABLE dbo.Tmp_CtButtonType (ButtonTypeId tinyint NULL, ButtonTypeDesc nvarchar(50) NULL, ObjectType char(1) NULL, ButtonVisible char(1) NULL, ButtonIsImage char(1) NULL, ButtonTypeName varchar(20) NULL)') EXEC (' INSERT INTO dbo.Tmp_CtButtonType (ButtonTypeId, ButtonTypeDesc, ObjectType, ButtonVisible, ButtonIsImage, ButtonTypeName) SELECT convert(tinyint,ButtonTypeId), ButtonTypeDesc, ObjectType, ButtonVisible, ButtonIsImage, ButtonTypeName FROM dbo.CtButtonType IF (SELECT COUNT(1) FROM dbo.Tmp_CtButtonType) > 0 OR (SELECT COUNT(1) FROM dbo.CtButtonType) = 0 DROP TABLE dbo.CtButtonType') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtButtonType'')) CREATE TABLE dbo.CtButtonType (ButtonTypeId TinyInt NOT NULL, ObjectType Char(1) NOT NULL, ButtonTypeName VarChar(20) NOT NULL, ButtonTypeDesc NVarChar(50) NOT NULL, ButtonVisible Char(1) NOT NULL, ButtonIsImage Char(1) NOT NULL, ViewOnlyVisible Char(1) NOT NULL, CONSTRAINT PK_CtButtonType PRIMARY KEY CLUSTERED (ButtonTypeId))') EXEC (' ALTER TABLE dbo.CtButtonType ADD CONSTRAINT DF_CtButtonType_ViewOnlyVisible DEFAULT (''Y'') FOR ViewOnlyVisible INSERT INTO dbo.CtButtonType (ButtonTypeId, ObjectType, ButtonTypeName, ButtonTypeDesc, ButtonVisible, ButtonIsImage, ViewOnlyVisible) SELECT ButtonTypeId, ObjectType, ButtonTypeName, ButtonTypeDesc, ButtonVisible, ButtonIsImage, ''Y'' FROM dbo.Tmp_CtButtonType IF (SELECT COUNT(1) FROM dbo.CtButtonType) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtButtonType) = 0 DROP TABLE dbo.Tmp_CtButtonType')
EXEC ('UPDATE dbo.CtButtonType SET ViewOnlyVisible = ''N'' WHERE ButtonTypeId in (6,7,8,11,51,54,56,57)')
   7.  45.30702~@~10~@~M~@~Update table CtButtonType~@~N~@~EXEC ('UPDATE dbo.CtButtonType SET ViewOnlyVisible = ''N'' WHERE ButtonTypeId in (47,48)')
   8.   2.30729~@~10~@~M~@~Change table StaticPg~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_StaticPg (StaticCsId smallint NULL, StaticJsId smallint NULL, StaticPgId int NULL, StaticPgTitle nvarchar(100) NULL, StaticMeta nvarchar(1000) NULL, StaticPgCss nvarchar(max) NULL, StaticPgJs nvarchar(max) NULL, StaticPgHtm nvarchar(max) NULL, StaticPgNm varchar(50) NULL, MasterPgFile varchar(100) NULL, StaticPgUrl varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_StaticPg (StaticCsId, StaticJsId, StaticPgId, StaticPgTitle, StaticMeta, StaticPgCss, StaticPgJs, StaticPgHtm, StaticPgNm, MasterPgFile, StaticPgUrl) SELECT convert(smallint,StaticCsId), convert(smallint,StaticJsId), convert(int,StaticPgId), StaticPgTitle, StaticMeta, StaticPgCss, StaticPgJs, StaticPgHtm, StaticPgNm, MasterPgFile, StaticPgUrl FROM dbo.StaticPg IF (SELECT COUNT(1) FROM dbo.Tmp_StaticPg) > 0 OR (SELECT COUNT(1) FROM dbo.StaticPg) = 0 DROP TABLE dbo.StaticPg') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.StaticPg'')) CREATE TABLE dbo.StaticPg (StaticPgId Int IDENTITY NOT NULL, StaticPgDesc NVarChar(300) NULL, StaticPgNm VarChar(50) NOT NULL, StaticPgTitle NVarChar(100) NOT NULL, StaticMeta NVarChar(1000) NULL, StaticPgCss NVarChar(max) NULL, StaticPgJs NVarChar(max) NULL, StaticPgHtm NVarChar(max) NOT NULL, MasterPgFile VarChar(100) NULL, StaticCsId SmallInt NULL, StaticJsId SmallInt NULL, StaticPgUrl VarChar(200) NULL, CONSTRAINT PK_StaticPg PRIMARY KEY CLUSTERED (StaticPgId))') EXEC (' ALTER TABLE dbo.StaticPg ADD CONSTRAINT DF_StaticPg_StaticPgNm DEFAULT (''PgNm'') FOR StaticPgNm SET IDENTITY_INSERT dbo.StaticPg ON INSERT INTO dbo.StaticPg (StaticPgId, StaticPgNm, StaticPgTitle, StaticMeta, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, StaticCsId, StaticJsId, StaticPgUrl) SELECT StaticPgId, StaticPgNm, StaticPgTitle, StaticMeta, StaticPgCss, StaticPgJs, StaticPgHtm, MasterPgFile, StaticCsId, StaticJsId, StaticPgUrl FROM dbo.Tmp_StaticPg SET IDENTITY_INSERT dbo.StaticPg OFF IF (SELECT COUNT(1) FROM dbo.StaticPg) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_StaticPg) = 0 DROP TABLE dbo.Tmp_StaticPg')
EXEC ('UPDATE dbo.StaticPg SET StaticPgDesc = StaticPgTitle + '' ('' + StaticPgNm + '')''')
EXEC ('TRUNCATE TABLE dbo.ScreenLstCri')
EXEC ('TRUNCATE TABLE dbo.ScreenLstInf')
   8.   3.30813~@~10~@~M~@~Update screen filter description~@~Y~@~UPDATE dbo.ScreenFilter
	SET ScreenFilterDesc = b.ProgramName + ' ' + RIGHT('00'+convert(varchar,FilterOrder),3) + ' ' + a.ScreenFilterName
	FROM dbo.ScreenFilter a INNER JOIN dbo.Screen b ON a.ScreenId = b.ScreenId

   8.   5.30916~@~10~@~M~@~Change table ScreenObj~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObj (DisplayModeId tinyint NULL, ColumnSize smallint NULL, ColumnHeight smallint NULL, TabIndex smallint NULL, SortOrder smallint NULL, ScreenObjId int NULL, ScreenId int NULL, ScreenGrpId int NULL, ColumnId int NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, TabFolderId int NULL, DefaultValue nvarchar(200) NULL, SystemValue nvarchar(200) NULL, MasterTable char(1) NULL, DefAfter char(1) NULL, DefAlways char(1) NULL, ColumnWrap char(1) NULL, GridGrpCd char(1) NULL, ColumnJustify char(1) NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, RequiredValid char(1) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL, IgnoreConfirm char(1) NULL, LabelCss varchar(1000) NULL, ContentCss varchar(1000) NULL, ColumnName varchar(20) NULL, ColumnDesc varchar(200) NULL, MaskValid varchar(50) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (DisplayModeId, ColumnSize, ColumnHeight, TabIndex, SortOrder, ScreenObjId, ScreenId, ScreenGrpId, ColumnId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, TabFolderId, DefaultValue, SystemValue, MasterTable, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink) SELECT convert(tinyint,DisplayModeId), convert(smallint,ColumnSize), convert(smallint,ColumnHeight), convert(smallint,TabIndex), convert(smallint,SortOrder), convert(int,ScreenObjId), convert(int,ScreenId), convert(int,ScreenGrpId), convert(int,ColumnId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), convert(int,TabFolderId), DefaultValue, SystemValue, MasterTable, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObj'')) CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, ScreenGrpId Int NOT NULL, LabelCss VarChar(1000) NULL, ContentCss VarChar(1000) NULL, ColumnId Int NULL, ColumnName VarChar(20) NOT NULL, ColumnDesc VarChar(200) NULL, DefaultValue NVarChar(200) NULL, DefAfter Char(1) NOT NULL, SystemValue NVarChar(200) NULL, DefAlways Char(1) NOT NULL, ColumnWrap Char(1) NOT NULL, GridGrpCd Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ColumnHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(100) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAfter DEFAULT (''N'') FOR DefAfter ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAlways DEFAULT (''N'') FOR DefAlways ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GridGrpCd DEFAULT (''N'') FOR GridGrpCd ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj')
   8.  10.31022~@~10~@~M~@~Add table Deleted~@~Y~@~EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Deleted'')) CREATE TABLE dbo.Deleted(DbName varchar(50) NOT NULL, TableName varchar(50) NOT NULL, PKeyId varchar(100) NOT NULL, DContent nvarchar(max) NULL, DeletedBy int NOT NULL, DeletedOn datetime NOT NULL)')

   8.  15.31114~@~10~@~M~@~Change table SredMebr~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_SredMebr (SredMebrId int NULL, MemberId int NULL, UserId int NULL, MnSalary money NULL, MnNtxBenefit money NULL, MnTaxBenefit money NULL, MemberTitle nvarchar(50) NULL, LT10PercShare char(1) NULL, MnWorkHours decimal(9,2) NULL)') EXEC (' INSERT INTO dbo.Tmp_SredMebr (SredMebrId, MemberId, UserId, MnSalary, MnNtxBenefit, MnTaxBenefit, MemberTitle, LT10PercShare, MnWorkHours) SELECT convert(int,SredMebrId), convert(int,MemberId), convert(int,UserId), convert(money,MnSalary), convert(money,MnNtxBenefit), convert(money,MnTaxBenefit), MemberTitle, LT10PercShare, convert(decimal(9,2),MnWorkHours) FROM dbo.SredMebr IF (SELECT COUNT(1) FROM dbo.Tmp_SredMebr) > 0 OR (SELECT COUNT(1) FROM dbo.SredMebr) = 0 DROP TABLE dbo.SredMebr') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.SredMebr'')) CREATE TABLE dbo.SredMebr (SredMebrId Int IDENTITY NOT NULL, MemberId Int NOT NULL, MemberName NVarChar(50) NULL, UserId Int NOT NULL, MemberTitle NVarChar(50) NULL, LT10PercShare Char(1) NOT NULL, MnSalary Money NOT NULL, MnNtxBenefit Money NOT NULL, MnTaxBenefit Money NOT NULL, MnWorkHours Decimal(9,2) NOT NULL, CONSTRAINT PK_SredMebr PRIMARY KEY CLUSTERED (SredMebrId))') EXEC (' SET IDENTITY_INSERT dbo.SredMebr ON INSERT INTO dbo.SredMebr (SredMebrId, MemberId, UserId, MemberTitle, LT10PercShare, MnSalary, MnNtxBenefit, MnTaxBenefit, MnWorkHours) SELECT SredMebrId, MemberId, UserId, MemberTitle, LT10PercShare, MnSalary, MnNtxBenefit, MnTaxBenefit, MnWorkHours FROM dbo.Tmp_SredMebr SET IDENTITY_INSERT dbo.SredMebr OFF IF (SELECT COUNT(1) FROM dbo.SredMebr) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_SredMebr) = 0 DROP TABLE dbo.Tmp_SredMebr IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_SredMebr'') CREATE UNIQUE NONCLUSTERED INDEX IU_SredMebr ON dbo.SredMebr(MemberId,UserId)')
   8.  15.31114~@~20~@~M~@~Add table UsrProvider~@~N~@~EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrProvider'')) CREATE TABLE dbo.UsrProvider(UsrId int NOT NULL, ProviderCd char(1) NOT NULL, LoginName nvarchar(200) NOT NULL, CONSTRAINT PK_UsrProvider PRIMARY KEY CLUSTERED (UsrId,ProviderCd))')
   8.  28.40423~@~10~@~M~@~Standardize screen criteria group~@~Y~@~EXEC ('UPDATE dbo.ScreenCri Set ScreenGrpId = 1')
   8.  29.40425~@~10~@~M~@~Change table ScreenGrp~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_ScreenGrp (BorderWidth tinyint NULL, TabIndex smallint NULL, ScreenGrpId int NULL, ScreenId int NULL, ParentGrpId int NULL, ScreenGrpName nvarchar(50) NULL, ScreenGrpTypeCd char(1) NULL, ContentVertical char(1) NULL, LabelVertical char(1) NULL, ScreenGrpIndex varchar(20) NULL, GrpStyle varchar(200) NULL)')
EXEC ('INSERT INTO dbo.Tmp_ScreenGrp (BorderWidth, TabIndex, ScreenGrpId, ScreenId, ParentGrpId, ScreenGrpName, ScreenGrpTypeCd, ContentVertical, LabelVertical, ScreenGrpIndex, GrpStyle) SELECT convert(tinyint,BorderWidth), convert(smallint,TabIndex), convert(int,ScreenGrpId), convert(int,ScreenId), convert(int,ParentGrpId), ScreenGrpName, ScreenGrpTypeCd, ContentVertical, LabelVertical, ScreenGrpIndex, GrpStyle FROM dbo.ScreenGrp IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenGrp) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenGrp) = 0 DROP TABLE dbo.ScreenGrp')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenGrp'')) CREATE TABLE dbo.ScreenGrp (ScreenGrpId Int IDENTITY NOT NULL, ScreenId Int NULL, ScreenGrpTypeCd Char(1) NULL, ParentGrpId Int NULL, ScreenGrpCss VarChar(20) NULL, ScreenGrpName NVarChar(50) NOT NULL, TabIndex SmallInt NULL, ScreenGrpIndex VarChar(20) NULL, ContentVertical Char(1) NULL, LabelVertical Char(1) NULL, BorderWidth TinyInt NULL, GrpStyle VarChar(200) NULL, CONSTRAINT PK_ScreenGrp PRIMARY KEY CLUSTERED (ScreenGrpId))')
EXEC ('SET IDENTITY_INSERT dbo.ScreenGrp ON INSERT INTO dbo.ScreenGrp (ScreenGrpId, ScreenId, ScreenGrpTypeCd, ParentGrpId, ScreenGrpName, TabIndex, ScreenGrpIndex, ContentVertical, LabelVertical, BorderWidth, GrpStyle) SELECT ScreenGrpId, ScreenId, ScreenGrpTypeCd, ParentGrpId, ScreenGrpName, TabIndex, ScreenGrpIndex, ContentVertical, LabelVertical, BorderWidth, GrpStyle FROM dbo.Tmp_ScreenGrp SET IDENTITY_INSERT dbo.ScreenGrp OFF IF (SELECT COUNT(1) FROM dbo.ScreenGrp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenGrp) = 0 DROP TABLE dbo.Tmp_ScreenGrp')

EXEC ('SET IDENTITY_INSERT dbo.ScreenGrp ON
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (801, ''c-1-1'', ''Column  1 to  1 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (802, ''c-2-2'', ''Column  2 to  2 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (803, ''c-3-3'', ''Column  3 to  3 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (804, ''c-4-4'', ''Column  4 to  4 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (805, ''c-5-5'', ''Column  5 to  5 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (806, ''c-6-6'', ''Column  6 to  6 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (807, ''c-7-7'', ''Column  7 to  7 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (808, ''c-8-8'', ''Column  8 to  8 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (809, ''c-9-9'', ''Column  9 to  9 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (810, ''c-10-10'', ''Column 10 to 10 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (811, ''c-11-11'', ''Column 11 to 11 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (812, ''c-12-12'', ''Column 12 to 12 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (813, ''c-1-2'', ''Column  1 to  2 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (814, ''c-2-3'', ''Column  2 to  3 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (815, ''c-3-4'', ''Column  3 to  4 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (816, ''c-4-5'', ''Column  4 to  5 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (817, ''c-5-6'', ''Column  5 to  6 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (818, ''c-6-7'', ''Column  6 to  7 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (819, ''c-7-8'', ''Column  7 to  8 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (820, ''c-8-9'', ''Column  8 to  9 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (821, ''c-9-10'', ''Column  9 to 10 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (822, ''c-10-11'', ''Column 10 to 11 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (823, ''c-11-12'', ''Column 11 to 12 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (824, ''c-1-3'', ''Column  1 to  3 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (825, ''c-2-4'', ''Column  2 to  4 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (826, ''c-3-5'', ''Column  3 to  5 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (827, ''c-4-6'', ''Column  4 to  6 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (828, ''c-5-7'', ''Column  5 to  7 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (829, ''c-6-8'', ''Column  6 to  8 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (830, ''c-7-9'', ''Column  7 to  9 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (831, ''c-8-10'', ''Column  8 to 10 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (832, ''c-9-11'', ''Column  9 to 11 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (833, ''c-10-12'', ''Column 10 to 12 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (834, ''c-1-4'', ''Column  1 to  4 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (835, ''c-2-5'', ''Column  2 to  5 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (836, ''c-3-6'', ''Column  3 to  6 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (837, ''c-4-7'', ''Column  4 to  7 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (838, ''c-5-8'', ''Column  5 to  8 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (839, ''c-6-9'', ''Column  6 to  9 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (840, ''c-7-10'', ''Column  7 to 10 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (841, ''c-8-11'', ''Column  8 to 11 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (842, ''c-9-12'', ''Column  9 to 12 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (843, ''c-1-5'', ''Column  1 to  5 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (844, ''c-2-6'', ''Column  2 to  6 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (845, ''c-3-7'', ''Column  3 to  7 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (846, ''c-4-8'', ''Column  4 to  8 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (847, ''c-5-9'', ''Column  5 to  9 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (848, ''c-6-10'', ''Column  6 to 10 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (849, ''c-7-11'', ''Column  7 to 11 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (850, ''c-8-12'', ''Column  8 to 12 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (851, ''c-1-6'', ''Column  1 to  6 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (852, ''c-2-7'', ''Column  2 to  7 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (853, ''c-3-8'', ''Column  3 to  8 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (854, ''c-4-9'', ''Column  4 to  9 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (855, ''c-5-10'', ''Column  5 to 10 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (856, ''c-6-11'', ''Column  6 to 11 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (857, ''c-7-12'', ''Column  7 to 12 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (858, ''c-1-7'', ''Column  1 to  7 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (859, ''c-2-8'', ''Column  2 to  8 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (860, ''c-3-9'', ''Column  3 to  9 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (861, ''c-4-10'', ''Column  4 to 10 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (862, ''c-5-11'', ''Column  5 to 11 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (863, ''c-6-12'', ''Column  6 to 12 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (864, ''c-1-8'', ''Column  1 to  8 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (865, ''c-2-9'', ''Column  2 to  9 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (866, ''c-3-10'', ''Column  3 to 10 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (867, ''c-4-11'', ''Column  4 to 11 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (868, ''c-5-12'', ''Column  5 to 12 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (869, ''c-1-9'', ''Column  1 to  9 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (870, ''c-2-10'', ''Column  2 to 10 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (871, ''c-3-11'', ''Column  3 to 11 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (872, ''c-4-12'', ''Column  4 to 12 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (873, ''c-1-10'', ''Column  1 to 10 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (874, ''c-2-11'', ''Column  2 to 11 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (875, ''c-3-12'', ''Column  3 to 12 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (876, ''c-1-11'', ''Column  1 to 11 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (877, ''c-2-12'', ''Column  2 to 12 of 12'')
INSERT dbo.ScreenGrp (ScreenGrpId,ScreenGrpCss,ScreenGrpName) VALUES (878, ''c-1-12'', ''Column  1 to 12 of 12'')
SET IDENTITY_INSERT dbo.ScreenGrp OFF')

EXEC ('UPDATE ScreenObj SET ScreenGrpId = 851 WHERE ScreenGrpId in (1,2,3,4)')
EXEC ('DECLARE @ScreenId int
DECLARE cur1 CURSOR FAST_FORWARD FOR SELECT ScreenId FROM dbo.Screen ORDER BY ScreenId FOR READ ONLY
OPEN cur1
FETCH NEXT FROM cur1 INTO @ScreenId
WHILE @@FETCH_STATUS = 0
BEGIN
	IF EXISTS (SELECT 1 FROM dbo.ScreenObj WHERE ScreenId = @ScreenId AND ScreenGrpId = 9)
	BEGIN
		UPDATE ScreenObj SET ScreenGrpId = 824 WHERE ScreenId = @ScreenId AND ScreenGrpId = 6
		UPDATE ScreenObj SET ScreenGrpId = 827 WHERE ScreenId = @ScreenId AND ScreenGrpId = 7
		UPDATE ScreenObj SET ScreenGrpId = 830 WHERE ScreenId = @ScreenId AND ScreenGrpId = 8
		UPDATE ScreenObj SET ScreenGrpId = 833 WHERE ScreenId = @ScreenId AND ScreenGrpId = 9
	END
	ELSE IF EXISTS (SELECT 1 FROM dbo.ScreenObj WHERE ScreenId = @ScreenId AND ScreenGrpId = 8)
	BEGIN
		UPDATE ScreenObj SET ScreenGrpId = 834 WHERE ScreenId = @ScreenId AND ScreenGrpId = 6
		UPDATE ScreenObj SET ScreenGrpId = 838 WHERE ScreenId = @ScreenId AND ScreenGrpId = 7
		UPDATE ScreenObj SET ScreenGrpId = 842 WHERE ScreenId = @ScreenId AND ScreenGrpId = 8
	END
	ELSE
	BEGIN
		UPDATE ScreenObj SET ScreenGrpId = 851 WHERE ScreenId = @ScreenId AND ScreenGrpId = 6
		UPDATE ScreenObj SET ScreenGrpId = 857 WHERE ScreenId = @ScreenId AND ScreenGrpId = 7
	END
	FETCH NEXT FROM cur1 INTO @ScreenId
END
CLOSE cur1
DEALLOCATE cur1')
EXEC ('UPDATE ScreenObj SET ScreenGrpId = 851 WHERE ScreenGrpId <= 800')
EXEC ('DELETE from ScreenGrp WHERE ScreenGrpId <= 800')

   8.  30.40429~@~10~@~M~@~Remove tables Custom & CustomDtl~@~Y~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Custom'')) DROP TABLE dbo.Custom')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CustomDtl'')) DROP TABLE dbo.CustomDtl')

   8.  30.40429~@~20~@~M~@~Remove table CtNumCols,CtSearchMode,CtScreenGrpTyp~@~Y~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtNumCols'')) DROP TABLE dbo.CtNumCols')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtSearchMode'')) DROP TABLE dbo.CtSearchMode')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtScreenGrpType'')) DROP TABLE dbo.CtScreenGrpType')
   8.  30.40429~@~30~@~M~@~Change table ScreenGrp~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenGrp (BorderWidth tinyint NULL, TabIndex smallint NULL, ScreenGrpId int NULL, ScreenId int NULL, ParentGrpId int NULL, ScreenGrpName nvarchar(50) NULL, ScreenGrpTypeCd char(1) NULL, ContentVertical char(1) NULL, LabelVertical char(1) NULL, ScreenGrpCss varchar(20) NULL, ScreenGrpIndex varchar(20) NULL, GrpStyle varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenGrp (BorderWidth, TabIndex, ScreenGrpId, ScreenId, ParentGrpId, ScreenGrpName, ScreenGrpTypeCd, ContentVertical, LabelVertical, ScreenGrpCss, ScreenGrpIndex, GrpStyle) SELECT convert(tinyint,BorderWidth), convert(smallint,TabIndex), convert(int,ScreenGrpId), convert(int,ScreenId), convert(int,ParentGrpId), ScreenGrpName, ScreenGrpTypeCd, ContentVertical, LabelVertical, ScreenGrpCss, ScreenGrpIndex, GrpStyle FROM dbo.ScreenGrp IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenGrp) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenGrp) = 0 DROP TABLE dbo.ScreenGrp') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenGrp'')) CREATE TABLE dbo.ScreenGrp (ScreenGrpId Int IDENTITY NOT NULL, ScreenGrpCss VarChar(20) NULL, ScreenGrpName NVarChar(50) NOT NULL, CONSTRAINT PK_ScreenGrp PRIMARY KEY CLUSTERED (ScreenGrpId))') EXEC (' SET IDENTITY_INSERT dbo.ScreenGrp ON INSERT INTO dbo.ScreenGrp (ScreenGrpId, ScreenGrpCss, ScreenGrpName) SELECT ScreenGrpId, ScreenGrpCss, ScreenGrpName FROM dbo.Tmp_ScreenGrp SET IDENTITY_INSERT dbo.ScreenGrp OFF IF (SELECT COUNT(1) FROM dbo.ScreenGrp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenGrp) = 0 DROP TABLE dbo.Tmp_ScreenGrp')
   8.  30.40429~@~40~@~M~@~Change table ScreenCri~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenCri (DisplayModeId tinyint NULL, TabIndex smallint NULL, ColumnSize smallint NULL, RowSize smallint NULL, ScreenCriId int NULL, ScreenId int NULL, ScreenGrpId int NULL, ColumnId int NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, ColumnJustify char(1) NULL, RequiredValid char(1) NULL, ScreenCriDesc varchar(100) NULL, LabelCss varchar(100) NULL, ContentCss varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenCri (DisplayModeId, TabIndex, ColumnSize, RowSize, ScreenCriId, ScreenId, ScreenGrpId, ColumnId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, ColumnJustify, RequiredValid, ScreenCriDesc, LabelCss, ContentCss) SELECT convert(tinyint,DisplayModeId), convert(smallint,TabIndex), convert(smallint,ColumnSize), convert(smallint,RowSize), convert(int,ScreenCriId), convert(int,ScreenId), convert(int,ScreenGrpId), convert(int,ColumnId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), ColumnJustify, RequiredValid, ScreenCriDesc, LabelCss, ContentCss FROM dbo.ScreenCri IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenCri) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenCri) = 0 DROP TABLE dbo.ScreenCri') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenCri'')) CREATE TABLE dbo.ScreenCri (ScreenCriId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, ScreenCriDesc VarChar(100) NULL, LabelCss VarChar(100) NULL, ContentCss VarChar(100) NULL, ColumnId Int NOT NULL, TabIndex SmallInt NOT NULL, DisplayModeId TinyInt NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, RowSize SmallInt NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, RequiredValid Char(1) NOT NULL, CONSTRAINT PK_ScreenCri PRIMARY KEY CLUSTERED (ScreenCriId))') EXEC (' SET IDENTITY_INSERT dbo.ScreenCri ON INSERT INTO dbo.ScreenCri (ScreenCriId, ScreenId, ScreenCriDesc, LabelCss, ContentCss, ColumnId, TabIndex, DisplayModeId, ColumnJustify, ColumnSize, RowSize, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, RequiredValid) SELECT ScreenCriId, ScreenId, ScreenCriDesc, LabelCss, ContentCss, ColumnId, TabIndex, DisplayModeId, ColumnJustify, ColumnSize, RowSize, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, RequiredValid FROM dbo.Tmp_ScreenCri SET IDENTITY_INSERT dbo.ScreenCri OFF IF (SELECT COUNT(1) FROM dbo.ScreenCri) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenCri) = 0 DROP TABLE dbo.Tmp_ScreenCri')
   8.  30.40429~@~50~@~M~@~Change table ScreenObj~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObj (DisplayModeId tinyint NULL, ColumnSize smallint NULL, ColumnHeight smallint NULL, TabIndex smallint NULL, SortOrder smallint NULL, ScreenObjId int NULL, ScreenId int NULL, ScreenGrpId int NULL, ColumnId int NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, TabFolderId int NULL, DefaultValue nvarchar(200) NULL, SystemValue nvarchar(200) NULL, MasterTable char(1) NULL, DefAfter char(1) NULL, DefAlways char(1) NULL, ColumnWrap char(1) NULL, GridGrpCd char(1) NULL, ColumnJustify char(1) NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, RequiredValid char(1) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL, IgnoreConfirm char(1) NULL, LabelCss varchar(1000) NULL, ContentCss varchar(1000) NULL, ColumnName varchar(20) NULL, ColumnDesc varchar(200) NULL, MaskValid varchar(100) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (DisplayModeId, ColumnSize, ColumnHeight, TabIndex, SortOrder, ScreenObjId, ScreenId, ScreenGrpId, ColumnId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, TabFolderId, DefaultValue, SystemValue, MasterTable, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink) SELECT convert(tinyint,DisplayModeId), convert(smallint,ColumnSize), convert(smallint,ColumnHeight), convert(smallint,TabIndex), convert(smallint,SortOrder), convert(int,ScreenObjId), convert(int,ScreenId), convert(int,ScreenGrpId), convert(int,ColumnId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), convert(int,TabFolderId), DefaultValue, SystemValue, MasterTable, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObj'')) CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, ScreenGrpId Int NOT NULL, LabelVertical Char(1) NOT NULL, LabelCss VarChar(1000) NULL, ContentCss VarChar(1000) NULL, ColumnId Int NULL, ColumnName VarChar(20) NOT NULL, ColumnDesc VarChar(200) NULL, DefaultValue NVarChar(200) NULL, DefAfter Char(1) NOT NULL, SystemValue NVarChar(200) NULL, DefAlways Char(1) NOT NULL, ColumnWrap Char(1) NOT NULL, GridGrpCd Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ColumnHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(100) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_LabelVertical DEFAULT (''N'') FOR LabelVertical ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAfter DEFAULT (''N'') FOR DefAfter ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAlways DEFAULT (''N'') FOR DefAlways ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GridGrpCd DEFAULT (''N'') FOR GridGrpCd ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, ScreenGrpId, ''N'', LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj')
   8.  32.40506~@~10~@~M~@~Change table ScreenObjHlp~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObjHlp (CultureId smallint NULL, ScreenObjHlpId int NULL, ScreenObjId int NULL, ColumnHeader nvarchar(50) NULL, ToolTip nvarchar(200) NULL, ErrMessage nvarchar(300) NULL, TbHint nvarchar(200) NULL, ScreenObjHlpDesc varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObjHlp (CultureId, ScreenObjHlpId, ScreenObjId, ColumnHeader, ToolTip, ErrMessage, TbHint, ScreenObjHlpDesc) SELECT convert(smallint,CultureId), convert(int,ScreenObjHlpId), convert(int,ScreenObjId), ColumnHeader, ToolTip, ErrMessage, TbHint, ScreenObjHlpDesc FROM dbo.ScreenObjHlp IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObjHlp) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObjHlp) = 0 DROP TABLE dbo.ScreenObjHlp') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObjHlp'')) CREATE TABLE dbo.ScreenObjHlp (ScreenObjHlpId Int IDENTITY NOT NULL, ScreenObjHlpDesc VarChar(200) NULL, ScreenObjId Int NOT NULL, CultureId SmallInt NOT NULL, ColumnHeader NVarChar(max) NULL, ToolTip NVarChar(200) NULL, ErrMessage NVarChar(300) NULL, TbHint NVarChar(200) NULL, CONSTRAINT PK_ScreenObjHlp PRIMARY KEY CLUSTERED (ScreenObjHlpId))') EXEC (' SET IDENTITY_INSERT dbo.ScreenObjHlp ON INSERT INTO dbo.ScreenObjHlp (ScreenObjHlpId, ScreenObjHlpDesc, ScreenObjId, CultureId, ColumnHeader, ToolTip, ErrMessage, TbHint) SELECT ScreenObjHlpId, ScreenObjHlpDesc, ScreenObjId, CultureId, ColumnHeader, ToolTip, ErrMessage, TbHint FROM dbo.Tmp_ScreenObjHlp SET IDENTITY_INSERT dbo.ScreenObjHlp OFF IF (SELECT COUNT(1) FROM dbo.ScreenObjHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObjHlp) = 0 DROP TABLE dbo.Tmp_ScreenObjHlp')
   8.  35.40512~@~10~@~M~@~Remove sp. Cr_ChkScreenGrp, etc.~@~Y~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Cr_ChkScreenGrp'')) DROP PROCEDURE Cr_ChkScreenGrp')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Cr_ChkScreenGrpLoop'')) DROP PROCEDURE Cr_ChkScreenGrpLoop')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Cr_ChkScreenParentGrp'')) DROP PROCEDURE Cr_ChkScreenParentGrp')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Cr_NoScreenDelWhenRef'')) DROP PROCEDURE Cr_NoScreenDelWhenRef')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Ir_ChgScreenCriGrp'')) DROP PROCEDURE Ir_ChgScreenCriGrp')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Ir_UpdScreenGrpIndex'')) DROP PROCEDURE Ir_UpdScreenGrpIndex')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Ir_UpdScreenGrpIndex1'')) DROP PROCEDURE Ir_UpdScreenGrpIndex1')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Ir_UpdScreenGrpIndex2'')) DROP PROCEDURE Ir_UpdScreenGrpIndex2')

   8.  37.40521~@~10~@~M~@~Change table Release~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_Release (ReleaseTypeId tinyint NULL, ReleaseId smallint NULL, EntityId smallint NULL, ReleaseName nvarchar(50) NULL, ReleaseDesc nvarchar(80) NULL, ReleaseDate datetime NULL, ReleaseOs char(1) NULL, ReleaseBuild varchar(20) NULL, TarScriptAft varchar(max) NULL, ReadMe varchar(max) NULL, MkDeploy varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_Release (ReleaseTypeId, ReleaseId, EntityId, ReleaseName, ReleaseDesc, ReleaseDate, ReleaseOs, ReleaseBuild, TarScriptAft, ReadMe, MkDeploy) SELECT convert(tinyint,ReleaseTypeId), convert(smallint,ReleaseId), convert(smallint,EntityId), ReleaseName, ReleaseDesc, ReleaseDate, ReleaseOs, ReleaseBuild, TarScriptAft, ReadMe, MkDeploy FROM dbo.Release IF (SELECT COUNT(1) FROM dbo.Tmp_Release) > 0 OR (SELECT COUNT(1) FROM dbo.Release) = 0 DROP TABLE dbo.Release') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Release'')) CREATE TABLE dbo.Release (ReleaseId SmallInt IDENTITY NOT NULL, ReleaseName NVarChar(50) NOT NULL, ReleaseDesc NVarChar(80) NULL, ReleaseBuild VarChar(20) NULL, ReleaseDate DateTime NULL, ReleaseOs Char(1) NOT NULL, EntityId SmallInt NOT NULL, ReleaseTypeId TinyInt NOT NULL, TarScriptAft VarChar(max) NULL, ReadMe VarChar(max) NULL, CONSTRAINT PK_Release PRIMARY KEY CLUSTERED (ReleaseId))') EXEC (' SET IDENTITY_INSERT dbo.Release ON INSERT INTO dbo.Release (ReleaseId, ReleaseName, ReleaseDesc, ReleaseBuild, ReleaseDate, ReleaseOs, EntityId, ReleaseTypeId, TarScriptAft, ReadMe) SELECT ReleaseId, ReleaseName, ReleaseDesc, ReleaseBuild, ReleaseDate, ReleaseOs, EntityId, ReleaseTypeId, TarScriptAft, ReadMe FROM dbo.Tmp_Release SET IDENTITY_INSERT dbo.Release OFF IF (SELECT COUNT(1) FROM dbo.Release) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Release) = 0 DROP TABLE dbo.Tmp_Release')
   8.  37.40521~@~20~@~M~@~Change table ScreenObj~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObj (DisplayModeId tinyint NULL, ColumnSize smallint NULL, ColumnHeight smallint NULL, TabIndex smallint NULL, SortOrder smallint NULL, ScreenObjId int NULL, ScreenId int NULL, ScreenGrpId int NULL, ColumnId int NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, TabFolderId int NULL, DefaultValue nvarchar(200) NULL, SystemValue nvarchar(200) NULL, MasterTable char(1) NULL, LabelVertical char(1) NULL, DefAfter char(1) NULL, DefAlways char(1) NULL, ColumnWrap char(1) NULL, GridGrpCd char(1) NULL, ColumnJustify char(1) NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, RequiredValid char(1) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL, IgnoreConfirm char(1) NULL, LabelCss varchar(1000) NULL, ContentCss varchar(1000) NULL, ColumnName varchar(20) NULL, ColumnDesc varchar(200) NULL, MaskValid varchar(100) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (DisplayModeId, ColumnSize, ColumnHeight, TabIndex, SortOrder, ScreenObjId, ScreenId, ScreenGrpId, ColumnId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, TabFolderId, DefaultValue, SystemValue, MasterTable, LabelVertical, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink) SELECT convert(tinyint,DisplayModeId), convert(smallint,ColumnSize), convert(smallint,ColumnHeight), convert(smallint,TabIndex), convert(smallint,SortOrder), convert(int,ScreenObjId), convert(int,ScreenId), convert(int,ScreenGrpId), convert(int,ColumnId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), convert(int,TabFolderId), DefaultValue, SystemValue, MasterTable, LabelVertical, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObj'')) CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, ScreenGrpId Int NOT NULL, LabelVertical Char(1) NOT NULL, LabelCss VarChar(1000) NULL, ContentCss VarChar(1000) NULL, ColumnId Int NULL, ColumnName VarChar(20) NOT NULL, ColumnDesc VarChar(200) NULL, DefaultValue NVarChar(200) NULL, HyperLinkUrl NVarChar(200) NULL, DefAfter Char(1) NOT NULL, SystemValue NVarChar(200) NULL, DefAlways Char(1) NOT NULL, ColumnWrap Char(1) NOT NULL, GridGrpCd Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ColumnHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(100) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_LabelVertical DEFAULT (''N'') FOR LabelVertical ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAfter DEFAULT (''N'') FOR DefAfter ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAlways DEFAULT (''N'') FOR DefAlways ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GridGrpCd DEFAULT (''N'') FOR GridGrpCd ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj')
   8.  39.40528~@~10~@~M~@~Change table ButtonHlp~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ButtonHlp (ButtonTypeId tinyint NULL, CultureId smallint NULL, ButtonHlpId int NULL, ScreenId int NULL, ReportId int NULL, WizardId int NULL, ButtonName nvarchar(200) NULL, ButtonToolTip nvarchar(400) NULL, ButtonVisible char(1) NULL, ButtonIsImage char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_ButtonHlp (ButtonTypeId, CultureId, ButtonHlpId, ScreenId, ReportId, WizardId, ButtonName, ButtonToolTip, ButtonVisible, ButtonIsImage) SELECT convert(tinyint,ButtonTypeId), convert(smallint,CultureId), convert(int,ButtonHlpId), convert(int,ScreenId), convert(int,ReportId), convert(int,WizardId), ButtonName, ButtonToolTip, ButtonVisible, ButtonIsImage FROM dbo.ButtonHlp IF (SELECT COUNT(1) FROM dbo.Tmp_ButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.ButtonHlp) = 0 DROP TABLE dbo.ButtonHlp') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ButtonHlp'')) CREATE TABLE dbo.ButtonHlp (ButtonHlpId Int IDENTITY NOT NULL, ScreenId Int NULL, ReportId Int NULL, WizardId Int NULL, CultureId SmallInt NOT NULL, ButtonTypeId TinyInt NOT NULL, ButtonName NVarChar(200) NULL, ButtonToolTip NVarChar(400) NULL, ButtonVisible Char(1) NOT NULL, CONSTRAINT PK_ButtonHlp PRIMARY KEY CLUSTERED (ButtonHlpId))') EXEC (' SET IDENTITY_INSERT dbo.ButtonHlp ON INSERT INTO dbo.ButtonHlp (ButtonHlpId, ScreenId, ReportId, WizardId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip, ButtonVisible) SELECT ButtonHlpId, ScreenId, ReportId, WizardId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip, ButtonVisible FROM dbo.Tmp_ButtonHlp SET IDENTITY_INSERT dbo.ButtonHlp OFF IF (SELECT COUNT(1) FROM dbo.ButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ButtonHlp) = 0 DROP TABLE dbo.Tmp_ButtonHlp')
   8.  39.40528~@~20~@~M~@~Change table CtButtonType~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_CtButtonType (ButtonTypeId tinyint NULL, ButtonTypeDesc nvarchar(50) NULL, ObjectType char(1) NULL, ButtonVisible char(1) NULL, ButtonIsImage char(1) NULL, ViewOnlyVisible char(1) NULL, ButtonTypeName varchar(20) NULL)') EXEC (' INSERT INTO dbo.Tmp_CtButtonType (ButtonTypeId, ButtonTypeDesc, ObjectType, ButtonVisible, ButtonIsImage, ViewOnlyVisible, ButtonTypeName) SELECT convert(tinyint,ButtonTypeId), ButtonTypeDesc, ObjectType, ButtonVisible, ButtonIsImage, ViewOnlyVisible, ButtonTypeName FROM dbo.CtButtonType IF (SELECT COUNT(1) FROM dbo.Tmp_CtButtonType) > 0 OR (SELECT COUNT(1) FROM dbo.CtButtonType) = 0 DROP TABLE dbo.CtButtonType') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtButtonType'')) CREATE TABLE dbo.CtButtonType (ButtonTypeId TinyInt NOT NULL, ObjectType Char(1) NOT NULL, ButtonTypeName VarChar(20) NOT NULL, ButtonTypeDesc NVarChar(50) NOT NULL, ButtonVisible Char(1) NOT NULL, ViewOnlyVisible Char(1) NOT NULL, CONSTRAINT PK_CtButtonType PRIMARY KEY CLUSTERED (ButtonTypeId))') EXEC (' ALTER TABLE dbo.CtButtonType ADD CONSTRAINT DF_CtButtonType_ViewOnlyVisible DEFAULT (''Y'') FOR ViewOnlyVisible INSERT INTO dbo.CtButtonType (ButtonTypeId, ObjectType, ButtonTypeName, ButtonTypeDesc, ButtonVisible, ViewOnlyVisible) SELECT ButtonTypeId, ObjectType, ButtonTypeName, ButtonTypeDesc, ButtonVisible, ViewOnlyVisible FROM dbo.Tmp_CtButtonType IF (SELECT COUNT(1) FROM dbo.CtButtonType) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtButtonType) = 0 DROP TABLE dbo.Tmp_CtButtonType')
   8.  40.40529~@~10~@~M~@~Change table WebRule~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_WebRule (RuleTypeId tinyint NULL, ButtonTypeId tinyint NULL, EventId tinyint NULL, WebRuleId int NULL, ScreenId int NULL, ScreenCriId int NULL, ScreenObjId int NULL, RuleName nvarchar(100) NULL, RuleDesc nvarchar(150) NULL, RuleDescription nvarchar(500) NULL, WebRuleProg nvarchar(max) NULL)') EXEC (' INSERT INTO dbo.Tmp_WebRule (RuleTypeId, ButtonTypeId, EventId, WebRuleId, ScreenId, ScreenCriId, ScreenObjId, RuleName, RuleDesc, RuleDescription, WebRuleProg) SELECT convert(tinyint,RuleTypeId), convert(tinyint,ButtonTypeId), convert(tinyint,EventId), convert(int,WebRuleId), convert(int,ScreenId), convert(int,ScreenCriId), convert(int,ScreenObjId), RuleName, RuleDesc, RuleDescription, WebRuleProg FROM dbo.WebRule IF (SELECT COUNT(1) FROM dbo.Tmp_WebRule) > 0 OR (SELECT COUNT(1) FROM dbo.WebRule) = 0 DROP TABLE dbo.WebRule') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.WebRule'')) CREATE TABLE dbo.WebRule (WebRuleId Int IDENTITY NOT NULL, RuleTypeId TinyInt NOT NULL, RuleName NVarChar(100) NOT NULL, RuleDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, ScreenId Int NOT NULL, ScreenObjId Int NULL, ButtonTypeId TinyInt NULL, EventId TinyInt NOT NULL, WebRuleProg NVarChar(max) NOT NULL, CONSTRAINT PK_WebRule PRIMARY KEY CLUSTERED (WebRuleId))') EXEC (' SET IDENTITY_INSERT dbo.WebRule ON INSERT INTO dbo.WebRule (WebRuleId, RuleTypeId, RuleName, RuleDesc, RuleDescription, ScreenId, ScreenObjId, ButtonTypeId, EventId, WebRuleProg) SELECT WebRuleId, RuleTypeId, RuleName, RuleDesc, RuleDescription, ScreenId, ScreenObjId, ButtonTypeId, EventId, WebRuleProg FROM dbo.Tmp_WebRule SET IDENTITY_INSERT dbo.WebRule OFF IF (SELECT COUNT(1) FROM dbo.WebRule) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_WebRule) = 0 DROP TABLE dbo.Tmp_WebRule')
   8.  41.40529~@~10~@~M~@~Remove obsolete server rule~@~Y~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Cr_RmScrCriWRule'')) DROP PROCEDURE dbo.Cr_RmScrCriWRule')
   8.  43.40601~@~10~@~M~@~Remove obsolete s.proc~@~Y~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.GetScreenCriDdlById'')) DROP PROCEDURE dbo.GetScreenCriDdlById')
   8.  48.40613~@~10~@~M~@~Remove obsolete Link Type~@~N~@~EXEC ('DELETE FROM dbo.CtLinkType WHERE LinkTypeCd = ''P''')
EXEC ('DELETE FROM dbo.UsrLink WHERE LinkTypeCd = ''P''')

   8.  48.40613~@~20~@~M~@~Change table CtLinkType~@~N~@~EXEC ('CREATE TABLE dbo.Tmp_CtLinkType (LinkTypeName nvarchar(50) NULL, LinkTypeCd char(1) NULL)')
EXEC ('INSERT INTO dbo.Tmp_CtLinkType (LinkTypeName, LinkTypeCd) SELECT LinkTypeName, LinkTypeCd FROM dbo.CtLinkType IF (SELECT COUNT(1) FROM dbo.Tmp_CtLinkType) > 0 OR (SELECT COUNT(1) FROM dbo.CtLinkType) = 0 DROP TABLE dbo.CtLinkType')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtLinkType'')) CREATE TABLE dbo.CtLinkType (LinkTypeCd Char(3) NOT NULL, LinkTypeName NVarChar(50) NOT NULL, LinkTypeDesc NVarChar(500) NULL, UsrDefined Char(1) NOT NULL, MobileCd Char(1) NOT NULL, CONSTRAINT PK_CtLinkType PRIMARY KEY CLUSTERED (LinkTypeCd))')
EXEC ('ALTER TABLE dbo.CtLinkType ADD CONSTRAINT DF_CtLinkType_UsrDefined DEFAULT (''N'') FOR UsrDefined ALTER TABLE dbo.CtLinkType ADD CONSTRAINT DF_CtLinkType_MobileCd DEFAULT (''S'') FOR MobileCd INSERT INTO dbo.CtLinkType (LinkTypeCd, LinkTypeName, UsrDefined, MobileCd) SELECT LinkTypeCd, LinkTypeName, ''N'', ''S'' FROM dbo.Tmp_CtLinkType IF (SELECT COUNT(1) FROM dbo.CtLinkType) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtLinkType) = 0 DROP TABLE dbo.Tmp_CtLinkType')

   8.  48.40613~@~30~@~M~@~Change table UsrLink~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_UsrLink (HomeTabId smallint NULL, UsrLinkOrd smallint NULL, UsrLinkId int NULL, UsrPrefId int NULL, UsrLinkTxt nvarchar(1000) NULL, LinkTypeCd char(3) NULL, Popup char(1) NULL, UsrLinkRef varchar(200) NULL, UsrLinkImg varchar(200) NULL, UsrLinkAlt varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_UsrLink (HomeTabId, UsrLinkOrd, UsrLinkId, UsrPrefId, UsrLinkTxt, LinkTypeCd, Popup, UsrLinkRef, UsrLinkImg, UsrLinkAlt) SELECT convert(smallint,HomeTabId), convert(smallint,UsrLinkOrd), convert(int,UsrLinkId), convert(int,UsrPrefId), UsrLinkTxt, LinkTypeCd, Popup, UsrLinkRef, UsrLinkImg, UsrLinkAlt FROM dbo.UsrLink IF (SELECT COUNT(1) FROM dbo.Tmp_UsrLink) > 0 OR (SELECT COUNT(1) FROM dbo.UsrLink) = 0 DROP TABLE dbo.UsrLink') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrLink'')) CREATE TABLE dbo.UsrLink (UsrLinkId Int IDENTITY NOT NULL, UsrPrefId Int NOT NULL, LinkTypeCd Char(3) NOT NULL, UsrLinkCss VarChar(1000) NULL, Popup Char(1) NOT NULL, UsrLinkRef VarChar(200) NOT NULL, UsrLinkTxt NVarChar(1000) NULL, UsrLinkImg VarChar(200) NULL, UsrLinkAlt VarChar(200) NULL, UsrLinkOrd SmallInt NULL, CONSTRAINT PK_UsrLink PRIMARY KEY CLUSTERED (UsrLinkId))') EXEC (' ALTER TABLE dbo.UsrLink ADD CONSTRAINT DF_UsrLink_Popup DEFAULT (''Y'') FOR Popup SET IDENTITY_INSERT dbo.UsrLink ON INSERT INTO dbo.UsrLink (UsrLinkId, UsrPrefId, LinkTypeCd, Popup, UsrLinkRef, UsrLinkTxt, UsrLinkImg, UsrLinkAlt, UsrLinkOrd) SELECT UsrLinkId, UsrPrefId, LinkTypeCd, Popup, UsrLinkRef, UsrLinkTxt, UsrLinkImg, UsrLinkAlt, UsrLinkOrd FROM dbo.Tmp_UsrLink SET IDENTITY_INSERT dbo.UsrLink OFF IF (SELECT COUNT(1) FROM dbo.UsrLink) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UsrLink) = 0 DROP TABLE dbo.Tmp_UsrLink')
   8.  48.40613~@~30~@~M~@~Remove obsolete table~@~N~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.HomeTab'')) DROP TABLE dbo.HomeTab')
   8.  48.40613~@~40~@~M~@~Change table UsrPref~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_UsrPref (SystemId tinyint NULL, UsrGroupId smallint NULL, ProjectId smallint NULL, UsrPrefId int NULL, UsrId int NULL, CompanyId int NULL, MemberId int NULL, AgentId int NULL, BrokerId int NULL, CustomerId int NULL, InvestorId int NULL, VendorId int NULL, MenuOptId int NULL, SampleImage varbinary(max) NULL, UsrPrefDesc nvarchar(50) NULL, PrefDefault char(1) NULL, SysListVisible char(1) NULL, ComListVisible char(1) NULL, PrjListVisible char(1) NULL, PageBannerImg varchar(100) NULL, UsrStyleSheet varchar(max) NULL, SplashImg varchar(100) NULL, MasterPgFile varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_UsrPref (SystemId, UsrGroupId, ProjectId, UsrPrefId, UsrId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, MenuOptId, SampleImage, UsrPrefDesc, PrefDefault, SysListVisible, ComListVisible, PrjListVisible, PageBannerImg, UsrStyleSheet, SplashImg, MasterPgFile) SELECT convert(tinyint,SystemId), convert(smallint,UsrGroupId), convert(smallint,ProjectId), convert(int,UsrPrefId), convert(int,UsrId), convert(int,CompanyId), convert(int,MemberId), convert(int,AgentId), convert(int,BrokerId), convert(int,CustomerId), convert(int,InvestorId), convert(int,VendorId), convert(int,MenuOptId), SampleImage, UsrPrefDesc, PrefDefault, SysListVisible, ComListVisible, PrjListVisible, PageBannerImg, UsrStyleSheet, SplashImg, MasterPgFile FROM dbo.UsrPref IF (SELECT COUNT(1) FROM dbo.Tmp_UsrPref) > 0 OR (SELECT COUNT(1) FROM dbo.UsrPref) = 0 DROP TABLE dbo.UsrPref') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrPref'')) CREATE TABLE dbo.UsrPref (UsrPrefId Int IDENTITY NOT NULL, UsrId Int NULL, UsrGroupId SmallInt NULL, CompanyId Int NULL, MemberId Int NULL, AgentId Int NULL, BrokerId Int NULL, CustomerId Int NULL, InvestorId Int NULL, VendorId Int NULL, ProjectId Int NULL, SystemId TinyInt NULL, PrefDefault Char(1) NOT NULL, UsrPrefDesc NVarChar(50) NOT NULL, SysListVisible Char(1) NOT NULL, ComListVisible Char(1) NOT NULL, PrjListVisible Char(1) NOT NULL, MenuOptId Int NOT NULL, UsrStyleSheet VarChar(max) NULL, SplashImg VarChar(100) NULL, MasterPgFile VarChar(100) NULL, SampleImage VarBinary(max) NULL, CONSTRAINT PK_UsrPref PRIMARY KEY CLUSTERED (UsrPrefId))') EXEC (' ALTER TABLE dbo.UsrPref ADD CONSTRAINT DF_UsrPref_PrjListVisible DEFAULT (''N'') FOR PrjListVisible SET IDENTITY_INSERT dbo.UsrPref ON INSERT INTO dbo.UsrPref (UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, UsrStyleSheet, SplashImg, MasterPgFile, SampleImage) SELECT UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, CONVERT(Int,ProjectId), SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, UsrStyleSheet, SplashImg, MasterPgFile, SampleImage FROM dbo.Tmp_UsrPref SET IDENTITY_INSERT dbo.UsrPref OFF IF (SELECT COUNT(1) FROM dbo.UsrPref) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UsrPref) = 0 DROP TABLE dbo.Tmp_UsrPref')
   8.  48.40613~@~50~@~M~@~Add table GroupCol and remove ScreenGrp~@~N~@~EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.GroupCol'')) BEGIN CREATE TABLE dbo.GroupCol (GroupColId SmallInt IDENTITY NOT NULL, ColCssClass VarChar(20) NULL, GroupColName NVarChar(50) NOT NULL, CONSTRAINT PK_GroupCol PRIMARY KEY CLUSTERED (GroupColId)) SET IDENTITY_INSERT dbo.GroupCol ON INSERT dbo.GroupCol (GroupColId,ColCssClass,GroupColName) SELECT ScreenGrpId,ScreenGrpCss,ScreenGrpName FROM dbo.ScreenGrp SET IDENTITY_INSERT dbo.GroupCol OFF END')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenGrp'')) DROP TABLE dbo.ScreenGrp')

   8.  48.40613~@~60~@~M~@~Change table ScreenObj~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObj (DisplayModeId tinyint NULL, ColumnSize smallint NULL, ColumnHeight smallint NULL, TabIndex smallint NULL, SortOrder smallint NULL, ScreenObjId int NULL, ScreenId int NULL, ScreenGrpId int NULL, ColumnId int NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, TabFolderId int NULL, DefaultValue nvarchar(200) NULL, HyperLinkUrl nvarchar(200) NULL, SystemValue nvarchar(200) NULL, MasterTable char(1) NULL, LabelVertical char(1) NULL, DefAfter char(1) NULL, DefAlways char(1) NULL, ColumnWrap char(1) NULL, GridGrpCd char(1) NULL, ColumnJustify char(1) NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, RequiredValid char(1) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL, IgnoreConfirm char(1) NULL, LabelCss varchar(1000) NULL, ContentCss varchar(1000) NULL, ColumnName varchar(20) NULL, ColumnDesc varchar(200) NULL, MaskValid varchar(100) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (DisplayModeId, ColumnSize, ColumnHeight, TabIndex, SortOrder, ScreenObjId, ScreenId, ScreenGrpId, ColumnId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, TabFolderId, DefaultValue, HyperLinkUrl, SystemValue, MasterTable, LabelVertical, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink) SELECT convert(tinyint,DisplayModeId), convert(smallint,ColumnSize), convert(smallint,ColumnHeight), convert(smallint,TabIndex), convert(smallint,SortOrder), convert(int,ScreenObjId), convert(int,ScreenId), convert(int,ScreenGrpId), convert(int,ColumnId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), convert(int,TabFolderId), DefaultValue, HyperLinkUrl, SystemValue, MasterTable, LabelVertical, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObj'')) CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, GroupColId SmallInt NOT NULL, LabelVertical Char(1) NOT NULL, LabelCss VarChar(1000) NULL, ContentCss VarChar(1000) NULL, ColumnId Int NULL, ColumnName VarChar(20) NOT NULL, ColumnDesc VarChar(200) NULL, DefaultValue NVarChar(200) NULL, HyperLinkUrl NVarChar(200) NULL, DefAfter Char(1) NOT NULL, SystemValue NVarChar(200) NULL, DefAlways Char(1) NOT NULL, ColumnWrap Char(1) NOT NULL, GridGrpCd Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ColumnHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(100) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_LabelVertical DEFAULT (''N'') FOR LabelVertical ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAfter DEFAULT (''N'') FOR DefAfter ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAlways DEFAULT (''N'') FOR DefAlways ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GridGrpCd DEFAULT (''N'') FOR GridGrpCd ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, GroupColId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, ScreenGrpId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj')
   8.  48.40613~@~70~@~M~@~Remove obsolete procedures~@~Y~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.GetDdlScreenGrpId303C46'')) DROP PROCEDURE dbo.GetDdlScreenGrpId303C46')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.GetDdlScreenGrpId3S1204'')) DROP PROCEDURE dbo.GetDdlScreenGrpId3S1204')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.GetDdlScreenGrpTypeCd3S1205'')) DROP PROCEDURE dbo.GetDdlScreenGrpTypeCd3S1205')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.GetObjScreenGrp'')) DROP PROCEDURE dbo.GetObjScreenGrp')

   8.  48.40613~@~80~@~M~@~Change table UsrPref~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_UsrPref (SystemId tinyint NULL, UsrGroupId smallint NULL, UsrPrefId int NULL, UsrId int NULL, CompanyId int NULL, MemberId int NULL, AgentId int NULL, BrokerId int NULL, CustomerId int NULL, InvestorId int NULL, VendorId int NULL, ProjectId int NULL, MenuOptId int NULL, SampleImage varbinary(max) NULL, UsrPrefDesc nvarchar(50) NULL, PrefDefault char(1) NULL, SysListVisible char(1) NULL, ComListVisible char(1) NULL, PrjListVisible char(1) NULL, UsrStyleSheet varchar(max) NULL, SplashImg varchar(100) NULL, MasterPgFile varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_UsrPref (SystemId, UsrGroupId, UsrPrefId, UsrId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, MenuOptId, SampleImage, UsrPrefDesc, PrefDefault, SysListVisible, ComListVisible, PrjListVisible, UsrStyleSheet, SplashImg, MasterPgFile) SELECT convert(tinyint,SystemId), convert(smallint,UsrGroupId), convert(int,UsrPrefId), convert(int,UsrId), convert(int,CompanyId), convert(int,MemberId), convert(int,AgentId), convert(int,BrokerId), convert(int,CustomerId), convert(int,InvestorId), convert(int,VendorId), convert(int,ProjectId), convert(int,MenuOptId), SampleImage, UsrPrefDesc, PrefDefault, SysListVisible, ComListVisible, PrjListVisible, UsrStyleSheet, SplashImg, MasterPgFile FROM dbo.UsrPref IF (SELECT COUNT(1) FROM dbo.Tmp_UsrPref) > 0 OR (SELECT COUNT(1) FROM dbo.UsrPref) = 0 DROP TABLE dbo.UsrPref') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrPref'')) CREATE TABLE dbo.UsrPref (UsrPrefId Int IDENTITY NOT NULL, UsrId Int NULL, UsrGroupId SmallInt NULL, CompanyId Int NULL, MemberId Int NULL, AgentId Int NULL, BrokerId Int NULL, CustomerId Int NULL, InvestorId Int NULL, VendorId Int NULL, ProjectId Int NULL, SystemId TinyInt NULL, PrefDefault Char(1) NOT NULL, UsrPrefDesc NVarChar(50) NOT NULL, SysListVisible Char(1) NOT NULL, ComListVisible Char(1) NOT NULL, PrjListVisible Char(1) NOT NULL, MenuOptId Int NOT NULL, UsrStyleSheet VarChar(max) NULL, MasterPgFile VarChar(100) NULL, SampleImage VarBinary(max) NULL, CONSTRAINT PK_UsrPref PRIMARY KEY CLUSTERED (UsrPrefId))') EXEC (' ALTER TABLE dbo.UsrPref ADD CONSTRAINT DF_UsrPref_PrjListVisible DEFAULT (''N'') FOR PrjListVisible SET IDENTITY_INSERT dbo.UsrPref ON INSERT INTO dbo.UsrPref (UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, UsrStyleSheet, MasterPgFile, SampleImage) SELECT UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, UsrStyleSheet, MasterPgFile, SampleImage FROM dbo.Tmp_UsrPref SET IDENTITY_INSERT dbo.UsrPref OFF IF (SELECT COUNT(1) FROM dbo.UsrPref) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UsrPref) = 0 DROP TABLE dbo.Tmp_UsrPref')
   8.  49.40618~@~10~@~M~@~Remove obsolete functions, tables, procedures~@~N~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.fEvalExpr'')) DROP FUNCTION dbo.fEvalExpr')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.GetUsrLink'')) DROP PROCEDURE dbo.GetUsrLink')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrLink'')) DROP TABLE dbo.UsrLink')

   8.  49.40618~@~40~@~M~@~Change table PageLnk~@~N~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.PageLnk'')) CREATE TABLE dbo.PageLnk (PageLnkId Int IDENTITY NOT NULL, PageObjId SmallInt NOT NULL, PageLnkCss VarChar(1000) NULL, Popup Char(1) NULL, PageLnkRef VarChar(200) NULL, PageLnkTxt NVarChar(4000) NULL, PageLnkImg VarChar(200) NULL, PageLnkAlt VarChar(200) NULL, PageLnkOrd SmallInt NOT NULL, CONSTRAINT PK_PageLnk PRIMARY KEY CLUSTERED (PageLnkId))') EXEC ('') EXEC ('') EXEC ('')
   8.  49.40618~@~20~@~M~@~Change table PageObj~@~N~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.PageObj'')) CREATE TABLE dbo.PageObj (PageObjId Int IDENTITY NOT NULL, PageObjDesc NVarChar(200) NULL, SectionCd Char(1) NOT NULL, GroupRowId SmallInt NULL, GroupColId SmallInt NULL, PageObjCss VarChar(500) NULL, PageObjOrd SmallInt NOT NULL, LinkTypeCd Char(3) NOT NULL, LinkJustify Char(1) NOT NULL, LinkVertical Char(1) NULL, CONSTRAINT PK_PageObj PRIMARY KEY CLUSTERED (PageObjId))') EXEC ('') EXEC ('') EXEC ('')
   8.  49.40618~@~30~@~M~@~Change table PageObjPref~@~N~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.PageObjPref'')) CREATE TABLE dbo.PageObjPref (PageObjPrefId Int IDENTITY NOT NULL, PageObjId Int NOT NULL, GrantDeny Char(1) NOT NULL, UsrPrefId Int NOT NULL, CONSTRAINT PK_PageObjPref PRIMARY KEY CLUSTERED (PageObjPrefId))') EXEC ('') EXEC ('') EXEC ('')
   8.  51.40627~@~10~@~M~@~Change table GroupRow~@~N~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.GroupRow'')) DROP TABLE dbo.GroupRow')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.GroupRow'')) BEGIN CREATE TABLE dbo.GroupRow (GroupRowId SmallInt IDENTITY NOT NULL, RowCssClass VarChar(20) NOT NULL, GroupRowName NVarChar(50) NOT NULL, CONSTRAINT PK_GroupRow PRIMARY KEY CLUSTERED (GroupRowId)) INSERT dbo.GroupRow (RowCssClass,GroupRowName) SELECT ColCssClass,GroupColName FROM dbo.GroupCol UPDATE dbo.GroupRow SET RowCssClass = REPLACE(RowCssClass,''c-'',''g-'') END')

   8.  51.40627~@~20~@~M~@~Change table ScreenObj~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObj (DisplayModeId tinyint NULL, GroupColId smallint NULL, ColumnSize smallint NULL, ColumnHeight smallint NULL, TabIndex smallint NULL, SortOrder smallint NULL, ScreenObjId int NULL, ScreenId int NULL, ColumnId int NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, TabFolderId int NULL, DefaultValue nvarchar(200) NULL, HyperLinkUrl nvarchar(200) NULL, SystemValue nvarchar(200) NULL, MasterTable char(1) NULL, LabelVertical char(1) NULL, DefAfter char(1) NULL, DefAlways char(1) NULL, ColumnWrap char(1) NULL, GridGrpCd char(1) NULL, ColumnJustify char(1) NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, RequiredValid char(1) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL, IgnoreConfirm char(1) NULL, LabelCss varchar(1000) NULL, ContentCss varchar(1000) NULL, ColumnName varchar(20) NULL, ColumnDesc varchar(200) NULL, MaskValid varchar(100) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (DisplayModeId, GroupColId, ColumnSize, ColumnHeight, TabIndex, SortOrder, ScreenObjId, ScreenId, ColumnId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, TabFolderId, DefaultValue, HyperLinkUrl, SystemValue, MasterTable, LabelVertical, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink) SELECT convert(tinyint,DisplayModeId), convert(smallint,GroupColId), convert(smallint,ColumnSize), convert(smallint,ColumnHeight), convert(smallint,TabIndex), convert(smallint,SortOrder), convert(int,ScreenObjId), convert(int,ScreenId), convert(int,ColumnId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), convert(int,TabFolderId), DefaultValue, HyperLinkUrl, SystemValue, MasterTable, LabelVertical, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObj'')) CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, GroupRowId SmallInt NOT NULL, GroupColId SmallInt NOT NULL, LabelVertical Char(1) NOT NULL, LabelCss VarChar(1000) NULL, ContentCss VarChar(1000) NULL, ColumnId Int NULL, ColumnName VarChar(20) NOT NULL, ColumnDesc VarChar(200) NULL, DefaultValue NVarChar(200) NULL, HyperLinkUrl NVarChar(200) NULL, DefAfter Char(1) NOT NULL, SystemValue NVarChar(200) NULL, DefAlways Char(1) NOT NULL, ColumnWrap Char(1) NOT NULL, GridGrpCd Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ColumnHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(100) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GroupRowId DEFAULT (78) FOR GroupRowId ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_LabelVertical DEFAULT (''N'') FOR LabelVertical ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAfter DEFAULT (''N'') FOR DefAfter ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAlways DEFAULT (''N'') FOR DefAlways ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GridGrpCd DEFAULT (''N'') FOR GridGrpCd ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, GroupRowId, GroupColId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, 78, GroupColId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj')
   8.  51.40627~@~30~@~M~@~Change table PageObj~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_PageObj (GroupRowId smallint NULL, GroupColId smallint NULL, PageObjOrd smallint NULL, PageObjId int NULL, PageObjDesc nvarchar(200) NULL, SectionCd char(1) NULL, LinkTypeCd char(3) NULL, LinkJustify char(1) NULL, LinkVertical char(1) NULL, PageObjCss varchar(500) NULL)') EXEC (' INSERT INTO dbo.Tmp_PageObj (GroupRowId, GroupColId, PageObjOrd, PageObjId, PageObjDesc, SectionCd, LinkTypeCd, LinkJustify, LinkVertical, PageObjCss) SELECT convert(smallint,GroupRowId), convert(smallint,GroupColId), convert(smallint,PageObjOrd), convert(int,PageObjId), PageObjDesc, SectionCd, LinkTypeCd, LinkJustify, LinkVertical, PageObjCss FROM dbo.PageObj IF (SELECT COUNT(1) FROM dbo.Tmp_PageObj) > 0 OR (SELECT COUNT(1) FROM dbo.PageObj) = 0 DROP TABLE dbo.PageObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.PageObj'')) CREATE TABLE dbo.PageObj (PageObjId Int IDENTITY NOT NULL, PageObjDesc NVarChar(200) NULL, SectionCd Char(1) NOT NULL, GroupRowId SmallInt NULL, GroupColId SmallInt NULL, GroupRowCss VarChar(500) NULL, GroupColCss VarChar(500) NULL, PageObjOrd SmallInt NOT NULL, LinkTypeCd Char(3) NOT NULL, CONSTRAINT PK_PageObj PRIMARY KEY CLUSTERED (PageObjId))') EXEC (' SET IDENTITY_INSERT dbo.PageObj ON INSERT INTO dbo.PageObj (PageObjId, PageObjDesc, SectionCd, GroupRowId, GroupColId, GroupColCss, PageObjOrd, LinkTypeCd) SELECT PageObjId, PageObjDesc, SectionCd, GroupRowId, GroupColId, PageObjCss, PageObjOrd, LinkTypeCd FROM dbo.Tmp_PageObj SET IDENTITY_INSERT dbo.PageObj OFF IF (SELECT COUNT(1) FROM dbo.PageObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_PageObj) = 0 DROP TABLE dbo.Tmp_PageObj')
   8.  54.40725~@~10~@~M~@~Change table MemTrans~@~Y~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.MemTrans'')) CREATE TABLE dbo.MemTrans (MemTransId Int IDENTITY NOT NULL, InStr NVarChar(2000) NOT NULL, CultureTypeId SmallInt NOT NULL, OutStr NVarChar(2000) NOT NULL, CONSTRAINT PK_MemTrans PRIMARY KEY CLUSTERED (MemTransId))') EXEC ('') EXEC ('') EXEC ('')
   8.  54.40725~@~20~@~M~@~Change table MemTrans~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_MemTrans (CultureTypeId smallint NULL, MemTransId int NULL, InStr nvarchar(2000) NULL, OutStr nvarchar(2000) NULL)') EXEC (' INSERT INTO dbo.Tmp_MemTrans (CultureTypeId, MemTransId, InStr, OutStr) SELECT convert(smallint,CultureTypeId), convert(int,MemTransId), InStr, OutStr FROM dbo.MemTrans IF (SELECT COUNT(1) FROM dbo.Tmp_MemTrans) > 0 OR (SELECT COUNT(1) FROM dbo.MemTrans) = 0 DROP TABLE dbo.MemTrans') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.MemTrans'')) CREATE TABLE dbo.MemTrans (MemTransId Int IDENTITY NOT NULL, InStr NVarChar(2000) NOT NULL, CultureTypeId SmallInt NOT NULL, OutStr NVarChar(2000) NOT NULL, CONSTRAINT PK_MemTrans PRIMARY KEY CLUSTERED (MemTransId))') EXEC (' SET IDENTITY_INSERT dbo.MemTrans ON INSERT INTO dbo.MemTrans (MemTransId, InStr, CultureTypeId, OutStr) SELECT MemTransId, InStr, CultureTypeId, OutStr FROM dbo.Tmp_MemTrans SET IDENTITY_INSERT dbo.MemTrans OFF IF (SELECT COUNT(1) FROM dbo.MemTrans) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_MemTrans) = 0 DROP TABLE dbo.Tmp_MemTrans IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_MemTrans'') CREATE UNIQUE NONCLUSTERED INDEX IU_MemTrans ON dbo.MemTrans(InStr,CultureTypeId)')
   8.  54.40725~@~30~@~M~@~Change table DbColumn~@~Y~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_DbColumn_DbTable'') ALTER TABLE dbo.DbColumn DROP CONSTRAINT FK_DbColumn_DbTable CREATE TABLE dbo.Tmp_DbColumn (DataType tinyint NULL, ColumnScale tinyint NULL, ColumnIndex smallint NULL, ColumnLength smallint NULL, ColumnId int NULL, TableId int NULL, DefaultValue nvarchar(50) NULL, ColObjective nvarchar(200) NULL, AllowNulls char(1) NULL, ColumnIdentity char(1) NULL, PrimaryKey char(1) NULL, IsIndexU char(1) NULL, IsIndex char(1) NULL, ExternalTable varchar(50) NULL, ColumnName varchar(50) NULL, ColumnDesc varchar(100) NULL, PrevColName varchar(20) NULL)') EXEC (' INSERT INTO dbo.Tmp_DbColumn (DataType, ColumnScale, ColumnIndex, ColumnLength, ColumnId, TableId, DefaultValue, ColObjective, AllowNulls, ColumnIdentity, PrimaryKey, IsIndexU, IsIndex, ExternalTable, ColumnName, ColumnDesc, PrevColName) SELECT convert(tinyint,DataType), convert(tinyint,ColumnScale), convert(smallint,ColumnIndex), convert(smallint,ColumnLength), convert(int,ColumnId), convert(int,TableId), DefaultValue, ColObjective, AllowNulls, ColumnIdentity, PrimaryKey, IsIndexU, IsIndex, ExternalTable, ColumnName, ColumnDesc, PrevColName FROM dbo.DbColumn IF (SELECT COUNT(1) FROM dbo.Tmp_DbColumn) > 0 OR (SELECT COUNT(1) FROM dbo.DbColumn) = 0 DROP TABLE dbo.DbColumn') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.DbColumn'')) CREATE TABLE dbo.DbColumn (ColumnId Int IDENTITY NOT NULL, TableId Int NOT NULL, ColumnIndex SmallInt NULL, ExternalTable VarChar(50) NULL, ColumnName VarChar(50) NOT NULL, ColumnDesc VarChar(100) NULL, DataType TinyInt NOT NULL, ColumnLength SmallInt NOT NULL, ColumnScale TinyInt NULL, DefaultValue NVarChar(50) NULL, AllowNulls Char(1) NOT NULL, ColumnIdentity Char(1) NOT NULL, PrimaryKey Char(1) NOT NULL, IsIndexU Char(1) NOT NULL, IsIndex Char(1) NOT NULL, ColObjective NVarChar(200) NULL, PrevColName VarChar(20) NULL, CONSTRAINT PK_DbColumn PRIMARY KEY CLUSTERED (ColumnId))') EXEC (' ALTER TABLE dbo.DbColumn ADD CONSTRAINT DF_DbColumn_IsIndexU DEFAULT (''N'') FOR IsIndexU ALTER TABLE dbo.DbColumn ADD CONSTRAINT DF_DbColumn_IsIndex DEFAULT (''N'') FOR IsIndex SET IDENTITY_INSERT dbo.DbColumn ON INSERT INTO dbo.DbColumn (ColumnId, TableId, ColumnIndex, ExternalTable, ColumnName, ColumnDesc, DataType, ColumnLength, ColumnScale, DefaultValue, AllowNulls, ColumnIdentity, PrimaryKey, IsIndexU, IsIndex, ColObjective, PrevColName) SELECT ColumnId, TableId, ColumnIndex, ExternalTable, ColumnName, ColumnDesc, DataType, ColumnLength, ColumnScale, DefaultValue, AllowNulls, ColumnIdentity, PrimaryKey, IsIndexU, IsIndex, ColObjective, PrevColName FROM dbo.Tmp_DbColumn SET IDENTITY_INSERT dbo.DbColumn OFF IF (SELECT COUNT(1) FROM dbo.DbColumn) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_DbColumn) = 0 DROP TABLE dbo.Tmp_DbColumn ALTER TABLE dbo.DbColumn WITH NOCHECK ADD CONSTRAINT FK_DbColumn_DbTable FOREIGN KEY (TableId) REFERENCES dbo.DbTable (TableId)')
   8.  54.40725~@~40~@~M~@~Change table ReportObj~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_ReportObj (PaddSize tinyint NULL, DataTypeId tinyint NULL, OperatorId tinyint NULL, TabIndex smallint NULL, ReportObjId int NULL, ReportId int NULL, ReportCriId int NULL, PaddChar nchar(1) NULL, RptObjTypeCd char(1) NULL, ColumnName varchar(50) NULL, ColumnDesc varchar(100) NULL, ColumnFormat varchar(20) NULL)') EXEC (' INSERT INTO dbo.Tmp_ReportObj (PaddSize, DataTypeId, OperatorId, TabIndex, ReportObjId, ReportId, ReportCriId, PaddChar, RptObjTypeCd, ColumnName, ColumnDesc, ColumnFormat) SELECT convert(tinyint,PaddSize), convert(tinyint,DataTypeId), convert(tinyint,OperatorId), convert(smallint,TabIndex), convert(int,ReportObjId), convert(int,ReportId), convert(int,ReportCriId), PaddChar, RptObjTypeCd, ColumnName, ColumnDesc, ColumnFormat FROM dbo.ReportObj IF (SELECT COUNT(1) FROM dbo.Tmp_ReportObj) > 0 OR (SELECT COUNT(1) FROM dbo.ReportObj) = 0 DROP TABLE dbo.ReportObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ReportObj'')) CREATE TABLE dbo.ReportObj (ReportObjId Int IDENTITY NOT NULL, ReportId Int NOT NULL, RptObjTypeCd Char(1) NOT NULL, ColumnName VarChar(50) NOT NULL, ColumnDesc VarChar(100) NULL, TabIndex SmallInt NOT NULL, ColumnFormat VarChar(20) NULL, PaddSize TinyInt NULL, PaddChar NChar(1) NULL, DataTypeId TinyInt NOT NULL, OperatorId TinyInt NULL, ReportCriId Int NULL, CONSTRAINT PK_ReportObj PRIMARY KEY CLUSTERED (ReportObjId))') EXEC (' ALTER TABLE dbo.ReportObj ADD CONSTRAINT DF_ReportObj_RptObjTypeCd DEFAULT (''F'') FOR RptObjTypeCd SET IDENTITY_INSERT dbo.ReportObj ON INSERT INTO dbo.ReportObj (ReportObjId, ReportId, RptObjTypeCd, ColumnName, ColumnDesc, TabIndex, ColumnFormat, PaddSize, PaddChar, DataTypeId, OperatorId, ReportCriId) SELECT ReportObjId, ReportId, RptObjTypeCd, ColumnName, ColumnDesc, TabIndex, ColumnFormat, PaddSize, PaddChar, DataTypeId, OperatorId, ReportCriId FROM dbo.Tmp_ReportObj SET IDENTITY_INSERT dbo.ReportObj OFF IF (SELECT COUNT(1) FROM dbo.ReportObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ReportObj) = 0 DROP TABLE dbo.Tmp_ReportObj')

EXEC ('IF  EXISTS (SELECT 1 FROM sys.foreign_keys WHERE object_id = OBJECT_ID(''[dbo].[FK_DbColumn_DbTable]'') AND parent_object_id = OBJECT_ID(''[dbo].[DbColumn]'')) ALTER TABLE [dbo].[DbColumn] DROP CONSTRAINT [FK_DbColumn_DbTable]')

   8.  54.40725~@~80~@~M~@~Change table SctGrpRow~@~N~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.SctGrpRow'')) CREATE TABLE dbo.SctGrpRow (SctGrpRowId SmallInt IDENTITY NOT NULL, SectionCd Char(1) NOT NULL, GroupRowId SmallInt NOT NULL, SctGrpRowCss VarChar(1000) NULL, CONSTRAINT PK_SctGrpRow PRIMARY KEY CLUSTERED (SctGrpRowId))') EXEC ('') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_SctGrpRow'') CREATE UNIQUE NONCLUSTERED INDEX IU_SctGrpRow ON dbo.SctGrpRow(SectionCd,GroupRowId)') EXEC ('')
   8.  54.40725~@~90~@~M~@~Change table SctGrpCol~@~N~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.SctGrpCol'')) CREATE TABLE dbo.SctGrpCol (SctGrpColId SmallInt IDENTITY NOT NULL, SectionCd Char(1) NOT NULL, GroupColId SmallInt NOT NULL, SctGrpColCss VarChar(1000) NULL, SctGrpColDiv VarChar(1000) NULL, CONSTRAINT PK_SctGrpCol PRIMARY KEY CLUSTERED (SctGrpColId))') EXEC ('') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_SctGrpCol'') CREATE UNIQUE NONCLUSTERED INDEX IU_SctGrpCol ON dbo.SctGrpCol(SectionCd,GroupColId)') EXEC ('')
   8.  54.40725~@~100~@~M~@~Change table PageObj~@~N~@~EXEC ('CREATE TABLE dbo.Tmp_PageObj (GroupRowId smallint NULL, GroupColId smallint NULL, PageObjOrd smallint NULL, PageObjId int NULL, PageObjDesc nvarchar(200) NULL, SectionCd char(1) NULL, LinkTypeCd char(3) NULL)')
EXEC ('INSERT INTO dbo.Tmp_PageObj (GroupRowId, GroupColId, PageObjOrd, PageObjId, PageObjDesc, SectionCd, LinkTypeCd) SELECT convert(smallint,GroupRowId), convert(smallint,GroupColId), convert(smallint,PageObjOrd), convert(int,PageObjId), PageObjDesc, SectionCd, LinkTypeCd FROM dbo.PageObj IF (SELECT COUNT(1) FROM dbo.Tmp_PageObj) > 0 OR (SELECT COUNT(1) FROM dbo.PageObj) = 0 DROP TABLE dbo.PageObj')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.PageObj'')) CREATE TABLE dbo.PageObj (PageObjId Int IDENTITY NOT NULL, PageObjDesc NVarChar(200) NULL, SectionCd Char(1) NOT NULL, GroupRowId SmallInt NULL, GroupColId SmallInt NULL, PageObjCss VarChar(1000) NULL, PageObjSrp VarChar(1000) NULL, PageObjOrd SmallInt NOT NULL, LinkTypeCd Char(3) NOT NULL, SctGrpRow varchar(200) NULL, SctGrpCol varchar(200) NULL, CONSTRAINT PK_PageObj PRIMARY KEY CLUSTERED (PageObjId))')
EXEC ('SET IDENTITY_INSERT dbo.PageObj ON INSERT INTO dbo.PageObj (PageObjId, PageObjDesc, SectionCd, GroupRowId, GroupColId, PageObjOrd, LinkTypeCd) SELECT PageObjId, PageObjDesc, SectionCd, GroupRowId, GroupColId, PageObjOrd, LinkTypeCd FROM dbo.Tmp_PageObj SET IDENTITY_INSERT dbo.PageObj OFF IF (SELECT COUNT(1) FROM dbo.PageObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_PageObj) = 0 DROP TABLE dbo.Tmp_PageObj')

   8.  54.40725~@~70~@~M~@~Modify tables GroupCol and GroupRow~@~N~@~IF NOT EXISTS (SELECT 1 FROM dbo.GroupCol WHERE CHARINDEX('r',ColCssClass) > 0) EXEC ('UPDATE dbo.GroupCol SET ColCssClass = REPLACE(ColCssClass,''c-'',''rc-'')')
IF NOT EXISTS (SELECT 1 FROM dbo.GroupRow WHERE CHARINDEX('r',RowCssClass) > 0) EXEC ('UPDATE dbo.GroupRow SET RowCssClass = REPLACE(RowCssClass,''g-'',''rg-'')')

   8.  54.40725~@~110~@~M~@~Change table SctGrpCol~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_SctGrpCol (SctGrpColId smallint NULL, GroupColId smallint NULL, SectionCd char(1) NULL, SctGrpColCss varchar(1000) NULL, SctGrpColDiv varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_SctGrpCol (SctGrpColId, GroupColId, SectionCd, SctGrpColCss, SctGrpColDiv) SELECT convert(smallint,SctGrpColId), convert(smallint,GroupColId), SectionCd, SctGrpColCss, SctGrpColDiv FROM dbo.SctGrpCol IF (SELECT COUNT(1) FROM dbo.Tmp_SctGrpCol) > 0 OR (SELECT COUNT(1) FROM dbo.SctGrpCol) = 0 DROP TABLE dbo.SctGrpCol') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.SctGrpCol'')) CREATE TABLE dbo.SctGrpCol (SctGrpColId SmallInt IDENTITY NOT NULL, SctGrpColDesc NVarChar(200) NULL, SectionCd Char(1) NOT NULL, GroupColId SmallInt NOT NULL, SctGrpColCss VarChar(1000) NULL, SctGrpColDiv VarChar(1000) NULL, CONSTRAINT PK_SctGrpCol PRIMARY KEY CLUSTERED (SctGrpColId))') EXEC (' SET IDENTITY_INSERT dbo.SctGrpCol ON INSERT INTO dbo.SctGrpCol (SctGrpColId, SectionCd, GroupColId, SctGrpColCss, SctGrpColDiv) SELECT SctGrpColId, SectionCd, GroupColId, SctGrpColCss, SctGrpColDiv FROM dbo.Tmp_SctGrpCol SET IDENTITY_INSERT dbo.SctGrpCol OFF IF (SELECT COUNT(1) FROM dbo.SctGrpCol) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_SctGrpCol) = 0 DROP TABLE dbo.Tmp_SctGrpCol IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_SctGrpCol'') CREATE UNIQUE NONCLUSTERED INDEX IU_SctGrpCol ON dbo.SctGrpCol(SectionCd,GroupColId)')
   8.  54.40725~@~120~@~M~@~Change table SctGrpRow~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_SctGrpRow (SctGrpRowId smallint NULL, GroupRowId smallint NULL, SectionCd char(1) NULL, SctGrpRowCss varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_SctGrpRow (SctGrpRowId, GroupRowId, SectionCd, SctGrpRowCss) SELECT convert(smallint,SctGrpRowId), convert(smallint,GroupRowId), SectionCd, SctGrpRowCss FROM dbo.SctGrpRow IF (SELECT COUNT(1) FROM dbo.Tmp_SctGrpRow) > 0 OR (SELECT COUNT(1) FROM dbo.SctGrpRow) = 0 DROP TABLE dbo.SctGrpRow') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.SctGrpRow'')) CREATE TABLE dbo.SctGrpRow (SctGrpRowId SmallInt IDENTITY NOT NULL, SctGrpRowDesc NVarChar(200) NULL, SectionCd Char(1) NOT NULL, GroupRowId SmallInt NOT NULL, SctGrpRowCss VarChar(1000) NULL, CONSTRAINT PK_SctGrpRow PRIMARY KEY CLUSTERED (SctGrpRowId))') EXEC (' SET IDENTITY_INSERT dbo.SctGrpRow ON INSERT INTO dbo.SctGrpRow (SctGrpRowId, SectionCd, GroupRowId, SctGrpRowCss) SELECT SctGrpRowId, SectionCd, GroupRowId, SctGrpRowCss FROM dbo.Tmp_SctGrpRow SET IDENTITY_INSERT dbo.SctGrpRow OFF IF (SELECT COUNT(1) FROM dbo.SctGrpRow) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_SctGrpRow) = 0 DROP TABLE dbo.Tmp_SctGrpRow IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_SctGrpRow'') CREATE UNIQUE NONCLUSTERED INDEX IU_SctGrpRow ON dbo.SctGrpRow(SectionCd,GroupRowId)')
   8.  55.40810~@~10~@~M~@~Change table UsrPref~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_UsrPref (SystemId tinyint NULL, UsrGroupId smallint NULL, UsrPrefId int NULL, UsrId int NULL, CompanyId int NULL, MemberId int NULL, AgentId int NULL, BrokerId int NULL, CustomerId int NULL, InvestorId int NULL, VendorId int NULL, ProjectId int NULL, MenuOptId int NULL, SampleImage varbinary(max) NULL, UsrPrefDesc nvarchar(50) NULL, PrefDefault char(1) NULL, SysListVisible char(1) NULL, ComListVisible char(1) NULL, PrjListVisible char(1) NULL, UsrStyleSheet varchar(max) NULL, MasterPgFile varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_UsrPref (SystemId, UsrGroupId, UsrPrefId, UsrId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, MenuOptId, SampleImage, UsrPrefDesc, PrefDefault, SysListVisible, ComListVisible, PrjListVisible, UsrStyleSheet, MasterPgFile) SELECT convert(tinyint,SystemId), convert(smallint,UsrGroupId), convert(int,UsrPrefId), convert(int,UsrId), convert(int,CompanyId), convert(int,MemberId), convert(int,AgentId), convert(int,BrokerId), convert(int,CustomerId), convert(int,InvestorId), convert(int,VendorId), convert(int,ProjectId), convert(int,MenuOptId), SampleImage, UsrPrefDesc, PrefDefault, SysListVisible, ComListVisible, PrjListVisible, UsrStyleSheet, MasterPgFile FROM dbo.UsrPref IF (SELECT COUNT(1) FROM dbo.Tmp_UsrPref) > 0 OR (SELECT COUNT(1) FROM dbo.UsrPref) = 0 DROP TABLE dbo.UsrPref') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrPref'')) CREATE TABLE dbo.UsrPref (UsrPrefId Int IDENTITY NOT NULL, UsrId Int NULL, UsrGroupId SmallInt NULL, CompanyId Int NULL, MemberId Int NULL, AgentId Int NULL, BrokerId Int NULL, CustomerId Int NULL, InvestorId Int NULL, VendorId Int NULL, ProjectId Int NULL, SystemId TinyInt NULL, PrefDefault Char(1) NOT NULL, UsrPrefDesc NVarChar(50) NOT NULL, SysListVisible Char(1) NOT NULL, ComListVisible Char(1) NOT NULL, PrjListVisible Char(1) NOT NULL, MenuOptId Int NOT NULL, UsrStyleSheet VarChar(max) NULL, MasterPgFile VarChar(100) NULL, LoginImage VarChar(200) NULL, MobileImage VarChar(200) NULL, SampleImage VarBinary(max) NULL, CONSTRAINT PK_UsrPref PRIMARY KEY CLUSTERED (UsrPrefId))') EXEC (' ALTER TABLE dbo.UsrPref ADD CONSTRAINT DF_UsrPref_PrjListVisible DEFAULT (''N'') FOR PrjListVisible SET IDENTITY_INSERT dbo.UsrPref ON INSERT INTO dbo.UsrPref (UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, UsrStyleSheet, MasterPgFile, SampleImage) SELECT UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, UsrStyleSheet, MasterPgFile, SampleImage FROM dbo.Tmp_UsrPref SET IDENTITY_INSERT dbo.UsrPref OFF IF (SELECT COUNT(1) FROM dbo.UsrPref) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UsrPref) = 0 DROP TABLE dbo.Tmp_UsrPref')
   8.  55.40810~@~20~@~M~@~Change table CtSection~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_CtSection (SectionName nvarchar(200) NULL, SectionCd char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_CtSection (SectionName, SectionCd) SELECT SectionName, SectionCd FROM dbo.CtSection IF (SELECT COUNT(1) FROM dbo.Tmp_CtSection) > 0 OR (SELECT COUNT(1) FROM dbo.CtSection) = 0 DROP TABLE dbo.CtSection') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtSection'')) CREATE TABLE dbo.CtSection (SectionCd Char(1) NOT NULL, SectionName NVarChar(200) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_CtSection PRIMARY KEY CLUSTERED (SectionCd))') EXEC (' ALTER TABLE dbo.CtSection ADD CONSTRAINT DF_CtSection_NeedRegen DEFAULT (''N'') FOR NeedRegen INSERT INTO dbo.CtSection (SectionCd, SectionName, NeedRegen) SELECT SectionCd, SectionName, ''N'' FROM dbo.Tmp_CtSection IF (SELECT COUNT(1) FROM dbo.CtSection) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtSection) = 0 DROP TABLE dbo.Tmp_CtSection')
   8.  58.40910~@~10~@~M~@~Modify content of PageObj, etc.~@~N~@~EXEC ('DELETE FROM dbo.PageObj WHERE SectionCd = ''M''')
EXEC ('UPDATE dbo.PageObj SET SectionCd = ''D'' WHERE SectionCd = ''P''')
EXEC ('UPDATE dbo.SctGrpRow SET SectionCd = ''D'' WHERE SectionCd = ''P''')
EXEC ('UPDATE dbo.SctGrpCol SET SectionCd = ''D'' WHERE SectionCd = ''P''')
EXEC ('UPDATE dbo.ScreenObj SET DefaultValue = SUBSTRING(DefaultValue,2,len(DefaultValue) - 2) WHERE LEFT(DefaultValue,1) = '''''''' and RIGHT(DefaultValue,1) = ''''''''')
EXEC ('UPDATE dbo.ScreenObj SET DefaultValue = SUBSTRING(DefaultValue,2,len(DefaultValue) - 2) WHERE LEFT(DefaultValue,1) = ''"'' and RIGHT(DefaultValue,1) = ''"''')
EXEC ('DECLARE @PageObjId int DECLARE cur CURSOR FAST_FORWARD FOR SELECT PageObjId FROM dbo.PageObj FOR READ ONLY OPEN cur FETCH NEXT FROM cur INTO @PageObjId WHILE @@FETCH_STATUS = 0 BEGIN EXEC Ir_UpdPageObj @PageObjId FETCH NEXT FROM cur INTO @PageObjId END CLOSE cur DEALLOCATE cur')

   8.  67.41204~@~10~@~M~@~Adjust WebRule for new ListView grid~@~Y~@~EXEC ('UPDATE dbo.WebRule SET WebRuleProg = REPLACE(WebRuleProg,''.EditItemIndex'',''.EditIndex'')')
EXEC ('UPDATE dbo.WebRule SET WebRuleProg = CASE WHEN CHARINDEX(''Grid.EditIndex > -1 && c'',WebRuleProg) > 0 AND CHARINDEX(''Grid.EditIndex == e.Item.ItemIndex'',WebRuleProg) > 0 THEN REPLACE(REPLACE(WebRuleProg,''Grid.EditIndex > -1 && c'',''Grid.EditIndex > -1 && GetDataItemIndex(c''),''Grid.EditIndex == e.Item.ItemIndex'',''Grid.EditIndex) == e.Item.DataItemIndex'') ELSE WebRuleProg END')
EXEC ('UPDATE dbo.WebRule SET WebRuleProg = REPLACE(WebRuleProg,''e.Item.DataSetIndex'',''.GetDataItemIndex(e.ItemIndex)'')')
EXEC ('UPDATE dbo.WebRule SET WebRuleProg = REPLACE(WebRuleProg,''DataGridCommandEventArgs'',''ListViewCommandEventArgs'')')
EXEC ('UPDATE dbo.WebRule SET WebRuleProg = REPLACE(WebRuleProg,''DataGridSortCommandEventArgs'',''ListViewSortEventArgs'')')
EXEC ('UPDATE dbo.WebRule SET WebRuleProg = REPLACE(WebRuleProg,''DataGridPageChangedEventArgs'',''PagePropertiesChangingEventArgs'')')
EXEC ('UPDATE dbo.WebRule SET WebRuleProg = REPLACE(WebRuleProg,''Grid.PageSize'',''GridDataPager.PageSize'')')

   8.  68.41210~@~10~@~M~@~Change table ScreenObj~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObj (DisplayModeId tinyint NULL, GroupRowId smallint NULL, GroupColId smallint NULL, ColumnSize smallint NULL, ColumnHeight smallint NULL, TabIndex smallint NULL, SortOrder smallint NULL, ScreenObjId int NULL, ScreenId int NULL, ColumnId int NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, TabFolderId int NULL, DefaultValue nvarchar(200) NULL, HyperLinkUrl nvarchar(200) NULL, SystemValue nvarchar(200) NULL, MasterTable char(1) NULL, LabelVertical char(1) NULL, DefAfter char(1) NULL, DefAlways char(1) NULL, ColumnWrap char(1) NULL, GridGrpCd char(1) NULL, ColumnJustify char(1) NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, RequiredValid char(1) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL, IgnoreConfirm char(1) NULL, LabelCss varchar(1000) NULL, ContentCss varchar(1000) NULL, ColumnName varchar(20) NULL, ColumnDesc varchar(200) NULL, MaskValid varchar(100) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (DisplayModeId, GroupRowId, GroupColId, ColumnSize, ColumnHeight, TabIndex, SortOrder, ScreenObjId, ScreenId, ColumnId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, TabFolderId, DefaultValue, HyperLinkUrl, SystemValue, MasterTable, LabelVertical, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink) SELECT convert(tinyint,DisplayModeId), convert(smallint,GroupRowId), convert(smallint,GroupColId), convert(smallint,ColumnSize), convert(smallint,ColumnHeight), convert(smallint,TabIndex), convert(smallint,SortOrder), convert(int,ScreenObjId), convert(int,ScreenId), convert(int,ColumnId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), convert(int,TabFolderId), DefaultValue, HyperLinkUrl, SystemValue, MasterTable, LabelVertical, DefAfter, DefAlways, ColumnWrap, GridGrpCd, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObj'')) CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, GroupRowId SmallInt NOT NULL, GroupColId SmallInt NOT NULL, LabelVertical Char(1) NOT NULL, LabelCss VarChar(1000) NULL, ContentCss VarChar(1000) NULL, ColumnId Int NULL, ColumnName VarChar(20) NOT NULL, ColumnDesc VarChar(200) NULL, DefaultValue NVarChar(200) NULL, HyperLinkUrl NVarChar(200) NULL, DefAfter Char(1) NOT NULL, SystemValue NVarChar(200) NULL, DefAlways Char(1) NOT NULL, ColumnWrap Char(1) NOT NULL, GridGrpCd Char(1) NOT NULL, HideOnTablet Char(1) NOT NULL, HideOnMobile Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ColumnHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(100) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GroupRowId DEFAULT (78) FOR GroupRowId ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_LabelVertical DEFAULT (''N'') FOR LabelVertical ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAfter DEFAULT (''N'') FOR DefAfter ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAlways DEFAULT (''N'') FOR DefAlways ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GridGrpCd DEFAULT (''N'') FOR GridGrpCd ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_HideOnTablet DEFAULT (''N'') FOR HideOnTablet ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_HideOnMobile DEFAULT (''N'') FOR HideOnMobile ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, GroupRowId, GroupColId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, HideOnTablet, HideOnMobile, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, GroupRowId, GroupColId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, ''N'', ''N'', ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj')
   9.   1.50105~@~10~@~M~@~Adjust WebRule for InsertRow~@~Y~@~EXEC ('UPDATE dbo.WebRule SET WebRuleProg = REPLACE(WebRuleProg,''Grid.EditIndex < 0'',''GridNotInEdit()'')')

   9.   2.50109~@~10~@~M~@~Change table PageLnk~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_PageLnk (PageObjId smallint NULL, PageLnkOrd smallint NULL, PageLnkId int NULL, PageLnkTxt nvarchar(4000) NULL, Popup char(1) NULL, PageLnkCss varchar(1000) NULL, PageLnkRef varchar(200) NULL, PageLnkImg varchar(200) NULL, PageLnkAlt varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_PageLnk (PageObjId, PageLnkOrd, PageLnkId, PageLnkTxt, Popup, PageLnkCss, PageLnkRef, PageLnkImg, PageLnkAlt) SELECT convert(smallint,PageObjId), convert(smallint,PageLnkOrd), convert(int,PageLnkId), PageLnkTxt, Popup, PageLnkCss, PageLnkRef, PageLnkImg, PageLnkAlt FROM dbo.PageLnk IF (SELECT COUNT(1) FROM dbo.Tmp_PageLnk) > 0 OR (SELECT COUNT(1) FROM dbo.PageLnk) = 0 DROP TABLE dbo.PageLnk') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.PageLnk'')) CREATE TABLE dbo.PageLnk (PageLnkId Int IDENTITY NOT NULL, PageObjId SmallInt NOT NULL, PageLnkCss VarChar(1000) NULL, Popup Char(1) NULL, PageLnkRef VarChar(1000) NULL, PageLnkTxt NVarChar(4000) NULL, PageLnkImg VarChar(1000) NULL, PageLnkAlt VarChar(1000) NULL, PageLnkOrd SmallInt NOT NULL, CONSTRAINT PK_PageLnk PRIMARY KEY CLUSTERED (PageLnkId))') EXEC (' SET IDENTITY_INSERT dbo.PageLnk ON INSERT INTO dbo.PageLnk (PageLnkId, PageObjId, PageLnkCss, Popup, PageLnkRef, PageLnkTxt, PageLnkImg, PageLnkAlt, PageLnkOrd) SELECT PageLnkId, PageObjId, PageLnkCss, Popup, PageLnkRef, PageLnkTxt, PageLnkImg, PageLnkAlt, PageLnkOrd FROM dbo.Tmp_PageLnk SET IDENTITY_INSERT dbo.PageLnk OFF IF (SELECT COUNT(1) FROM dbo.PageLnk) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_PageLnk) = 0 DROP TABLE dbo.Tmp_PageLnk')

IF (SELECT COUNT(1) FROM dbo.PageObj) <= 0
EXEC ('
SET IDENTITY_INSERT [dbo].[PageLnk] ON 
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (3, 20, N''color:#3d72c1; font-family:sans-serif; font-size:2em; line-height:1;'', N''N'', NULL, N''Screen: Create a simple Screen'', NULL, NULL, 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (4, 16, N''display:block; font-size: 16px; color: #333; font-family: century gothic;'', N''Y'', N''AdmScreen.aspx?id=25&typ=N'', N''Define the Screen'', NULL, NULL, 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (5, 16, N''display:block; font-size: 16px; color: #333; font-family: century gothic;'', N''Y'', N''AdmScreenObj.aspx?id=26&typ=N'', N''Specify the Screen Objects'', NULL, NULL, 20)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (6, 16, N''display:block; font-size: 16px; color: #333; font-family: century gothic;'', N''Y'', N''AdmAuthCol.aspx?id=20&typ=N'', N''Assign Object Authority'', NULL, NULL, 30)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (7, 21, N''color:#3d72c1; font-family:sans-serif; font-size:2em; line-height:1;'', N''N'', NULL, N''Advanced Screen: Enhance Current Screen'', NULL, NULL, 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (8, 17, N''display:block; font-size: 16px; color: #333; font-family: century gothic;'', N''Y'', N''AdmScreenCri.aspx?id=196&typ=N'', N''Add Screen Criteria'', NULL, NULL, 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (9, 17, N''display:block; font-size: 16px; color: #333; font-family: century gothic;'', N''Y'', N''AdmScreenCriMap.aspx?id=197&typ=N'', N''Map Screen Criteria to Columns'', NULL, NULL, 20)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (10, 17, N''display:block; font-size: 16px; color: #333; font-family: century gothic;'', N''Y'', N''AdmServerRule.aspx?id=22&typ=N'', N''Add Server Rules'', NULL, NULL, 30)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (11, 22, N''color:#3d72c1; font-family:sans-serif; font-size:2em; line-height:1;'', N''N'', NULL, N''Reporting: Create tabular report, chart & guage'', NULL, NULL, 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (12, 18, N''display:block; font-size: 16px; color: #333; font-family: century gothic;'', N''Y'', N''AdmReport.aspx?id=186&typ=N'', N''Refine the Report Definition'', NULL, NULL, 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (13, 18, N''display:block; font-size: 16px; color: #333; font-family: century gothic;'', N''Y'', N''AdmReportCri.aspx?id=188&typ=N'', N''Refine the Report Criteria'', NULL, NULL, 20)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (19, 3, N''vertical-align:middle; padding: 0px 6px 0px 0px; max-height: 30px;'', N''Y'', N''javascript:ShowEmbedScript(); return false;'', NULL, N''images/shortcut/embed.gif'', N''images/shortcut/embedr.gif'', 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (23, 11, N''color:#152a57; padding: 0px 5px;'', N''Y'', N''http://www.rintagi.com/home/terms_of_service.pdf'', N''Terms of Service'', NULL, NULL, 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (24, 11, N''color:#152a57; padding: 0px 5px;'', N''Y'', N''http://www.rintagi.com/home/privacy_policy.pdf'', N''Privacy Policy'', NULL, NULL, 20)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (25, 13, N''background:url(../images/question.png) no-repeat; display:inline-block; height:16px; padding: 0px 5px 0 20px; color:#152a57; text-decoration:underline; cursor:pointer;'', N''N'', N''javascript:email(''''cs'''',''''robocoder.com''''); return false;'', N''Need help? Get technical support.'', NULL, NULL, 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (28, 3, N''vertical-align:middle; padding: 0px 6px 0px 0px; max-height: 30px;'', N''Y'', N''http://www.google.com'', N''Google'', NULL, NULL, 20)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (29, 3, N''vertical-align:middle; padding: 0px 6px 0px 0px; max-height: 30px;'', N''N'', N''ComInstall.aspx?id=265'', N''Installer'', NULL, NULL, 30)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (35, 1, N''width:100%;'', N''N'', N''Default.aspx'', NULL, N''images/special/YourLogo.gif'', N''images/special/Robocoder.png'', 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (36, 18, N''display:block; font-size: 16px; color: #333; font-family: century gothic;'', N''Y'', N''AdmRptWiz.aspx?id=229&typ=N'', N''Use the Report Generator'', NULL, NULL, 5)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (38, 28, N''font-size:14px; color:#555;'', N''Y'', NULL, N''The end product as we see it today, and in fact, as we have seen it for a number of years now, is, to the best of my knowledge, the best in the business.'', NULL, NULL, 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (39, 28, N''font-size:14px; color:#555;'', N''N'', NULL, N''I have found Robocoder''''s development team to be very knowledgeable, dependable and an absolute pleasure to work with.'', NULL, NULL, 20)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (40, 28, N''font-size:14px; color:#555;'', N''N'', NULL, N''They were able to quickly understand our market requirements and come up with great solutions to our customers'''' challenges.'', NULL, NULL, 30)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (41, 28, N''font-size:14px; color:#555;'', N''N'', NULL, N''We were constantly amazed at the flexibility of the software and how changes that traditionally would take weeks of programming time could be done almost on-the-fly, real time. All in all, the experience has exceeded our expectations.'', NULL, NULL, 40)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (42, 28, N''font-size:14px; color:#555;'', N''N'', NULL, N''The developing and implementing of the new system was seamless.'', NULL, NULL, 50)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (43, 28, N''font-size:14px; color:#555;'', N''N'', NULL, N''With the end user in mind, they have transformed often obscure mental concepts into flexible and easy-to-use solutions.'', NULL, NULL, 60)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (44, 28, N''font-size:14px; color:#555;'', N''N'', NULL, N''Their Late change no penalty approach allowed us to tailor to specific customer needs and requirements.'', NULL, NULL, 70)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (45, 28, N''font-size:14px; color:#555;'', N''N'', NULL, N''Not only have your team made every effort to understand our unique needs, you have suggested innovative concepts that have automated our processes without much effort.'', NULL, NULL, 80)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (46, 28, N''font-size:14px; color:#555;'', N''N'', NULL, N''Working with Robocoder Corporation has been a pleasant experience. Many modifications and improvements were made as we requested them late in the customization process.'', NULL, NULL, 90)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (47, 28, N''font-size:14px; color:#555;'', N''N'', NULL, N''Your attention to detail has been paramount and that every number can be explained. You have delivered a robust system. Thank you for the wonderful job you have done for us and the securitization industry.'', NULL, NULL, 100)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (48, 29, N''max-width:400px; max-height:100px;'', N''N'', NULL, NULL, N''images/testimonial/roynat.png'', NULL, 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (49, 29, N''max-width:400px; max-height:100px;'', N''N'', NULL, NULL, N''images/testimonial/pwBank.png'', NULL, 20)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (50, 29, N''max-width:400px; max-height:100px;'', N''N'', NULL, NULL, N''images/testimonial/sunLife.png'', NULL, 30)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (51, 29, N''max-width:400px; max-height:100px;'', N''N'', NULL, NULL, N''images/testimonial/pcw.png'', NULL, 40)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (52, 29, N''max-width:400px; max-height:100px;'', N''N'', NULL, NULL, N''images/testimonial/spartan.png'', NULL, 50)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (53, 29, N''max-width:400px; max-height:100px;'', N''N'', NULL, NULL, N''images/testimonial/beacon.png'', NULL, 60)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (54, 29, N''max-width:400px; max-height:100px;'', N''N'', NULL, NULL, N''images/testimonial/securcor.png'', NULL, 70)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (55, 29, N''max-width:400px; max-height:100px;'', N''N'', NULL, NULL, N''images/testimonial/aileron.png'', NULL, 80)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (58, 30, NULL, N''N'', NULL, N''Prototype to Production in Seconds'', NULL, NULL, 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (59, 31, NULL, N''N'', NULL, N''DIY Platform That Last ...'', NULL, NULL, 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (60, 35, N''padding: 0px 0px 0px 4px; max-height: 30px;'', N''Y'', NULL, NULL, N''images/special/Facebook.png'', NULL, 10)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (61, 35, N''padding: 0px 0px 0px 4px; max-height: 30px;'', N''Y'', NULL, NULL, N''images/special/Twitter.png'', NULL, 20)
INSERT [dbo].[PageLnk] ([PageLnkId], [PageObjId], [PageLnkCss], [Popup], [PageLnkRef], [PageLnkTxt], [PageLnkImg], [PageLnkAlt], [PageLnkOrd]) VALUES (62, 35, N''padding: 0px 0px 0px 4px; max-height: 30px;'', N''Y'', NULL, NULL, N''images/special/Linkedin.png'', NULL, 30)
SET IDENTITY_INSERT [dbo].[PageLnk] OFF
SET IDENTITY_INSERT [dbo].[PageObj] ON 
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (1, N''HEADER 010: Logo Home'', N''H'', 34, 834, NULL, NULL, 10, N''LGO'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=7'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=19'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (2, N''HEADER 030: User Profile'', N''H'', 68, 812, N''float:right;'', NULL, 30, N''PRF'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=5'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=12'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (3, N''HEADER 020: Link Header'', N''H'', 68, 876, N''text-align:right;'', N''    function openLinkSec() { var linkContainer = $(''''#<%=cLinkHolder.ClientID%>''''); if (linkContainer.hasClass(''''hideMoreButtonSec'''')) { linkContainer.removeClass(''''hideMoreButtonSec''''); } else { linkContainer.addClass(''''hideMoreButtonSec''''); }; }
    $(document).mouseup(function (e) { var linkContainer = $(''''#<%=cLinkHolder.ClientID%>''''); if ($(window).width() <= 1024) { if (!linkContainer.is(e.target) && linkContainer.has(e.target).length === 0 && !linkContainer.hasClass(''''hideMoreButtonSec'''')) { openLinkSec(); } } });'', 20, N''HDR'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=5'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=20'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (5, N''HEADER 050: Menu Horizontal Top'', N''H'', 78, 878, NULL, NULL, 50, N''MNT'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=6'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=15'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (6, N''HEADER 060: Breadcrumb'', N''H'', 78, 813, NULL, NULL, 60, N''BRC'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=6'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=16'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (7, N''HEADER 070: Current Long Date'', N''H'', 78, 853, NULL, NULL, 70, N''CDD'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=6'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=17'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (8, N''HEADER 080: Culture Choice'', N''H'', 78, 842, NULL, NULL, 80, N''CUL'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=6'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=18'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (11, N''FOOTER 010: Link General [Terms of Service]'', N''F'', 78, 801, N''white-space:nowrap; vertical-align:top;'', NULL, 10, N''LNK'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=2'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=7'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (12, N''FOOTER 020: Version Text'', N''F'', 78, 874, N''text-align:center;'', NULL, 20, N''VER'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=2'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=8'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (13, N''FOOTER 030: Link General [Need help? Get technical support.]'', N''F'', 78, 812, N''white-space:nowrap; vertical-align:top;'', NULL, 30, N''LNK'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=2'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=9'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (16, N''DEFAULT 050: Link General [Define the Screen]'', N''D'', 78, 834, N''padding:20px; '', NULL, 50, N''LNK'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=1'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=1'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (17, N''DEFAULT 070: Link General [Add Screen Criteria]'', N''D'', 78, 838, N''padding:20px; '', NULL, 70, N''LNK'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=1'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=2'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (18, N''DEFAULT 090: Link General [Refine the Report Definition]'', N''D'', 78, 842, N''padding:20px; '', NULL, 90, N''LNK'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=1'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=3'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (20, N''DEFAULT 040: Label Only [Screen: Create a simple Screen]'', N''D'', 78, 834, N''padding:30px 20px 0 20px; '', NULL, 40, N''LAB'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=1'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=1'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (21, N''DEFAULT 060: Label Only [Advanced Screen: Enhance Current Screen]'', N''D'', 78, 838, N''padding:30px 20px 0 20px; '', NULL, 60, N''LAB'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=1'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=2'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (22, N''DEFAULT 080: Label Only [Reporting: Create tabular report, chart & guage]'', N''D'', 78, 842, N''padding:30px 20px 0 20px; '', NULL, 80, N''LAB'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=1'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=3'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (28, N''DEFAULT 030: Carousel [The end product as we see it today, and in fact, a]'', N''D'', 78, 863, N''vertical-align:middle; text-align:center;'', N''    $(window).load(function () { $(''''.flexslider'''').flexslider({ animation:''''fade'''', pauseOnHover:true, slideshowSpeed:7000 }); });'', 30, N''CRS'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=1'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=4'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (29, N''DEFAULT 020: Carousel'', N''D'', 78, 843, N''vertical-align:middle; text-align:center;'', N''    $(window).load(function () { $(''''.flexslider'''').flexslider({ animation:''''fade'''', pauseOnHover:true, slideshowSpeed:7000 }); });'', 20, N''CRS'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=1'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=5'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (30, N''DEFAULT 015: Label Only [Prototype to Production in Seconds]'', N''D'', 78, 878, N''color:#d88623; font-family:sans-serif; text-align:center; font-size:3em; line-height:1; margin-bottom:0.5em; text-shadow: 1px 1px 1px #5d5d5d;'', NULL, 15, N''LAB'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=1'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=6'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (31, N''DEFAULT 016: Label Only [DIY Platform That Last ...]'', N''D'', 78, 878, N''color:#222222; font-family:sans-serif; text-align:center; font-size:1.5em; line-height:1; margin-bottom:1em;'', NULL, 16, N''LAB'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=1'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=6'')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (32, N''FOOTER 005: Background Image/Color'', N''F'', NULL, NULL, N''border-top:10px solid #5083D0; background-color:#cdcdcd; color:#282b32; font-family:Tahoma, Verdana; font-size:10px; min-height:44px; padding:4px 0px; margin-top:10px;'', NULL, 5, N''BKI'', N'''', N'''')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (33, N''DEFAULT 010: Background Image/Color'', N''D'', NULL, NULL, N''background-image:url(../images/special/RCLogo_Large.png); background-position: center center; background-repeat: no-repeat; margin-top: 10px; min-height:500px;'', NULL, 10, N''BKI'', N'''', N'''')
INSERT [dbo].[PageObj] ([PageObjId], [PageObjDesc], [SectionCd], [GroupRowId], [GroupColId], [PageObjCss], [PageObjSrp], [PageObjOrd], [LinkTypeCd], [SctGrpRow], [SctGrpCol]) VALUES (35, N''HEADER 040: Link Social'', N''H'', 68, 878, N''text-align:right;'', N''    function openSociSec() { var socialContainer = $(''''#<%=cSociHolder.ClientID%>''''); if (socialContainer.hasClass(''''hideMoreButtonSec'''')) { socialContainer.removeClass(''''hideMoreButtonSec''''); } else { socialContainer.addClass(''''hideMoreButtonSec''''); }; }
    $(document).mouseup(function (e) { var socialContainer = $(''''#<%=cSociHolder.ClientID%>''''); if ($(window).width() <= 1024) { if (!socialContainer.is(e.target) && socialContainer.has(e.target).length === 0 && !socialContainer.hasClass(''''hideMoreButtonSec'''')) { openSociSec(); } } });'', 40, N''SSO'', N''AdmSctGrpRow.aspx?typ=N&col=SctGrpRowId&key=5'', N''AdmSctGrpCol.aspx?typ=N&col=SctGrpColId&key=15'')
SET IDENTITY_INSERT [dbo].[PageObj] OFF
SET IDENTITY_INSERT [dbo].[SctGrpCol] ON 
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (1, N''Default: Column  1 to  4 of 12'', N''D'', 834, N''padding-right:5px; background-color:#ededed; border-radius:4px; opacity:0.8; vertical-align: top;'', NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (2, N''Default: Column  5 to  8 of 12'', N''D'', 838, N''padding-right:5px; background-color:#ededed; border-radius:4px; opacity:0.8; vertical-align: top;'', NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (3, N''Default: Column  9 to 12 of 12'', N''D'', 842, N''background-color:#ededed; border-radius:4px; opacity:0.8; vertical-align: top;'', NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (4, N''Default: Column  6 to 12 of 12'', N''D'', 863, NULL, N''width:100%; height:120px; background-color:#efefef; padding:5px 30px; border-radius:4px; opacity:0.8;'')
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (5, N''Default: Column  1 to  5 of 12'', N''D'', 843, N''padding-right:5px;'', N''width:100%; height:120px; background-color:#efefef; padding:5px 30px; border-radius:4px; opacity:0.8;'')
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (6, N''Default: Column  1 to 12 of 12'', N''D'', 878, NULL, NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (7, N''Footer: Column  1 to  1 of 12'', N''F'', 801, NULL, NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (8, N''Footer: Column  2 to 11 of 12'', N''F'', 874, NULL, NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (9, N''Footer: Column 12 to 12 of 12'', N''F'', 812, NULL, NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (10, N''Header: Column  1 to  3 of 12'', N''H'', 824, NULL, NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (11, N''Header: Column  4 to 11 of 12'', N''H'', 867, NULL, NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (12, N''Header: Column 12 to 12 of 12'', N''H'', 812, N''white-space:nowrap; vertical-align:middle; text-align:right; font-size:14px; font-weight:bold;'', NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (13, N''Header: Column  5 to 11 of 12'', N''H'', 862, N''vertical-align:middle; text-align:right; font-size:14px;'', NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (14, N''Header: Column  5 to 12 of 12'', N''H'', 868, N''white-space:nowrap; vertical-align:middle; text-align:right;'', NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (15, N''Header: Column  1 to 12 of 12'', N''H'', 878, NULL, NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (16, N''Header: Column  1 to  2 of 12'', N''H'', 813, N''white-space:nowrap; vertical-align:middle; padding: 5px 10px;'', N''color:#333;'')
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (17, N''Header: Column  3 to  8 of 12'', N''H'', 853, N''vertical-align:middle; text-align:center; color:#151515; font-size:11px; font-family: Verdana, Tahoma;'', NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (18, N''Header: Column  9 to 12 of 12'', N''H'', 842, NULL, NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (19, N''Header: Column  1 to  4 of 12'', N''H'', 834, NULL, NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (20, N''Header: Column  1 to 11 of 12'', N''H'', 876, NULL, NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (21, N''Header: Column  1 to  6 of 12'', N''H'', 851, NULL, NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (22, N''Header: Column  7 to 12 of 12'', N''H'', 857, NULL, NULL)
INSERT [dbo].[SctGrpCol] ([SctGrpColId], [SctGrpColDesc], [SectionCd], [GroupColId], [SctGrpColCss], [SctGrpColDiv]) VALUES (23, N''Footer: Column  1 to 12 of 12'', N''F'', 878, NULL, NULL)
SET IDENTITY_INSERT [dbo].[SctGrpCol] OFF
SET IDENTITY_INSERT [dbo].[SctGrpRow] ON 
INSERT [dbo].[SctGrpRow] ([SctGrpRowId], [SctGrpRowDesc], [SectionCd], [GroupRowId], [SctGrpRowCss]) VALUES (1, N''Default: Column  1 to 12 of 12'', N''D'', 78, N''margin-top:30px; border-spacing: 3px 0;'')
INSERT [dbo].[SctGrpRow] ([SctGrpRowId], [SctGrpRowDesc], [SectionCd], [GroupRowId], [SctGrpRowCss]) VALUES (2, N''Footer: Column  1 to 12 of 12'', N''F'', 78, NULL)
INSERT [dbo].[SctGrpRow] ([SctGrpRowId], [SctGrpRowDesc], [SectionCd], [GroupRowId], [SctGrpRowCss]) VALUES (3, N''Header: Column  1 to  3 of 12'', N''H'', 24, NULL)
INSERT [dbo].[SctGrpRow] ([SctGrpRowId], [SctGrpRowDesc], [SectionCd], [GroupRowId], [SctGrpRowCss]) VALUES (4, N''Header: Column  4 to 12 of 12'', N''H'', 72, NULL)
INSERT [dbo].[SctGrpRow] ([SctGrpRowId], [SctGrpRowDesc], [SectionCd], [GroupRowId], [SctGrpRowCss]) VALUES (5, N''Header: Column  5 to 12 of 12'', N''H'', 68, NULL)
INSERT [dbo].[SctGrpRow] ([SctGrpRowId], [SctGrpRowDesc], [SectionCd], [GroupRowId], [SctGrpRowCss]) VALUES (6, N''Header: Column  1 to 12 of 12'', N''H'', 78, NULL)
INSERT [dbo].[SctGrpRow] ([SctGrpRowId], [SctGrpRowDesc], [SectionCd], [GroupRowId], [SctGrpRowCss]) VALUES (7, N''Header: Column  1 to  4 of 12'', N''H'', 34, NULL)
INSERT [dbo].[SctGrpRow] ([SctGrpRowId], [SctGrpRowDesc], [SectionCd], [GroupRowId], [SctGrpRowCss]) VALUES (9, N''Header: Column  9 to 12 of 12'', N''H'', 42, NULL)
INSERT [dbo].[SctGrpRow] ([SctGrpRowId], [SctGrpRowDesc], [SectionCd], [GroupRowId], [SctGrpRowCss]) VALUES (10, N''Header: Column 11 to 12 of 12'', N''H'', 23, NULL)
INSERT [dbo].[SctGrpRow] ([SctGrpRowId], [SctGrpRowDesc], [SectionCd], [GroupRowId], [SctGrpRowCss]) VALUES (11, N''Footer: Column  5 to 12 of 12'', N''F'', 68, NULL)
SET IDENTITY_INSERT [dbo].[SctGrpRow] OFF
')
   9.   3.50114~@~10~@~M~@~Change table Screen~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenTypeId tinyint NULL, NumCols tinyint NULL, GridRows tinyint NULL, SearchWidth smallint NULL, ScreenId int NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId int NULL, ScreenDesc nvarchar(50) NULL, GridTitle nvarchar(50) NULL, SearchAscending char(1) NULL, SearchMode char(1) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ShowGridHead char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, NeedRegen char(1) NULL, AuthRequired char(1) NULL, ViewOnly char(1) NULL, ProgramName varchar(20) NULL, GridClass varchar(30) NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenTypeId, NumCols, GridRows, SearchWidth, ScreenId, MasterTableId, DetailTableId, SearchId, ScreenDesc, GridTitle, SearchAscending, SearchMode, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, NeedRegen, AuthRequired, ViewOnly, ProgramName, GridClass, ScreenObj, ScreenFilter) SELECT convert(tinyint,ScreenTypeId), convert(tinyint,NumCols), convert(tinyint,GridRows), convert(smallint,SearchWidth), convert(int,ScreenId), convert(int,MasterTableId), convert(int,DetailTableId), convert(int,SearchId), ScreenDesc, GridTitle, SearchAscending, SearchMode, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, NeedRegen, AuthRequired, ViewOnly, ProgramName, GridClass, ScreenObj, ScreenFilter FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId Int NULL, SearchWidth SmallInt NULL, SearchAscending Char(1) NOT NULL, SearchMode Char(1) NULL, NumCols TinyInt NOT NULL, GridRows TinyInt NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ShowGridHead Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, ViewOnly Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NumCols DEFAULT (1) FOR NumCols ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ShowGridHead DEFAULT (''Y'') FOR ShowGridHead ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ViewOnly DEFAULT (''N'') FOR ViewOnly SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, NeedRegen, AuthRequired, ViewOnly) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchWidth, SearchAscending, SearchMode, NumCols, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, NeedRegen, AuthRequired, ViewOnly FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen')
   9.   3.50114~@~20~@~M~@~Reverse WebRule for InsertRow~@~Y~@~EXEC ('UPDATE dbo.WebRule SET WebRuleProg = REPLACE(WebRuleProg,''GridNotInEdit()'',''Grid.EditIndex < 0'')')

   9.   4.50116~@~10~@~M~@~Default grid to full width~@~Y~@~EXEC ('UPDATE ScreenObj SET GroupRowId = 78, GroupColId = 878 FROM ScreenObj a INNER JOIN Screen b ON a.ScreenId = b.ScreenId WHERE b.ScreenTypeId = 6 AND MasterTable = ''N''')
EXEC ('UPDATE ScreenObj SET GroupRowId = 78, GroupColId = 878 FROM ScreenObj a INNER JOIN Screen b ON a.ScreenId = b.ScreenId WHERE b.ScreenTypeId = 7')

   9.  10.50204~@~10~@~M~@~Change table Screen~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenTypeId tinyint NULL, NumCols tinyint NULL, GridRows tinyint NULL, SearchWidth smallint NULL, ScreenId int NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId int NULL, ScreenDesc nvarchar(50) NULL, SearchAscending char(1) NULL, SearchMode char(1) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ShowGridHead char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, NeedRegen char(1) NULL, AuthRequired char(1) NULL, ViewOnly char(1) NULL, ProgramName varchar(20) NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenTypeId, NumCols, GridRows, SearchWidth, ScreenId, MasterTableId, DetailTableId, SearchId, ScreenDesc, SearchAscending, SearchMode, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, NeedRegen, AuthRequired, ViewOnly, ProgramName, ScreenObj, ScreenFilter) SELECT convert(tinyint,ScreenTypeId), convert(tinyint,NumCols), convert(tinyint,GridRows), convert(smallint,SearchWidth), convert(int,ScreenId), convert(int,MasterTableId), convert(int,DetailTableId), convert(int,SearchId), ScreenDesc, SearchAscending, SearchMode, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, NeedRegen, AuthRequired, ViewOnly, ProgramName, ScreenObj, ScreenFilter FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId Int NULL, SearchAscending Char(1) NOT NULL, SearchSql NVarChar(2000) NULL, GridRows TinyInt NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ShowGridHead Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, ViewOnly Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ShowGridHead DEFAULT (''Y'') FOR ShowGridHead ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ViewOnly DEFAULT (''N'') FOR ViewOnly ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchAscending, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, NeedRegen) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchAscending, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, NeedRegen FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen')
   9.  11.50206~@~10~@~M~@~Change table ScreenObjHlp~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObjHlp (CultureId smallint NULL, ScreenObjHlpId int NULL, ScreenObjId int NULL, ColumnHeader nvarchar(max) NULL, ToolTip nvarchar(200) NULL, ErrMessage nvarchar(300) NULL, TbHint nvarchar(200) NULL, ScreenObjHlpDesc varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObjHlp (CultureId, ScreenObjHlpId, ScreenObjId, ColumnHeader, ToolTip, ErrMessage, TbHint, ScreenObjHlpDesc) SELECT convert(smallint,CultureId), convert(int,ScreenObjHlpId), convert(int,ScreenObjId), ColumnHeader, ToolTip, ErrMessage, TbHint, ScreenObjHlpDesc FROM dbo.ScreenObjHlp IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObjHlp) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObjHlp) = 0 DROP TABLE dbo.ScreenObjHlp') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObjHlp'')) CREATE TABLE dbo.ScreenObjHlp (ScreenObjHlpId Int IDENTITY NOT NULL, ScreenObjHlpDesc VarChar(200) NULL, ScreenObjId Int NOT NULL, CultureId SmallInt NOT NULL, ColumnHeader NVarChar(max) NULL, ToolTip NVarChar(1000) NULL, ErrMessage NVarChar(1000) NULL, TbHint NVarChar(1000) NULL, CONSTRAINT PK_ScreenObjHlp PRIMARY KEY CLUSTERED (ScreenObjHlpId, CultureId))') EXEC (' SET IDENTITY_INSERT dbo.ScreenObjHlp ON INSERT INTO dbo.ScreenObjHlp (ScreenObjHlpId, ScreenObjHlpDesc, ScreenObjId, CultureId, ColumnHeader, ToolTip, ErrMessage, TbHint) SELECT ScreenObjHlpId, ScreenObjHlpDesc, ScreenObjId, CultureId, ColumnHeader, ToolTip, ErrMessage, TbHint FROM dbo.Tmp_ScreenObjHlp SET IDENTITY_INSERT dbo.ScreenObjHlp OFF IF (SELECT COUNT(1) FROM dbo.ScreenObjHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObjHlp) = 0 DROP TABLE dbo.Tmp_ScreenObjHlp')
   9.  14.50214~@~10~@~M~@~Make sure Admin can access~@~Y~@~EXEC ('insert into dbo.MenuPrm (MenuId,GrantDeny,PermKeyId,PermId)
select MenuId,''G'',8,5 from dbo.MenuPrm p
where not exists (select 1 from dbo.MenuPrm p2 
inner join [[?]]Design.dbo.UsrGroup g on p2.PermId = g.UsrGroupId
where p2.MenuId = p.MenuId and p2.PermKeyId = 8 and g.UsrGroupId = 5) 
and GrantDeny = ''G''
group by MenuId,GrantDeny,PermKeyId')
   9.  14.50214~@~10~@~M~@~Adjust when absent~@~N~@~EXEC ('IF NOT EXISTS (SELECT 1 FROM [[?]]CmonD.dbo.DbTable WHERE TableName = ''Usr'')
BEGIN
	DECLARE @id int
	INSERT [[?]]CmonD.dbo.DbTable (SystemId,TableName,TableDesc,MultiDesignDb,VirtualTbl) SELECT 3,''Usr'',''Adm - User Info'',''N'',''N''
	SELECT @id = @@IDENTITY
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,10,''UsrId'',''Usr - UsrId'',3,4,''N'',''Y'',''Y'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,20,''UsrName'',''Usr - UsrName'',11,50,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,30,''Active'',''Usr - Active'',14,1,''N'',''N'',''N'',''N'',''N''
END')
EXEC ('IF NOT EXISTS (SELECT 1 FROM [[?]]CmonD.dbo.DbTable WHERE TableName = ''Project'')
BEGIN
	DECLARE @id int
	INSERT [[?]]CmonD.dbo.DbTable (SystemId,TableName,TableDesc,MultiDesignDb,VirtualTbl) SELECT 5,''Project'',''Cmn - Project Info'',''N'',''N''
	SELECT @id = @@IDENTITY
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,10,''ProjectId'',''Project - ProjectId'',3,4,''N'',''Y'',''Y'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,20,''ProjectDesc'',''Project - ProjectDesc'',11,100,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,30,''CompanyId'',''Project - CompanyId'',3,4,''Y'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,40,''Active'',''Project - Active'',14,1,''N'',''N'',''N'',''N'',''N''
END')
EXEC ('IF NOT EXISTS (SELECT 1 FROM [[?]]CmonD.dbo.DbTable WHERE TableName = ''Company'')
BEGIN
	DECLARE @id int
	INSERT [[?]]CmonD.dbo.DbTable (SystemId,TableName,TableDesc,MultiDesignDb,VirtualTbl) SELECT 5,''Company'',''Cmn - Company Info'',''N'',''N''
	SELECT @id = @@IDENTITY
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,10,''CompanyId'',''Company - CompanyId'',3,4,''N'',''Y'',''Y'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,20,''FirmId'',''Company - FirmId'',3,4,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,30,''CompanyDesc'',''Company - CompanyDesc'',11,100,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,40,''Active'',''Company - Active'',14,1,''N'',''N'',''N'',''N'',''N''
END')
EXEC ('IF NOT EXISTS (SELECT 1 FROM [[?]]CmonD.dbo.DbTable WHERE TableName = ''Country'')
BEGIN
	DECLARE @id int
	INSERT [[?]]CmonD.dbo.DbTable (SystemId,TableName,TableDesc,MultiDesignDb,VirtualTbl) SELECT 5,''Country'',''Cmn - Country Info'',''N'',''N''
	SELECT @id = @@IDENTITY
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,10,''CountryId'',''Country - CountryId'',2,2,''N'',''Y'',''Y'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,20,''CountryName'',''Country - CountryName'',11,50,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,30,''CountryCd'',''Country - CountryCd'',14,3,''N'',''N'',''N'',''N'',''N''
END')
EXEC ('IF NOT EXISTS (SELECT 1 FROM [[?]]CmonD.dbo.DbTable WHERE TableName = ''State'')
BEGIN
	DECLARE @id int
	INSERT [[?]]CmonD.dbo.DbTable (SystemId,TableName,TableDesc,MultiDesignDb,VirtualTbl) SELECT 5,''State'',''Cmn - State Info'',''N'',''N''
	SELECT @id = @@IDENTITY
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,10,''StateId'',''State - StateId'',2,2,''N'',''Y'',''Y'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,20,''StateName'',''State - StateName'',11,50,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,30,''CountryId'',''State - CountryId'',2,2,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,40,''StateCode'',''State - StateCode'',15,3,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,50,''PstTaxable'',''State - PstTaxable'',14,1,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,60,''GstTaxable'',''State - GstTaxable'',14,1,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,70,''GstCascade'',''State - GstCascade'',14,1,''N'',''N'',''N'',''N'',''N''
END')
EXEC ('IF NOT EXISTS (SELECT 1 FROM [[?]]CmonD.dbo.DbTable WHERE TableName = ''City'')
BEGIN
	DECLARE @id int
	INSERT [[?]]CmonD.dbo.DbTable (SystemId,TableName,TableDesc,MultiDesignDb,VirtualTbl) SELECT 5,''City'',''Cmn - City Info'',''N'',''N''
	SELECT @id = @@IDENTITY
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,10,''CityId'',''City - CityId'',3,4,''N'',''Y'',''Y'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,20,''CityName'',''City - CityName'',11,50,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,30,''CountryId'',''City - CountryId'',2,2,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,40,''StateId'',''City - StateId'',2,2,''N'',''N'',''N'',''N'',''N''
END')
EXEC ('IF NOT EXISTS (SELECT 1 FROM [[?]]CmonD.dbo.DbTable WHERE TableName = ''Firm'')
BEGIN
	DECLARE @id int
	INSERT [[?]]CmonD.dbo.DbTable (SystemId,TableName,TableDesc,MultiDesignDb,VirtualTbl) SELECT 5,''Firm'',''Cmn - Firm Info'',''N'',''N''
	SELECT @id = @@IDENTITY
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,10,''FirmId'',''Firm - FirmId'',3,4,''N'',''Y'',''Y'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,20,''TradeName'',''Firm - TradeName'',11,100,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,30,''LegalName'',''Firm - LegalName'',11,100,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,40,''Active'',''Firm - Active'',14,1,''N'',''N'',''N'',''N'',''N''
END')
EXEC ('IF NOT EXISTS (SELECT 1 FROM [[?]]CmonD.dbo.DbTable WHERE TableName = ''Agent'')
BEGIN
	DECLARE @id int
	INSERT [[?]]CmonD.dbo.DbTable (SystemId,TableName,TableDesc,MultiDesignDb,VirtualTbl) SELECT 5,''Agent'',''Cmn - Agent Info'',''N'',''N''
	SELECT @id = @@IDENTITY
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,10,''AgentId'',''Agent - AgentId'',3,4,''N'',''Y'',''Y'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,20,''FirmId'',''Agent - FirmId'',3,4,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,30,''AgentName'',''Agent - AgentName'',11,100,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,40,''Active'',''Agent - Active'',14,1,''N'',''N'',''N'',''N'',''N''
END')
EXEC ('IF NOT EXISTS (SELECT 1 FROM [[?]]CmonD.dbo.DbTable WHERE TableName = ''Broker'')
BEGIN
	DECLARE @id int
	INSERT [[?]]CmonD.dbo.DbTable (SystemId,TableName,TableDesc,MultiDesignDb,VirtualTbl) SELECT 5,''Broker'',''Cmn - Broker Info'',''N'',''N''
	SELECT @id = @@IDENTITY
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,10,''BrokerId'',''Broker - BrokerId'',3,4,''N'',''Y'',''Y'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,20,''FirmId'',''Broker - FirmId'',3,4,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,30,''BrokerName'',''Broker - BrokerName'',11,100,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,40,''Active'',''Broker - Active'',14,1,''N'',''N'',''N'',''N'',''N''
END')
EXEC ('IF NOT EXISTS (SELECT 1 FROM [[?]]CmonD.dbo.DbTable WHERE TableName = ''Customer'')
BEGIN
	DECLARE @id int
	INSERT [[?]]CmonD.dbo.DbTable (SystemId,TableName,TableDesc,MultiDesignDb,VirtualTbl) SELECT 5,''Customer'',''Cmn - Customer Info'',''N'',''N''
	SELECT @id = @@IDENTITY
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,10,''CustomerId'',''Customer - CustomerId'',3,4,''N'',''Y'',''Y'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,20,''FirmId'',''Customer - FirmId'',3,4,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,30,''CustomerName'',''Customer - CustomerName'',11,100,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,40,''Active'',''Customer - Active'',14,1,''N'',''N'',''N'',''N'',''N''
END')
EXEC ('IF NOT EXISTS (SELECT 1 FROM [[?]]CmonD.dbo.DbTable WHERE TableName = ''Investor'')
BEGIN
	DECLARE @id int
	INSERT [[?]]CmonD.dbo.DbTable (SystemId,TableName,TableDesc,MultiDesignDb,VirtualTbl) SELECT 5,''Investor'',''Cmn - Investor Info'',''N'',''N''
	SELECT @id = @@IDENTITY
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,10,''InvestorId'',''Investor - InvestorId'',3,4,''N'',''Y'',''Y'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,20,''FirmId'',''Investor - FirmId'',3,4,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,30,''InvestorName'',''Investor - InvestorName'',11,100,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,40,''Active'',''Investor - Active'',14,1,''N'',''N'',''N'',''N'',''N''
END')
EXEC ('IF NOT EXISTS (SELECT 1 FROM [[?]]CmonD.dbo.DbTable WHERE TableName = ''Vendor'')
BEGIN
	DECLARE @id int
	INSERT [[?]]CmonD.dbo.DbTable (SystemId,TableName,TableDesc,MultiDesignDb,VirtualTbl) SELECT 5,''Vendor'',''Cmn - Vendor Info'',''N'',''N''
	SELECT @id = @@IDENTITY
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,10,''VendorId'',''Vendor - VendorId'',3,4,''N'',''Y'',''Y'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,20,''FirmId'',''Vendor - FirmId'',3,4,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,30,''VendorName'',''Vendor - VendorName'',11,100,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,40,''Active'',''Vendor - Active'',14,1,''N'',''N'',''N'',''N'',''N''
END')
EXEC ('IF NOT EXISTS (SELECT 1 FROM [[?]]CmonD.dbo.DbTable WHERE TableName = ''Member'')
BEGIN
	DECLARE @id int
	INSERT [[?]]CmonD.dbo.DbTable (SystemId,TableName,TableDesc,MultiDesignDb,VirtualTbl) SELECT 5,''Member'',''Cmn - Member Info'',''N'',''N''
	SELECT @id = @@IDENTITY
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,10,''MemberId'',''Member - MemberId'',3,4,''N'',''Y'',''Y'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,20,''MemberName'',''Member - MemberName'',11,100,''N'',''N'',''N'',''N'',''N''
	INSERT [[?]]CmonD.dbo.DbColumn (TableId,ColumnIndex,ColumnName,ColumnDesc,DataType,ColumnLength,AllowNulls,ColumnIdentity,PrimaryKey,IsIndexU,IsIndex)
		SELECT @id,30,''Active'',''Member - Active'',14,1,''N'',''N'',''N'',''N'',''N''
END')
   9.  16.50228~@~10~@~M~@~Special update for older apps~@~Y~@~EXEC ('UPDATE dbo.Screen SET ScreenDesc = b.ScreenTitle FROM dbo.Screen a INNER JOIN dbo.ScreenHlp b ON a.ScreenId = b.ScreenId AND CultureId = 1')

   9.  23.50313~@~10~@~M~@~Increase ColumnName to 50 characters~@~Y~@~EXEC ('alter table dbo.ScreenObj alter column ColumnName varchar(50)')
EXEC ('alter table dbo.UtReportCri alter column ColumnName varchar(50)')
EXEC ('alter table dbo.UtReportObj alter column ColumnName varchar(50)')
EXEC ('alter table dbo.ReportCri alter column ColumnName varchar(50)')

   9.  24.50315~@~10~@~M~@~Change table Usr~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_Usr (DefSystemId tinyint NULL, FailedAttempt tinyint NULL, FailedAttemptFP tinyint NULL, HintQuestionId tinyint NULL, CultureId smallint NULL, DefProjectId smallint NULL, PwdDuration smallint NULL, PwdWarn smallint NULL, UsrId int NULL, InvestorId int NULL, CustomerId int NULL, VendorId int NULL, AgentId int NULL, BrokerId int NULL, MemberId int NULL, DefCompanyId int NULL, UsrPassword varbinary(32) NULL, ConfirmPwd varbinary(32) NULL, ExtPassword varbinary(255) NULL, PicMed varbinary(max) NULL, LoginName nvarchar(32) NULL, UsrEmail nvarchar(50) NULL, UsrName nvarchar(50) NULL, HintAnswer nvarchar(50) NULL, LastFailedDt datetime NULL, LastSuccessDt datetime NULL, LastPwdChgDt datetime NULL, ModifiedOn datetime NULL, InternalUsr char(1) NULL, TechnicalUsr char(1) NULL, Active char(1) NULL, UsrGroupLs varchar(1000) NULL, CompanyLs varchar(1000) NULL, ProjectLs varchar(1000) NULL, UsrImprLink varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_Usr (DefSystemId, FailedAttempt, FailedAttemptFP, HintQuestionId, CultureId, DefProjectId, PwdDuration, PwdWarn, UsrId, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefCompanyId, UsrPassword, ConfirmPwd, ExtPassword, PicMed, LoginName, UsrEmail, UsrName, HintAnswer, LastFailedDt, LastSuccessDt, LastPwdChgDt, ModifiedOn, InternalUsr, TechnicalUsr, Active, UsrGroupLs, CompanyLs, ProjectLs, UsrImprLink) SELECT convert(tinyint,DefSystemId), convert(tinyint,FailedAttempt), convert(tinyint,FailedAttemptFP), convert(tinyint,HintQuestionId), convert(smallint,CultureId), convert(smallint,DefProjectId), convert(smallint,PwdDuration), convert(smallint,PwdWarn), convert(int,UsrId), convert(int,InvestorId), convert(int,CustomerId), convert(int,VendorId), convert(int,AgentId), convert(int,BrokerId), convert(int,MemberId), convert(int,DefCompanyId), UsrPassword, ConfirmPwd, ExtPassword, PicMed, LoginName, UsrEmail, UsrName, HintAnswer, LastFailedDt, LastSuccessDt, LastPwdChgDt, ModifiedOn, InternalUsr, TechnicalUsr, Active, UsrGroupLs, CompanyLs, ProjectLs, UsrImprLink FROM dbo.Usr IF (SELECT COUNT(1) FROM dbo.Tmp_Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Usr) = 0 DROP TABLE dbo.Usr') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Usr'')) CREATE TABLE dbo.Usr (UsrId Int IDENTITY NOT NULL, LoginName NVarChar(32) NOT NULL, UsrEmail NVarChar(50) NULL, UsrName NVarChar(50) NULL, UsrPassword VarBinary(32) NULL, ConfirmPwd VarBinary(32) NULL, ExtPassword VarBinary(255) NULL, CultureId SmallInt NOT NULL, InternalUsr Char(1) NOT NULL, TechnicalUsr Char(1) NOT NULL, UsrGroupLs VarChar(1000) NOT NULL, CompanyLs VarChar(1000) NULL, ProjectLs VarChar(1000) NULL, InvestorId Int NULL, CustomerId Int NULL, VendorId Int NULL, AgentId Int NULL, BrokerId Int NULL, MemberId Int NULL, DefSystemId TinyInt NOT NULL, DefProjectId Int NULL, DefCompanyId Int NULL, FailedAttempt TinyInt NULL, FailedAttemptFP TinyInt NULL, LastFailedDt DateTime NULL, LastSuccessDt DateTime NULL, LastPwdChgDt DateTime NULL, HintQuestionId TinyInt NULL, HintAnswer NVarChar(50) NULL, Active Char(1) NOT NULL, ModifiedOn DateTime NOT NULL, UsrImprLink VarChar(200) NULL, PwdNoRepeat SmallInt NOT NULL, PwdDuration SmallInt NOT NULL, PwdWarn SmallInt NOT NULL, PicMed VarBinary(max) NULL, CONSTRAINT PK_Usr PRIMARY KEY CLUSTERED (UsrId, CultureId))') EXEC (' ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_CultureId DEFAULT (1) FOR CultureId ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_InternalUsr DEFAULT (''N'') FOR InternalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_TechnicalUsr DEFAULT (''N'') FOR TechnicalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdNoRepeat DEFAULT (1) FOR PwdNoRepeat ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdDuration DEFAULT (9999) FOR PwdDuration ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdWarn DEFAULT (0) FOR PwdWarn SET IDENTITY_INSERT dbo.Usr ON INSERT INTO dbo.Usr (UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, PwdNoRepeat, PwdDuration, PwdWarn, PicMed) SELECT UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, CONVERT(Int,DefProjectId), DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, 1, PwdDuration, PwdWarn, PicMed FROM dbo.Tmp_Usr SET IDENTITY_INSERT dbo.Usr OFF IF (SELECT COUNT(1) FROM dbo.Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Usr) = 0 DROP TABLE dbo.Tmp_Usr')
   9.  24.50315~@~20~@~M~@~Add three security tables~@~N~@~EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrPwd'')) CREATE TABLE dbo.UsrPwd(UsrId int NOT NULL, LastCnt smallint NOT NULL, UsrPassword varbinary(32) NOT NULL, CONSTRAINT PK_UsrPwd PRIMARY KEY CLUSTERED (UsrId ASC,LastCnt ASC))')
EXEC ('IF (SELECT COUNT(1) FROM dbo.UsrPwd) <= 0 INSERT dbo.UsrPwd (UsrId, LastCnt, UsrPassword) SELECT UsrId, 1, UsrPassword FROM dbo.Usr')

EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrAudit'')) CREATE TABLE dbo.UsrAudit(AttemptDt datetime NOT NULL, LoginName nvarchar(32) NOT NULL, UsrId int NULL, IpAddress varchar(50) NOT NULL, LoginSuccess char(1) NOT NULL, CONSTRAINT PK_UsrAudit PRIMARY KEY CLUSTERED (AttemptDt ASC))')

EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrSafeIP'')) CREATE TABLE dbo.UsrSafeIP(UsrId int NOT NULL, IpAddress varchar(50) NOT NULL, CONSTRAINT PK_UsrSafeIP PRIMARY KEY CLUSTERED (UsrId ASC, IpAddress ASC))')

   9.  25.50317~@~10~@~M~@~Change table Menu~@~Y~@~ EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_MenuHlp_Menu'') ALTER TABLE dbo.MenuHlp DROP CONSTRAINT FK_MenuHlp_Menu CREATE TABLE dbo.Tmp_Menu (MenuIndex smallint NULL, MenuId int NULL, ParentId int NULL, ReportId int NULL, ScreenId int NULL, WizardId int NULL, StaticPgId int NULL, MenuDesc nvarchar(300) NULL, IconUrl nvarchar(300) NULL, MenuName varchar(30) NULL, Miscellaneous varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_Menu (MenuIndex, MenuId, ParentId, ReportId, ScreenId, WizardId, StaticPgId, MenuDesc, IconUrl, MenuName, Miscellaneous) SELECT convert(smallint,MenuIndex), convert(int,MenuId), convert(int,ParentId), convert(int,ReportId), convert(int,ScreenId), convert(int,WizardId), convert(int,StaticPgId), MenuDesc, IconUrl, MenuName, Miscellaneous FROM dbo.Menu IF (SELECT COUNT(1) FROM dbo.Tmp_Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Menu) = 0 DROP TABLE dbo.Menu') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Menu'')) CREATE TABLE dbo.Menu (MenuId Int IDENTITY NOT NULL, MenuIndex SmallInt NOT NULL, Miscellaneous VarChar(100) NULL, ParentId Int NULL, ReportId Int NULL, ScreenId Int NULL, WizardId Int NULL, StaticPgId Int NULL, IconUrl NVarChar(300) NULL, CONSTRAINT PK_Menu PRIMARY KEY CLUSTERED (MenuId))') EXEC (' SET IDENTITY_INSERT dbo.Menu ON INSERT INTO dbo.Menu (MenuId, MenuIndex, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl) SELECT MenuId, MenuIndex, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl FROM dbo.Tmp_Menu SET IDENTITY_INSERT dbo.Menu OFF IF (SELECT COUNT(1) FROM dbo.Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Menu) = 0 DROP TABLE dbo.Tmp_Menu ALTER TABLE dbo.MenuHlp WITH NOCHECK ADD CONSTRAINT FK_MenuHlp_Menu FOREIGN KEY (MenuId) REFERENCES dbo.Menu (MenuId)')
   9.  25.50317~@~20~@~M~@~Remove Combobox from DisplayType~@~N~@~EXEC ('DELETE FROM dbo.CtDisplayType WHERE TypeId in (18,22)')
   9.  25.50317~@~30~@~M~@~Just in case old Combobox is used~@~Y~@~EXEC ('UPDATE dbo.ScreenObj SET DisplayModeId = 38 WHERE DisplayModeId in (18,22)')

   9.  25.50317~@~40~@~M~@~Remove obsolete function~@~N~@~IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name='fMenu') EXEC ('DROP FUNCTION dbo.fMenu')
   9.  28.50329~@~10~@~M~@~Change table Usr~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_Usr (DefSystemId tinyint NULL, FailedAttempt tinyint NULL, FailedAttemptFP tinyint NULL, HintQuestionId tinyint NULL, CultureId smallint NULL, PwdNoRepeat smallint NULL, PwdDuration smallint NULL, PwdWarn smallint NULL, UsrId int NULL, InvestorId int NULL, CustomerId int NULL, VendorId int NULL, AgentId int NULL, BrokerId int NULL, MemberId int NULL, DefProjectId int NULL, DefCompanyId int NULL, UsrPassword varbinary(32) NULL, ConfirmPwd varbinary(32) NULL, ExtPassword varbinary(255) NULL, PicMed varbinary(max) NULL, LoginName nvarchar(32) NULL, UsrEmail nvarchar(50) NULL, UsrName nvarchar(50) NULL, HintAnswer nvarchar(50) NULL, LastFailedDt datetime NULL, LastSuccessDt datetime NULL, LastPwdChgDt datetime NULL, ModifiedOn datetime NULL, InternalUsr char(1) NULL, TechnicalUsr char(1) NULL, Active char(1) NULL, UsrGroupLs varchar(1000) NULL, CompanyLs varchar(1000) NULL, ProjectLs varchar(1000) NULL, UsrImprLink varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_Usr (DefSystemId, FailedAttempt, FailedAttemptFP, HintQuestionId, CultureId, PwdNoRepeat, PwdDuration, PwdWarn, UsrId, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefProjectId, DefCompanyId, UsrPassword, ConfirmPwd, ExtPassword, PicMed, LoginName, UsrEmail, UsrName, HintAnswer, LastFailedDt, LastSuccessDt, LastPwdChgDt, ModifiedOn, InternalUsr, TechnicalUsr, Active, UsrGroupLs, CompanyLs, ProjectLs, UsrImprLink) SELECT convert(tinyint,DefSystemId), convert(tinyint,FailedAttempt), convert(tinyint,FailedAttemptFP), convert(tinyint,HintQuestionId), convert(smallint,CultureId), convert(smallint,PwdNoRepeat), convert(smallint,PwdDuration), convert(smallint,PwdWarn), convert(int,UsrId), convert(int,InvestorId), convert(int,CustomerId), convert(int,VendorId), convert(int,AgentId), convert(int,BrokerId), convert(int,MemberId), convert(int,DefProjectId), convert(int,DefCompanyId), UsrPassword, ConfirmPwd, ExtPassword, PicMed, LoginName, UsrEmail, UsrName, HintAnswer, LastFailedDt, LastSuccessDt, LastPwdChgDt, ModifiedOn, InternalUsr, TechnicalUsr, Active, UsrGroupLs, CompanyLs, ProjectLs, UsrImprLink FROM dbo.Usr IF (SELECT COUNT(1) FROM dbo.Tmp_Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Usr) = 0 DROP TABLE dbo.Usr') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Usr'')) CREATE TABLE dbo.Usr (UsrId Int IDENTITY NOT NULL, LoginName NVarChar(32) NOT NULL, UsrEmail NVarChar(50) NULL, UsrName NVarChar(50) NULL, UsrPassword VarBinary(32) NULL, ConfirmPwd VarBinary(32) NULL, ExtPassword VarBinary(255) NULL, CultureId SmallInt NOT NULL, InternalUsr Char(1) NOT NULL, TechnicalUsr Char(1) NOT NULL, UsrGroupLs VarChar(1000) NOT NULL, CompanyLs VarChar(1000) NULL, ProjectLs VarChar(1000) NULL, InvestorId Int NULL, CustomerId Int NULL, VendorId Int NULL, AgentId Int NULL, BrokerId Int NULL, MemberId Int NULL, DefSystemId TinyInt NOT NULL, DefProjectId Int NULL, DefCompanyId Int NULL, FailedAttempt TinyInt NULL, FailedAttemptFP TinyInt NULL, LastFailedDt DateTime NULL, LastSuccessDt DateTime NULL, LastPwdChgDt DateTime NULL, HintQuestionId TinyInt NULL, HintAnswer NVarChar(50) NULL, Active Char(1) NOT NULL, ModifiedOn DateTime NOT NULL, UsrImprLink VarChar(200) NULL, IPAlert Char(1) NOT NULL, PwdNoRepeat SmallInt NOT NULL, PwdDuration SmallInt NOT NULL, PwdWarn SmallInt NOT NULL, PicMed VarBinary(max) NULL, CONSTRAINT PK_Usr PRIMARY KEY CLUSTERED (UsrId, CultureId))') EXEC (' ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_CultureId DEFAULT (1) FOR CultureId ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_InternalUsr DEFAULT (''N'') FOR InternalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_TechnicalUsr DEFAULT (''N'') FOR TechnicalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_IPAlert DEFAULT (''N'') FOR IPAlert ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdNoRepeat DEFAULT (1) FOR PwdNoRepeat ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdDuration DEFAULT (9999) FOR PwdDuration ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdWarn DEFAULT (0) FOR PwdWarn SET IDENTITY_INSERT dbo.Usr ON INSERT INTO dbo.Usr (UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, IPAlert, PwdNoRepeat, PwdDuration, PwdWarn, PicMed) SELECT UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, ''N'', PwdNoRepeat, PwdDuration, PwdWarn, PicMed FROM dbo.Tmp_Usr SET IDENTITY_INSERT dbo.Usr OFF IF (SELECT COUNT(1) FROM dbo.Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Usr) = 0 DROP TABLE dbo.Tmp_Usr')
   9.  34.50413~@~10~@~M~@~Change table Usr~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_Usr (DefSystemId tinyint NULL, FailedAttempt tinyint NULL, FailedAttemptFP tinyint NULL, HintQuestionId tinyint NULL, CultureId smallint NULL, PwdNoRepeat smallint NULL, PwdDuration smallint NULL, PwdWarn smallint NULL, UsrId int NULL, InvestorId int NULL, CustomerId int NULL, VendorId int NULL, AgentId int NULL, BrokerId int NULL, MemberId int NULL, DefProjectId int NULL, DefCompanyId int NULL, UsrPassword varbinary(32) NULL, ConfirmPwd varbinary(32) NULL, ExtPassword varbinary(255) NULL, PicMed varbinary(max) NULL, LoginName nvarchar(32) NULL, UsrEmail nvarchar(50) NULL, UsrName nvarchar(50) NULL, HintAnswer nvarchar(50) NULL, LastFailedDt datetime NULL, LastSuccessDt datetime NULL, LastPwdChgDt datetime NULL, ModifiedOn datetime NULL, InternalUsr char(1) NULL, TechnicalUsr char(1) NULL, Active char(1) NULL, IPAlert char(1) NULL, UsrGroupLs varchar(1000) NULL, CompanyLs varchar(1000) NULL, ProjectLs varchar(1000) NULL, UsrImprLink varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_Usr (DefSystemId, FailedAttempt, FailedAttemptFP, HintQuestionId, CultureId, PwdNoRepeat, PwdDuration, PwdWarn, UsrId, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefProjectId, DefCompanyId, UsrPassword, ConfirmPwd, ExtPassword, PicMed, LoginName, UsrEmail, UsrName, HintAnswer, LastFailedDt, LastSuccessDt, LastPwdChgDt, ModifiedOn, InternalUsr, TechnicalUsr, Active, IPAlert, UsrGroupLs, CompanyLs, ProjectLs, UsrImprLink) SELECT convert(tinyint,DefSystemId), convert(tinyint,FailedAttempt), convert(tinyint,FailedAttemptFP), convert(tinyint,HintQuestionId), convert(smallint,CultureId), convert(smallint,PwdNoRepeat), convert(smallint,PwdDuration), convert(smallint,PwdWarn), convert(int,UsrId), convert(int,InvestorId), convert(int,CustomerId), convert(int,VendorId), convert(int,AgentId), convert(int,BrokerId), convert(int,MemberId), convert(int,DefProjectId), convert(int,DefCompanyId), UsrPassword, ConfirmPwd, ExtPassword, PicMed, LoginName, UsrEmail, UsrName, HintAnswer, LastFailedDt, LastSuccessDt, LastPwdChgDt, ModifiedOn, InternalUsr, TechnicalUsr, Active, IPAlert, UsrGroupLs, CompanyLs, ProjectLs, UsrImprLink FROM dbo.Usr IF (SELECT COUNT(1) FROM dbo.Tmp_Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Usr) = 0 DROP TABLE dbo.Usr') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Usr'')) CREATE TABLE dbo.Usr (UsrId Int IDENTITY NOT NULL, LoginName NVarChar(32) NOT NULL, UsrEmail NVarChar(50) NULL, UsrName NVarChar(50) NULL, UsrPassword VarBinary(32) NULL, ConfirmPwd VarBinary(32) NULL, ExtPassword VarBinary(255) NULL, CultureId SmallInt NOT NULL, InternalUsr Char(1) NOT NULL, TechnicalUsr Char(1) NOT NULL, UsrGroupLs VarChar(1000) NOT NULL, CompanyLs VarChar(1000) NULL, ProjectLs VarChar(1000) NULL, InvestorId Int NULL, CustomerId Int NULL, VendorId Int NULL, AgentId Int NULL, BrokerId Int NULL, MemberId Int NULL, DefSystemId TinyInt NOT NULL, DefProjectId Int NULL, DefCompanyId Int NULL, FailedAttempt TinyInt NULL, FailedAttemptFP TinyInt NULL, LastFailedDt DateTime NULL, LastSuccessDt DateTime NULL, LastPwdChgDt DateTime NULL, HintQuestionId TinyInt NULL, HintAnswer NVarChar(50) NULL, Active Char(1) NOT NULL, ModifiedOn DateTime NOT NULL, UsrImprLink VarChar(200) NULL, IPAlert Char(1) NOT NULL, PwdNoRepeat SmallInt NOT NULL, PwdDuration SmallInt NOT NULL, PwdWarn SmallInt NOT NULL, PicMed VarBinary(max) NULL, CONSTRAINT PK_Usr PRIMARY KEY CLUSTERED (UsrId, CultureId))') EXEC (' ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_CultureId DEFAULT (1) FOR CultureId ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_InternalUsr DEFAULT (''N'') FOR InternalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_TechnicalUsr DEFAULT (''N'') FOR TechnicalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_IPAlert DEFAULT (''N'') FOR IPAlert ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdNoRepeat DEFAULT (1) FOR PwdNoRepeat ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdDuration DEFAULT (9999) FOR PwdDuration ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdWarn DEFAULT (0) FOR PwdWarn SET IDENTITY_INSERT dbo.Usr ON INSERT INTO dbo.Usr (UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, IPAlert, PwdNoRepeat, PwdDuration, PwdWarn, PicMed) SELECT UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, IPAlert, PwdNoRepeat, PwdDuration, PwdWarn, PicMed FROM dbo.Tmp_Usr SET IDENTITY_INSERT dbo.Usr OFF IF (SELECT COUNT(1) FROM dbo.Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Usr) = 0 DROP TABLE dbo.Tmp_Usr IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_Usr'') CREATE UNIQUE NONCLUSTERED INDEX IU_Usr ON dbo.Usr(LoginName)')
   9.  36.50514~@~10~@~M~@~Change table UsrImpr~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_UsrImpr (UsrImprId int NULL, UsrId int NULL, ImprUsrId int NULL, TestCurrency money NULL, UsrImprDesc nvarchar(200) NULL, UsrImprLink varchar(200) NULL, TestCulture varchar(10) NULL)') EXEC (' INSERT INTO dbo.Tmp_UsrImpr (UsrImprId, UsrId, ImprUsrId, TestCurrency, UsrImprDesc, UsrImprLink, TestCulture) SELECT convert(int,UsrImprId), convert(int,UsrId), convert(int,ImprUsrId), convert(money,TestCurrency), UsrImprDesc, UsrImprLink, TestCulture FROM dbo.UsrImpr IF (SELECT COUNT(1) FROM dbo.Tmp_UsrImpr) > 0 OR (SELECT COUNT(1) FROM dbo.UsrImpr) = 0 DROP TABLE dbo.UsrImpr') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrImpr'')) CREATE TABLE dbo.UsrImpr (UsrImprId Int IDENTITY NOT NULL, UsrId Int NOT NULL, ImprUsrId Int NOT NULL, UsrImprDesc NVarChar(200) NULL, UsrImprLink VarChar(200) NULL, TestCulture VarChar(10) NULL, TestCurrency Money NULL, SignOff VarBinary(max) NULL, CONSTRAINT PK_UsrImpr PRIMARY KEY CLUSTERED (UsrImprId))') EXEC (' SET IDENTITY_INSERT dbo.UsrImpr ON INSERT INTO dbo.UsrImpr (UsrImprId, UsrId, ImprUsrId, UsrImprDesc, UsrImprLink, TestCulture, TestCurrency) SELECT UsrImprId, UsrId, ImprUsrId, UsrImprDesc, UsrImprLink, TestCulture, TestCurrency FROM dbo.Tmp_UsrImpr SET IDENTITY_INSERT dbo.UsrImpr OFF IF (SELECT COUNT(1) FROM dbo.UsrImpr) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UsrImpr) = 0 DROP TABLE dbo.Tmp_UsrImpr')
   9.  43.50616~@~10~@~M~@~Change table ScreenTab~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_ScreenTab (TabFolderOrder tinyint NULL, ScreenTabId int NULL, TabFolderName varchar(30) NULL)')
EXEC ('INSERT INTO dbo.Tmp_ScreenTab (TabFolderOrder, ScreenTabId, TabFolderName) SELECT convert(tinyint,TabFolderOrder), convert(int,ScreenTabId), TabFolderName FROM dbo.ScreenTab IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenTab) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenTab) = 0 DROP TABLE dbo.ScreenTab')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenTab'')) CREATE TABLE dbo.ScreenTab (ScreenTabId Int IDENTITY NOT NULL, ScreenTabDesc nvarchar(200) NULL, ScreenId Int NOT NULL, TabFolderName NVarChar(30) NOT NULL, TabFolderOrder TinyInt NOT NULL, CONSTRAINT PK_ScreenTab PRIMARY KEY CLUSTERED (ScreenTabId))') EXEC (' SET IDENTITY_INSERT dbo.ScreenTab ON INSERT INTO dbo.ScreenTab (ScreenTabId, ScreenId, TabFolderName, TabFolderOrder) SELECT ScreenTabId, 0, TabFolderName, TabFolderOrder FROM dbo.Tmp_ScreenTab SET IDENTITY_INSERT dbo.ScreenTab OFF IF (SELECT COUNT(1) FROM dbo.ScreenTab) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenTab) = 0 DROP TABLE dbo.Tmp_ScreenTab')

EXEC ('CREATE TABLE dbo.TmpTab(ScreenId int, ScreenObjId int, ScreenTabId int, TabFolderName nvarchar(50), TabFolderOrder tinyint)')
EXEC ('INSERT INTO dbo.TmpTab SELECT a.ScreenId, a.ScreenObjId, b.ScreenTabId, b.TabFolderName, b.TabFolderOrder FROM dbo.ScreenObj a INNER JOIN dbo.ScreenTab b ON a.TabFolderId = b.ScreenTabId')
EXEC ('TRUNCATE TABLE dbo.ScreenTabHlp')
EXEC ('TRUNCATE TABLE dbo.ScreenTab')
EXEC ('INSERT INTO dbo.ScreenTab (ScreenId, TabFolderName, TabFolderOrder) SELECT DISTINCT ScreenId, TabFolderName, TabFolderOrder FROM dbo.TmpTab ORDER BY ScreenId, TabFolderOrder')
EXEC ('INSERT dbo.ScreenTab (ScreenId, TabFolderName, TabFolderOrder) SELECT DISTINCT ScreenId, ''Main Info'', 10 FROM dbo.ScreenObj WHERE NOT EXISTS (SELECT 1 FROM dbo.ScreenTab WHERE ScreenId = dbo.ScreenObj.ScreenId)')
EXEC ('INSERT INTO dbo.ScreenTabHlp (ScreenTabId, CultureId, TabFolderName) SELECT ScreenTabId, 1, TabFolderName FROM dbo.ScreenTab')
EXEC ('UPDATE a SET a.TabFolderId = c.ScreenTabId FROM dbo.ScreenObj a INNER JOIN dbo.TmpTab b ON a.ScreenObjId = b.ScreenObjId INNER JOIN dbo.ScreenTab c ON b.ScreenId = c.ScreenId AND b.TabFolderName = c.TabFolderName')

EXEC ('UPDATE dbo.ScreenTab SET ScreenTabDesc = b.ScreenDesc + '' ['' + Convert(varchar(10),a.TabFolderOrder) + ''] '' + a.TabFolderName FROM dbo.ScreenTab a INNER JOIN dbo.Screen b ON a.ScreenId = b.ScreenId')

EXEC ('IF ((SELECT COUNT(1) FROM dbo.TmpTab) <= 0) OR ((SELECT COUNT(1) FROM dbo.ScreenTab) > 0 AND NOT EXISTS (SELECT 1 FROM dbo.ScreenTab WHERE SCreenId is NULL)) DROP TABLE dbo.TmpTab')

EXEC ('UPDATE a SET a.TabFolderId = b.ScreenTabId FROM dbo.ScreenObj a INNER JOIN dbo.ScreenTab b ON a.ScreenId = b.ScreenId where a.TabFolderId is null')

EXEC ('ALTER TABLE dbo.ScreenObj ALTER COLUMN TabfolderId int NOT NULL')
EXEC ('UPDATE dbo.ScreenObj SET ColumnDesc = b.ProgramName + '' ['' +  + right(space(6) + convert(varchar,a.TabIndex),6) + ''] '' + c.TabFolderName + '': '' + a.ColumnName FROM dbo.ScreenObj a INNER JOIN dbo.Screen b ON a.ScreenId = b.ScreenId INNER JOIN dbo.ScreenTab c ON a.TabFolderId = c.ScreenTabId')


   9.  46.50709~@~10~@~M~@~Change ScreenTab and ScreenObj Descriptions~@~Y~@~EXEC ('UPDATE dbo.ScreenTab SET ScreenTabDesc = b.ScreenDesc + '' ['' + right(space(3) + convert(varchar,a.TabFolderOrder),3) + ''] '' + a.TabFolderName FROM dbo.ScreenTab a INNER JOIN dbo.Screen b ON a.ScreenId = b.ScreenId')

EXEC ('UPDATE dbo.ScreenObj SET ColumnDesc = b.ProgramName + '' ['' + right(space(5) + convert(varchar,a.TabIndex),5) + ''] '' + c.TabFolderName + '': '' + a.ColumnName FROM dbo.ScreenObj a INNER JOIN dbo.Screen b ON a.ScreenId = b.ScreenId INNER JOIN dbo.ScreenTab c ON a.TabFolderId = c.ScreenTabId')

   9.  46.50709~@~20~@~M~@~Change table ScreenCri~@~Y~@~EXEC (' CREATE TABLE dbo.Tmp_ScreenCri (DisplayModeId tinyint NULL, TabIndex smallint NULL, ColumnSize smallint NULL, RowSize smallint NULL, ScreenCriId int NULL, ScreenId int NULL, ColumnId int NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, ColumnJustify char(1) NULL, RequiredValid char(1) NULL, ScreenCriDesc varchar(100) NULL, LabelCss varchar(100) NULL, ContentCss varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenCri (DisplayModeId, TabIndex, ColumnSize, RowSize, ScreenCriId, ScreenId, ColumnId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, ColumnJustify, RequiredValid, ScreenCriDesc, LabelCss, ContentCss) SELECT convert(tinyint,DisplayModeId), convert(smallint,TabIndex), convert(smallint,ColumnSize), convert(smallint,RowSize), convert(int,ScreenCriId), convert(int,ScreenId), convert(int,ColumnId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), ColumnJustify, RequiredValid, ScreenCriDesc, LabelCss, ContentCss FROM dbo.ScreenCri IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenCri) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenCri) = 0 DROP TABLE dbo.ScreenCri') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenCri'')) CREATE TABLE dbo.ScreenCri (ScreenCriId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, ScreenCriDesc VarChar(100) NULL, LabelCss VarChar(100) NULL, ContentCss VarChar(100) NULL, ColumnId Int NOT NULL, OperatorId TinyInt NOT NULL, TabIndex SmallInt NOT NULL, DisplayModeId TinyInt NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, RowSize SmallInt NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, RequiredValid Char(1) NOT NULL, CONSTRAINT PK_ScreenCri PRIMARY KEY CLUSTERED (ScreenCriId))') EXEC (' ALTER TABLE dbo.ScreenCri ADD CONSTRAINT DF_ScreenCri_OperatorId DEFAULT (1) FOR OperatorId SET IDENTITY_INSERT dbo.ScreenCri ON INSERT INTO dbo.ScreenCri (ScreenCriId, ScreenId, ScreenCriDesc, LabelCss, ContentCss, ColumnId, OperatorId, TabIndex, DisplayModeId, ColumnJustify, ColumnSize, RowSize, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, RequiredValid) SELECT ScreenCriId, ScreenId, ScreenCriDesc, LabelCss, ContentCss, ColumnId, 1, TabIndex, DisplayModeId, ColumnJustify, ColumnSize, RowSize, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, RequiredValid FROM dbo.Tmp_ScreenCri SET IDENTITY_INSERT dbo.ScreenCri OFF IF (SELECT COUNT(1) FROM dbo.ScreenCri) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenCri) = 0 DROP TABLE dbo.Tmp_ScreenCri')


   9.  47.50720~@~10~@~M~@~Remove script from LinkHeader and Social~@~N~@~EXEC ('UPDATE dbo.PageObj SET PageObjSrp = NULL WHERE LinkTypeCd IN (''HDR'',''SSO'')')

   9.  48.50727~@~10~@~M~@~Change table CtDataType~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_CtDataType (DataTypeId tinyint NULL, NumericData char(1) NULL, DoubleByte char(1) NULL, DataTypeName varchar(20) NULL, DataTypeSqlName varchar(20) NULL, DataTypeSysName varchar(20) NULL, DataTypeSByteOle varchar(20) NULL, DataTypeDByteOle varchar(20) NULL, DataTypeRdlParm varchar(20) NULL, DataTypeDesc varchar(80) NULL)') EXEC (' INSERT INTO dbo.Tmp_CtDataType (DataTypeId, NumericData, DoubleByte, DataTypeName, DataTypeSqlName, DataTypeSysName, DataTypeSByteOle, DataTypeDByteOle, DataTypeRdlParm, DataTypeDesc) SELECT convert(tinyint,DataTypeId), NumericData, DoubleByte, DataTypeName, DataTypeSqlName, DataTypeSysName, DataTypeSByteOle, DataTypeDByteOle, DataTypeRdlParm, DataTypeDesc FROM dbo.CtDataType IF (SELECT COUNT(1) FROM dbo.Tmp_CtDataType) > 0 OR (SELECT COUNT(1) FROM dbo.CtDataType) = 0 DROP TABLE dbo.CtDataType') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtDataType'')) CREATE TABLE dbo.CtDataType (DataTypeId TinyInt IDENTITY NOT NULL, DataTypeName VarChar(20) NOT NULL, DataTypeSqlName VarChar(20) NOT NULL, DataTypeSysName VarChar(20) NOT NULL, DataTypeSByteOle VarChar(20) NOT NULL, DataTypeDByteOle VarChar(20) NOT NULL, DataTypeRdlParm VarChar(20) NULL, DataTypeDesc VarChar(80) NOT NULL, NumericData Char(1) NOT NULL, DoubleByte Char(1) NOT NULL, DisplayModeId TinyInt NULL, CONSTRAINT PK_CtDataType PRIMARY KEY CLUSTERED (DataTypeId))') EXEC (' SET IDENTITY_INSERT dbo.CtDataType ON INSERT INTO dbo.CtDataType (DataTypeId, DataTypeName, DataTypeSqlName, DataTypeSysName, DataTypeSByteOle, DataTypeDByteOle, DataTypeRdlParm, DataTypeDesc, NumericData, DoubleByte) SELECT DataTypeId, DataTypeName, DataTypeSqlName, DataTypeSysName, DataTypeSByteOle, DataTypeDByteOle, DataTypeRdlParm, DataTypeDesc, NumericData, DoubleByte FROM dbo.Tmp_CtDataType SET IDENTITY_INSERT dbo.CtDataType OFF IF (SELECT COUNT(1) FROM dbo.CtDataType) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtDataType) = 0 DROP TABLE dbo.Tmp_CtDataType')
   9.  49.50730~@~60~@~M~@~Remove unused items~@~Y~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''QueryStr'') DROP TABLE dbo.QueryStr')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''DshAvail'') DROP TABLE dbo.DshAvail')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''DshFld'') DROP TABLE dbo.DshFld')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''DshFldDtl'') DROP TABLE dbo.DshFldDtl')

EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''GetDashboardCat'') DROP PROCEDURE dbo.GetDashboardCat')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''GetQueryStr'') DROP PROCEDURE dbo.GetQueryStr')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''WrNoDshAvail'') DROP PROCEDURE dbo.WrNoDshAvail')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''WrAddDshAvail'') DROP PROCEDURE dbo.WrAddDshAvail')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''DelDshFldDtl'') DROP PROCEDURE dbo.DelDshFldDtl')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''DelDshFld'') DROP PROCEDURE dbo.DelDshFld')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''GetAdmListDsh102ById'') DROP PROCEDURE dbo.GetAdmListDsh102ById')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''GetAdmListDsh102DtlById'') DROP PROCEDURE dbo.GetAdmListDsh102DtlById')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''GetDdlDshFld'') DROP PROCEDURE dbo.GetDdlDshFld')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''GetDdlDshFldDtl'') DROP PROCEDURE dbo.GetDdlDshFldDtl')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''GetExpAdmListDsh102'') DROP PROCEDURE dbo.GetExpAdmListDsh102')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''GetLisAdmListDsh102'') DROP PROCEDURE dbo.GetLisAdmListDsh102')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''UpdDshFld'') DROP PROCEDURE dbo.UpdDshFld')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''UpdDshFldDtl'') DROP PROCEDURE dbo.UpdDshFldDtl')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''UpdAdmListDsh102In'') DROP PROCEDURE dbo.UpdAdmListDsh102In')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''UpdAdmListRpt101In'') DROP PROCEDURE dbo.UpdAdmListRpt101In')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''GetAdmListRpt101ById'') DROP PROCEDURE dbo.GetAdmListRpt101ById')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''GetAdmListRpt101DtlById'') DROP PROCEDURE dbo.GetAdmListRpt101DtlById')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''GetExpAdmListDsh102'') DROP PROCEDURE dbo.GetExpAdmListDsh102')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''GetExpAdmListRpt101'') DROP PROCEDURE dbo.GetExpAdmListRpt101')

   9.  50.50806~@~10~@~M~@~Change table UsrImpr~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_UsrImpr (UsrImprId int NULL, UsrId int NULL, ImprUsrId int NULL, TestCurrency money NULL, SignOff varbinary(max) NULL, UsrImprDesc nvarchar(200) NULL, UsrImprLink varchar(200) NULL, TestCulture varchar(10) NULL)') EXEC (' INSERT INTO dbo.Tmp_UsrImpr (UsrImprId, UsrId, ImprUsrId, TestCurrency, SignOff, UsrImprDesc, UsrImprLink, TestCulture) SELECT convert(int,UsrImprId), convert(int,UsrId), convert(int,ImprUsrId), convert(money,TestCurrency), SignOff, UsrImprDesc, UsrImprLink, TestCulture FROM dbo.UsrImpr IF (SELECT COUNT(1) FROM dbo.Tmp_UsrImpr) > 0 OR (SELECT COUNT(1) FROM dbo.UsrImpr) = 0 DROP TABLE dbo.UsrImpr') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrImpr'')) CREATE TABLE dbo.UsrImpr (UsrImprId Int IDENTITY NOT NULL, UsrId Int NOT NULL, ImprUsrId Int NOT NULL, UsrImprDesc NVarChar(200) NULL, UsrImprLink VarChar(200) NULL, TestCulture VarChar(10) NULL, TestCurrency Money NULL, SignOff VarBinary(max) NULL, InputBy Int NULL, InputOn DateTime NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, CONSTRAINT PK_UsrImpr PRIMARY KEY CLUSTERED (UsrImprId))') EXEC (' SET IDENTITY_INSERT dbo.UsrImpr ON INSERT INTO dbo.UsrImpr (UsrImprId, UsrId, ImprUsrId, UsrImprDesc, UsrImprLink, TestCulture, TestCurrency, SignOff) SELECT UsrImprId, UsrId, ImprUsrId, UsrImprDesc, UsrImprLink, TestCulture, TestCurrency, SignOff FROM dbo.Tmp_UsrImpr SET IDENTITY_INSERT dbo.UsrImpr OFF IF (SELECT COUNT(1) FROM dbo.UsrImpr) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UsrImpr) = 0 DROP TABLE dbo.Tmp_UsrImpr')
   9.  53.50814~@~10~@~M~@~Change table DbTable~@~Y~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_DbColumn_DbTable'') ALTER TABLE dbo.DbColumn DROP CONSTRAINT FK_DbColumn_DbTable CREATE TABLE dbo.Tmp_DbTable (SystemId tinyint NULL, TableId int NULL, ModifiedBy int NULL, TableDesc nvarchar(100) NULL, VirtualSql nvarchar(max) NULL, TblObjective nvarchar(500) NULL, ModifiedOn datetime NULL, LastSyncDt datetime NULL, MultiDesignDb char(1) NULL, VirtualTbl char(1) NULL, TableName varchar(20) NULL, PrevTblName varchar(20) NULL)') EXEC (' INSERT INTO dbo.Tmp_DbTable (SystemId, TableId, ModifiedBy, TableDesc, VirtualSql, TblObjective, ModifiedOn, LastSyncDt, MultiDesignDb, VirtualTbl, TableName, PrevTblName) SELECT convert(tinyint,SystemId), convert(int,TableId), convert(int,ModifiedBy), TableDesc, VirtualSql, TblObjective, ModifiedOn, LastSyncDt, MultiDesignDb, VirtualTbl, TableName, PrevTblName FROM dbo.DbTable IF (SELECT COUNT(1) FROM dbo.Tmp_DbTable) > 0 OR (SELECT COUNT(1) FROM dbo.DbTable) = 0 DROP TABLE dbo.DbTable') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.DbTable'')) CREATE TABLE dbo.DbTable (TableId Int IDENTITY NOT NULL, SystemId TinyInt NOT NULL, TableName VarChar(50) NOT NULL, TableDesc NVarChar(100) NOT NULL, MultiDesignDb Char(1) NOT NULL, VirtualTbl Char(1) NOT NULL, VirtualSql NVarChar(max) NULL, TblObjective NVarChar(500) NULL, PrevTblName VarChar(20) NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastSyncDt DateTime NULL, CONSTRAINT PK_DbTable PRIMARY KEY CLUSTERED (TableId))') EXEC (' ALTER TABLE dbo.DbTable ADD CONSTRAINT DF_DbTable_VirtualTbl DEFAULT (''N'') FOR VirtualTbl SET IDENTITY_INSERT dbo.DbTable ON INSERT INTO dbo.DbTable (TableId, SystemId, TableName, TableDesc, MultiDesignDb, VirtualTbl, VirtualSql, TblObjective, PrevTblName, ModifiedBy, ModifiedOn, LastSyncDt) SELECT TableId, SystemId, TableName, TableDesc, MultiDesignDb, VirtualTbl, VirtualSql, TblObjective, PrevTblName, ModifiedBy, ModifiedOn, LastSyncDt FROM dbo.Tmp_DbTable SET IDENTITY_INSERT dbo.DbTable OFF IF (SELECT COUNT(1) FROM dbo.DbTable) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_DbTable) = 0 DROP TABLE dbo.Tmp_DbTable ALTER TABLE dbo.DbColumn WITH NOCHECK ADD CONSTRAINT FK_DbColumn_DbTable FOREIGN KEY (TableId) REFERENCES dbo.DbTable (TableId)')

EXEC('UPDATE dbo.DbColumn SET ColumnScale = 6 WHERE DataType = 6')

   9.  53.50814~@~20~@~M~@~Add table CtCrudType~@~N~@~IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id('dbo.CtCrudType'))
BEGIN
EXEC ('CREATE TABLE dbo.CtCrudType (CrudTypeCd Char(1) NOT NULL, CrudTypeName NVarChar(50) NOT NULL, CrudTypeDesc NVarChar(200) NOT NULL, CrudTypeSort Tinyint NOT NULL, CONSTRAINT PK_CtCrudType PRIMARY KEY CLUSTERED (CrudTypeCd))')
EXEC ('INSERT dbo.CtCrudType SELECT ''Y'', ''Before CRUD'', ''Run this s.proc before CRUD and before any Skip-CRUD.'', 1')
EXEC ('INSERT dbo.CtCrudType SELECT ''S'', ''Skip CRUD'', ''Run this s.proc after all the Before-CRUD and skip the CRUD operation.'', 2')
EXEC ('INSERT dbo.CtCrudType SELECT ''N'', ''After CRUD'', ''Run this s.proc after CRUD; Must handle Add scenario when CRUD is skipped.'', 3')
EXEC ('INSERT dbo.CtCrudType SELECT ''C'', ''Last Rule'', ''Run this s.proc after all the After-CRUD and before Commit transaction.'', 4')
END
   9.  54.50816~@~10~@~M~@~Update Server Rule Exec Order~@~Y~@~IF (SELECT count(1) FROM sys.procedures sp JOIN sys.parameters p ON sp.object_id = p.object_id WHERE sp.name = 'Ir_UpdServerRule') = 3
EXEC ('DECLARE @ScreenId int DECLARE scr CURSOR FOR SELECT ScreenId FROM dbo.Screen FOR READ ONLY OPEN scr FETCH NEXT FROM scr INTO @ScreenId WHILE @@FETCH_STATUS = 0 BEGIN EXEC dbo.Ir_UpdServerRule @ScreenId, 0, 1 FETCH NEXT FROM scr INTO @ScreenId END CLOSE scr DEALLOCATE scr')
ELSE
EXEC ('DECLARE @ScreenId int DECLARE scr CURSOR FOR SELECT ScreenId FROM dbo.Screen FOR READ ONLY OPEN scr FETCH NEXT FROM scr INTO @ScreenId WHILE @@FETCH_STATUS = 0 BEGIN EXEC dbo.Ir_UpdServerRule @ScreenId, 1 FETCH NEXT FROM scr INTO @ScreenId END CLOSE scr DEALLOCATE scr')
   9.  56.50909~@~10~@~M~@~Change table ReportCri~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ReportCri (DataTypeId tinyint NULL, DisplayModeId tinyint NULL, TabIndex smallint NULL, DataTypeSize smallint NULL, ColumnSize smallint NULL, RowSize smallint NULL, ReportCriId int NULL, ReportId int NULL, ReportGrpId int NULL, TableId int NULL, DefaultValue nvarchar(100) NULL, RequiredValid char(1) NULL, ReportCriDesc varchar(100) NULL, LabelCss varchar(100) NULL, ContentCss varchar(100) NULL, TableAbbr varchar(10) NULL, ColumnName varchar(50) NULL, DdlKeyColumnName varchar(50) NULL, DdlRefColumnName varchar(50) NULL, DdlSrtColumnName varchar(50) NULL, WhereClause varchar(1000) NULL, RegClause varchar(400) NULL)') EXEC (' INSERT INTO dbo.Tmp_ReportCri (DataTypeId, DisplayModeId, TabIndex, DataTypeSize, ColumnSize, RowSize, ReportCriId, ReportId, ReportGrpId, TableId, DefaultValue, RequiredValid, ReportCriDesc, LabelCss, ContentCss, TableAbbr, ColumnName, DdlKeyColumnName, DdlRefColumnName, DdlSrtColumnName, WhereClause, RegClause) SELECT convert(tinyint,DataTypeId), convert(tinyint,DisplayModeId), convert(smallint,TabIndex), convert(smallint,DataTypeSize), convert(smallint,ColumnSize), convert(smallint,RowSize), convert(int,ReportCriId), convert(int,ReportId), convert(int,ReportGrpId), convert(int,TableId), DefaultValue, RequiredValid, ReportCriDesc, LabelCss, ContentCss, TableAbbr, ColumnName, DdlKeyColumnName, DdlRefColumnName, DdlSrtColumnName, WhereClause, RegClause FROM dbo.ReportCri IF (SELECT COUNT(1) FROM dbo.Tmp_ReportCri) > 0 OR (SELECT COUNT(1) FROM dbo.ReportCri) = 0 DROP TABLE dbo.ReportCri') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ReportCri'')) CREATE TABLE dbo.ReportCri (ReportCriId Int IDENTITY NOT NULL, ReportId Int NOT NULL, ReportCriDesc VarChar(100) NULL, ReportGrpId Int NOT NULL, LabelCss VarChar(100) NULL, ContentCss VarChar(100) NULL, TableId Int NULL, TableAbbr VarChar(10) NULL, ColumnName VarChar(50) NOT NULL, TabIndex SmallInt NOT NULL, DataTypeId TinyInt NOT NULL, DataTypeSize SmallInt NULL, DisplayModeId TinyInt NOT NULL, ColumnSize SmallInt NULL, RowSize SmallInt NULL, DdlKeyColumnName VarChar(50) NULL, DdlRefColumnName VarChar(50) NULL, DdlSrtColumnName VarChar(50) NULL, DdlFtrColumnId Int NULL, RequiredValid Char(1) NOT NULL, DefaultValue NVarChar(100) NULL, WhereClause VarChar(1000) NULL, RegClause VarChar(400) NULL, CONSTRAINT PK_ReportCri PRIMARY KEY CLUSTERED (ReportCriId))') EXEC (' SET IDENTITY_INSERT dbo.ReportCri ON INSERT INTO dbo.ReportCri (ReportCriId, ReportId, ReportCriDesc, ReportGrpId, LabelCss, ContentCss, TableId, TableAbbr, ColumnName, TabIndex, DataTypeId, DataTypeSize, DisplayModeId, ColumnSize, RowSize, DdlKeyColumnName, DdlRefColumnName, DdlSrtColumnName, RequiredValid, DefaultValue, WhereClause, RegClause) SELECT ReportCriId, ReportId, ReportCriDesc, ReportGrpId, LabelCss, ContentCss, TableId, TableAbbr, ColumnName, TabIndex, DataTypeId, DataTypeSize, DisplayModeId, ColumnSize, RowSize, DdlKeyColumnName, DdlRefColumnName, DdlSrtColumnName, RequiredValid, DefaultValue, WhereClause, RegClause FROM dbo.Tmp_ReportCri SET IDENTITY_INSERT dbo.ReportCri OFF IF (SELECT COUNT(1) FROM dbo.ReportCri) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ReportCri) = 0 DROP TABLE dbo.Tmp_ReportCri')
   9.  56.50909~@~20~@~M~@~Change table ScreenCri~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenCri (OperatorId tinyint NULL, DisplayModeId tinyint NULL, TabIndex smallint NULL, ColumnSize smallint NULL, RowSize smallint NULL, ScreenCriId int NULL, ScreenId int NULL, ColumnId int NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, ColumnJustify char(1) NULL, RequiredValid char(1) NULL, ScreenCriDesc varchar(100) NULL, LabelCss varchar(100) NULL, ContentCss varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenCri (OperatorId, DisplayModeId, TabIndex, ColumnSize, RowSize, ScreenCriId, ScreenId, ColumnId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, ColumnJustify, RequiredValid, ScreenCriDesc, LabelCss, ContentCss) SELECT convert(tinyint,OperatorId), convert(tinyint,DisplayModeId), convert(smallint,TabIndex), convert(smallint,ColumnSize), convert(smallint,RowSize), convert(int,ScreenCriId), convert(int,ScreenId), convert(int,ColumnId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), ColumnJustify, RequiredValid, ScreenCriDesc, LabelCss, ContentCss FROM dbo.ScreenCri IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenCri) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenCri) = 0 DROP TABLE dbo.ScreenCri') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenCri'')) CREATE TABLE dbo.ScreenCri (ScreenCriId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, ScreenCriDesc VarChar(100) NULL, LabelCss VarChar(100) NULL, ContentCss VarChar(100) NULL, ColumnId Int NOT NULL, OperatorId TinyInt NOT NULL, TabIndex SmallInt NOT NULL, DisplayModeId TinyInt NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, RowSize SmallInt NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlFtrColumnId Int NULL, RequiredValid Char(1) NOT NULL, CONSTRAINT PK_ScreenCri PRIMARY KEY CLUSTERED (ScreenCriId))') EXEC (' ALTER TABLE dbo.ScreenCri ADD CONSTRAINT DF_ScreenCri_OperatorId DEFAULT (1) FOR OperatorId SET IDENTITY_INSERT dbo.ScreenCri ON INSERT INTO dbo.ScreenCri (ScreenCriId, ScreenId, ScreenCriDesc, LabelCss, ContentCss, ColumnId, OperatorId, TabIndex, DisplayModeId, ColumnJustify, ColumnSize, RowSize, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, RequiredValid) SELECT ScreenCriId, ScreenId, ScreenCriDesc, LabelCss, ContentCss, ColumnId, OperatorId, TabIndex, DisplayModeId, ColumnJustify, ColumnSize, RowSize, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, RequiredValid FROM dbo.Tmp_ScreenCri SET IDENTITY_INSERT dbo.ScreenCri OFF IF (SELECT COUNT(1) FROM dbo.ScreenCri) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenCri) = 0 DROP TABLE dbo.Tmp_ScreenCri')
   9.  57.50915~@~10~@~M~@~Change table UtReportCri~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_UtReportCri (DataTypeId tinyint NULL, DisplayModeId tinyint NULL, TabIndex smallint NULL, DataTypeSize smallint NULL, ColumnSize smallint NULL, RowSize smallint NULL, ReportCriId int NULL, ReportId int NULL, ReportGrpId int NULL, TableId int NULL, RequiredValid char(1) NULL, ReportCriDesc varchar(100) NULL, LabelCss varchar(100) NULL, ContentCss varchar(100) NULL, TableAbbr varchar(10) NULL, ColumnName varchar(50) NULL, DdlKeyColumnName varchar(50) NULL, DdlRefColumnName varchar(50) NULL, DdlSrtColumnName varchar(50) NULL, WhereClause varchar(1000) NULL, RegClause varchar(400) NULL)') EXEC (' INSERT INTO dbo.Tmp_UtReportCri (DataTypeId, DisplayModeId, TabIndex, DataTypeSize, ColumnSize, RowSize, ReportCriId, ReportId, ReportGrpId, TableId, RequiredValid, ReportCriDesc, LabelCss, ContentCss, TableAbbr, ColumnName, DdlKeyColumnName, DdlRefColumnName, DdlSrtColumnName, WhereClause, RegClause) SELECT convert(tinyint,DataTypeId), convert(tinyint,DisplayModeId), convert(smallint,TabIndex), convert(smallint,DataTypeSize), convert(smallint,ColumnSize), convert(smallint,RowSize), convert(int,ReportCriId), convert(int,ReportId), convert(int,ReportGrpId), convert(int,TableId), RequiredValid, ReportCriDesc, LabelCss, ContentCss, TableAbbr, ColumnName, DdlKeyColumnName, DdlRefColumnName, DdlSrtColumnName, WhereClause, RegClause FROM dbo.UtReportCri IF (SELECT COUNT(1) FROM dbo.Tmp_UtReportCri) > 0 OR (SELECT COUNT(1) FROM dbo.UtReportCri) = 0 DROP TABLE dbo.UtReportCri') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UtReportCri'')) CREATE TABLE dbo.UtReportCri (ReportCriId Int IDENTITY NOT NULL, ReportId Int NOT NULL, ReportCriDesc VarChar(100) NULL, ReportGrpId Int NOT NULL, LabelCss VarChar(100) NULL, ContentCss VarChar(100) NULL, TableId Int NULL, TableAbbr VarChar(10) NULL, ColumnName VarChar(50) NULL, TabIndex SmallInt NOT NULL, DataTypeId TinyInt NOT NULL, DataTypeSize SmallInt NULL, DisplayModeId TinyInt NOT NULL, ColumnSize SmallInt NULL, RowSize SmallInt NULL, DdlKeyColumnName VarChar(50) NULL, DdlRefColumnName VarChar(50) NULL, DdlSrtColumnName VarChar(50) NULL, DdlFtrColumnId Int NULL, RequiredValid Char(1) NOT NULL, WhereClause VarChar(1000) NULL, RegClause VarChar(400) NULL, CONSTRAINT PK_UtReportCri PRIMARY KEY CLUSTERED (ReportCriId))') EXEC (' SET IDENTITY_INSERT dbo.UtReportCri ON INSERT INTO dbo.UtReportCri (ReportCriId, ReportId, ReportCriDesc, ReportGrpId, LabelCss, ContentCss, TableId, TableAbbr, ColumnName, TabIndex, DataTypeId, DataTypeSize, DisplayModeId, ColumnSize, RowSize, DdlKeyColumnName, DdlRefColumnName, DdlSrtColumnName, RequiredValid, WhereClause, RegClause) SELECT ReportCriId, ReportId, ReportCriDesc, ReportGrpId, LabelCss, ContentCss, TableId, TableAbbr, ColumnName, TabIndex, DataTypeId, DataTypeSize, DisplayModeId, ColumnSize, RowSize, DdlKeyColumnName, DdlRefColumnName, DdlSrtColumnName, RequiredValid, WhereClause, RegClause FROM dbo.Tmp_UtReportCri SET IDENTITY_INSERT dbo.UtReportCri OFF IF (SELECT COUNT(1) FROM dbo.UtReportCri) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UtReportCri) = 0 DROP TABLE dbo.Tmp_UtReportCri')
   9.  58.50921~@~10~@~M~@~Change table DbTable~@~Y~@~ EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_DbColumn_DbTable'') ALTER TABLE dbo.DbColumn DROP CONSTRAINT FK_DbColumn_DbTable CREATE TABLE dbo.Tmp_DbTable (SystemId tinyint NULL, TableId int NULL, ModifiedBy int NULL, TableDesc nvarchar(100) NULL, VirtualSql nvarchar(max) NULL, TblObjective nvarchar(500) NULL, ModifiedOn datetime NULL, LastSyncDt datetime NULL, MultiDesignDb char(1) NULL, VirtualTbl char(1) NULL, TableName varchar(50) NULL, PrevTblName varchar(20) NULL)') EXEC (' INSERT INTO dbo.Tmp_DbTable (SystemId, TableId, ModifiedBy, TableDesc, VirtualSql, TblObjective, ModifiedOn, LastSyncDt, MultiDesignDb, VirtualTbl, TableName, PrevTblName) SELECT convert(tinyint,SystemId), convert(int,TableId), convert(int,ModifiedBy), TableDesc, VirtualSql, TblObjective, ModifiedOn, LastSyncDt, MultiDesignDb, VirtualTbl, TableName, PrevTblName FROM dbo.DbTable IF (SELECT COUNT(1) FROM dbo.Tmp_DbTable) > 0 OR (SELECT COUNT(1) FROM dbo.DbTable) = 0 DROP TABLE dbo.DbTable') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.DbTable'')) CREATE TABLE dbo.DbTable (TableId Int IDENTITY NOT NULL, SystemId TinyInt NOT NULL, TableName VarChar(500) NOT NULL, TableDesc NVarChar(100) NOT NULL, MultiDesignDb Char(1) NOT NULL, VirtualTbl Char(1) NOT NULL, VirtualSql NVarChar(max) NULL, TblObjective NVarChar(500) NULL, PrevTblName VarChar(20) NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastSyncDt DateTime NULL, CONSTRAINT PK_DbTable PRIMARY KEY CLUSTERED (TableId))') EXEC (' ALTER TABLE dbo.DbTable ADD CONSTRAINT DF_DbTable_VirtualTbl DEFAULT (''N'') FOR VirtualTbl SET IDENTITY_INSERT dbo.DbTable ON INSERT INTO dbo.DbTable (TableId, SystemId, TableName, TableDesc, MultiDesignDb, VirtualTbl, VirtualSql, TblObjective, PrevTblName, ModifiedBy, ModifiedOn, LastSyncDt) SELECT TableId, SystemId, TableName, TableDesc, MultiDesignDb, VirtualTbl, VirtualSql, TblObjective, PrevTblName, ModifiedBy, ModifiedOn, LastSyncDt FROM dbo.Tmp_DbTable SET IDENTITY_INSERT dbo.DbTable OFF IF (SELECT COUNT(1) FROM dbo.DbTable) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_DbTable) = 0 DROP TABLE dbo.Tmp_DbTable ALTER TABLE dbo.DbColumn WITH NOCHECK ADD CONSTRAINT FK_DbColumn_DbTable FOREIGN KEY (TableId) REFERENCES dbo.DbTable (TableId)')
   9.  65.51114~@~10~@~M~@~Change table DbTable~@~Y~@~EXEC (' IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_DbColumn_DbTable'') ALTER TABLE dbo.DbColumn DROP CONSTRAINT FK_DbColumn_DbTable IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE name=''FK_DbKey_DbTable'') ALTER TABLE dbo.DbKey DROP CONSTRAINT FK_DbKey_DbTable CREATE TABLE dbo.Tmp_DbTable (SystemId tinyint NULL, TableId int NULL, ModifiedBy int NULL, TableDesc nvarchar(100) NULL, VirtualSql nvarchar(max) NULL, TblObjective nvarchar(500) NULL, ModifiedOn datetime NULL, LastSyncDt datetime NULL, MultiDesignDb char(1) NULL, VirtualTbl char(1) NULL, TableName varchar(500) NULL, PrevTblName varchar(20) NULL)') EXEC (' INSERT INTO dbo.Tmp_DbTable (SystemId, TableId, ModifiedBy, TableDesc, VirtualSql, TblObjective, ModifiedOn, LastSyncDt, MultiDesignDb, VirtualTbl, TableName, PrevTblName) SELECT convert(tinyint,SystemId), convert(int,TableId), convert(int,ModifiedBy), TableDesc, VirtualSql, TblObjective, ModifiedOn, LastSyncDt, MultiDesignDb, VirtualTbl, TableName, PrevTblName FROM dbo.DbTable IF (SELECT COUNT(1) FROM dbo.Tmp_DbTable) > 0 OR (SELECT COUNT(1) FROM dbo.DbTable) = 0 DROP TABLE dbo.DbTable') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.DbTable'')) CREATE TABLE dbo.DbTable (TableId Int IDENTITY NOT NULL, SystemId TinyInt NOT NULL, TableName VarChar(500) NOT NULL, TableDesc NVarChar(100) NOT NULL, MultiDesignDb Char(1) NOT NULL, VirtualTbl Char(1) NOT NULL, VirtualSql NVarChar(max) NULL, TblObjective NVarChar(500) NULL, PrevTblName VarChar(20) NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastSyncDt DateTime NULL, CONSTRAINT PK_DbTable PRIMARY KEY CLUSTERED (TableId))') EXEC (' ALTER TABLE dbo.DbTable ADD CONSTRAINT DF_DbTable_VirtualTbl DEFAULT (''N'') FOR VirtualTbl SET IDENTITY_INSERT dbo.DbTable ON INSERT INTO dbo.DbTable (TableId, SystemId, TableName, TableDesc, MultiDesignDb, VirtualTbl, VirtualSql, TblObjective, PrevTblName, ModifiedBy, ModifiedOn, LastSyncDt) SELECT TableId, SystemId, TableName, TableDesc, MultiDesignDb, VirtualTbl, VirtualSql, TblObjective, PrevTblName, ModifiedBy, ModifiedOn, LastSyncDt FROM dbo.Tmp_DbTable SET IDENTITY_INSERT dbo.DbTable OFF IF (SELECT COUNT(1) FROM dbo.DbTable) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_DbTable) = 0 DROP TABLE dbo.Tmp_DbTable ALTER TABLE dbo.DbColumn WITH NOCHECK ADD CONSTRAINT FK_DbColumn_DbTable FOREIGN KEY (TableId) REFERENCES dbo.DbTable (TableId) IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_DbTable'') CREATE UNIQUE NONCLUSTERED INDEX IU_DbTable ON dbo.DbTable(SystemId,TableName)')
  10.   1.51229~@~10~@~M~@~Change table ScreenObj~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObj (DisplayModeId tinyint NULL, GroupRowId smallint NULL, GroupColId smallint NULL, ColumnSize smallint NULL, ColumnHeight smallint NULL, TabIndex smallint NULL, SortOrder smallint NULL, ScreenObjId int NULL, ScreenId int NULL, ColumnId int NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, TabFolderId int NULL, DefaultValue nvarchar(200) NULL, HyperLinkUrl nvarchar(200) NULL, SystemValue nvarchar(200) NULL, MasterTable char(1) NULL, LabelVertical char(1) NULL, DefAfter char(1) NULL, DefAlways char(1) NULL, ColumnWrap char(1) NULL, GridGrpCd char(1) NULL, HideOnTablet char(1) NULL, HideOnMobile char(1) NULL, ColumnJustify char(1) NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, RequiredValid char(1) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL, IgnoreConfirm char(1) NULL, LabelCss varchar(1000) NULL, ContentCss varchar(1000) NULL, ColumnName varchar(50) NULL, ColumnDesc varchar(200) NULL, MaskValid varchar(100) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (DisplayModeId, GroupRowId, GroupColId, ColumnSize, ColumnHeight, TabIndex, SortOrder, ScreenObjId, ScreenId, ColumnId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, TabFolderId, DefaultValue, HyperLinkUrl, SystemValue, MasterTable, LabelVertical, DefAfter, DefAlways, ColumnWrap, GridGrpCd, HideOnTablet, HideOnMobile, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink) SELECT convert(tinyint,DisplayModeId), convert(smallint,GroupRowId), convert(smallint,GroupColId), convert(smallint,ColumnSize), convert(smallint,ColumnHeight), convert(smallint,TabIndex), convert(smallint,SortOrder), convert(int,ScreenObjId), convert(int,ScreenId), convert(int,ColumnId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), convert(int,TabFolderId), DefaultValue, HyperLinkUrl, SystemValue, MasterTable, LabelVertical, DefAfter, DefAlways, ColumnWrap, GridGrpCd, HideOnTablet, HideOnMobile, ColumnJustify, AggregateCd, GenerateSp, RequiredValid, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm, LabelCss, ContentCss, ColumnName, ColumnDesc, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObj'')) CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, NewGroupRow Char(1) NOT NULL, GroupRowId SmallInt NOT NULL, GroupColId SmallInt NOT NULL, LabelVertical Char(1) NOT NULL, LabelCss VarChar(1000) NULL, ContentCss VarChar(1000) NULL, ColumnId Int NULL, ColumnName VarChar(50) NOT NULL, ColumnDesc VarChar(200) NULL, DefaultValue NVarChar(200) NULL, HyperLinkUrl NVarChar(200) NULL, DefAfter Char(1) NOT NULL, SystemValue NVarChar(200) NULL, DefAlways Char(1) NOT NULL, ColumnWrap Char(1) NOT NULL, GridGrpCd Char(1) NOT NULL, HideOnTablet Char(1) NOT NULL, HideOnMobile Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ColumnHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NOT NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(100) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_NewGroupRow DEFAULT (''N'') FOR NewGroupRow ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GroupRowId DEFAULT (78) FOR GroupRowId ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_LabelVertical DEFAULT (''N'') FOR LabelVertical ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAfter DEFAULT (''N'') FOR DefAfter ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAlways DEFAULT (''N'') FOR DefAlways ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GridGrpCd DEFAULT (''N'') FOR GridGrpCd ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_HideOnTablet DEFAULT (''N'') FOR HideOnTablet ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_HideOnMobile DEFAULT (''N'') FOR HideOnMobile ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, NewGroupRow, GroupRowId, GroupColId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, HideOnTablet, HideOnMobile, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, ''N'', GroupRowId, GroupColId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, HideOnTablet, HideOnMobile, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj')
  10.   1.51229~@~20~@~M~@~Change table CtViewType~@~N~@~IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id('dbo.CtViewType'))
BEGIN
EXEC ('CREATE TABLE dbo.CtViewType (ViewTypeCd Char(1) NOT NULL, ViewTypeName NVarChar(30) NOT NULL, ViewTypeSort TinyInt NULL, CONSTRAINT PK_CtViewType PRIMARY KEY CLUSTERED (ViewTypeCd))')
EXEC ('INSERT dbo.CtViewType SELECT ''N'',''Not View Only'',10')
EXEC ('INSERT dbo.CtViewType SELECT ''Y'',''Everything View Only'',20')
EXEC ('INSERT dbo.CtViewType SELECT ''T'',''Tab-folder View Only'',30')
EXEC ('INSERT dbo.CtViewType SELECT ''G'',''Grid View Only'',40')
END

  10.   2.51231~@~10~@~M~@~Change table CtButtonHlp~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_CtButtonHlp (ButtonTypeId tinyint NULL, CultureId smallint NULL, ButtonHlpId int NULL, ButtonName nvarchar(20) NULL, ButtonToolTip nvarchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_CtButtonHlp (ButtonTypeId, CultureId, ButtonHlpId, ButtonName, ButtonToolTip) SELECT convert(tinyint,ButtonTypeId), convert(smallint,CultureId), convert(int,ButtonHlpId), ButtonName, ButtonToolTip FROM dbo.CtButtonHlp IF (SELECT COUNT(1) FROM dbo.Tmp_CtButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.CtButtonHlp) = 0 DROP TABLE dbo.CtButtonHlp') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtButtonHlp'')) CREATE TABLE dbo.CtButtonHlp (ButtonHlpId Int IDENTITY NOT NULL, CultureId SmallInt NOT NULL, ButtonTypeId TinyInt NOT NULL, ButtonName NVarChar(20) NOT NULL, ButtonToolTip NVarChar(100) NOT NULL, CONSTRAINT PK_CtButtonHlp PRIMARY KEY CLUSTERED (ButtonHlpId, CultureId))') EXEC (' SET IDENTITY_INSERT dbo.CtButtonHlp ON INSERT INTO dbo.CtButtonHlp (ButtonHlpId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip) SELECT ButtonHlpId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip FROM dbo.Tmp_CtButtonHlp SET IDENTITY_INSERT dbo.CtButtonHlp OFF IF (SELECT COUNT(1) FROM dbo.CtButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtButtonHlp) = 0 DROP TABLE dbo.Tmp_CtButtonHlp')
  10.   2.51231~@~20~@~M~@~Change table ClientRule~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_ClientRule (RuleTypeId tinyint NULL, CultureId smallint NULL, ClientScript smallint NULL, ClientRuleId int NULL, ScreenId int NULL, ReportId int NULL, ScreenObjHlpId int NULL, ScreenCriHlpId int NULL, ReportCriHlpId int NULL, RuleName nvarchar(100) NULL, RuleDesc nvarchar(150) NULL, RuleDescription nvarchar(500) NULL, UserScriptEvent varchar(50) NULL, UserScriptName varchar(500) NULL, ScriptParam varchar(300) NULL)') EXEC (' INSERT INTO dbo.Tmp_ClientRule (RuleTypeId, CultureId, ClientScript, ClientRuleId, ScreenId, ReportId, ScreenObjHlpId, ScreenCriHlpId, ReportCriHlpId, RuleName, RuleDesc, RuleDescription, UserScriptEvent, UserScriptName, ScriptParam) SELECT convert(tinyint,RuleTypeId), convert(smallint,CultureId), convert(smallint,ClientScript), convert(int,ClientRuleId), convert(int,ScreenId), convert(int,ReportId), convert(int,ScreenObjHlpId), convert(int,ScreenCriHlpId), convert(int,ReportCriHlpId), RuleName, RuleDesc, RuleDescription, UserScriptEvent, UserScriptName, ScriptParam FROM dbo.ClientRule IF (SELECT COUNT(1) FROM dbo.Tmp_ClientRule) > 0 OR (SELECT COUNT(1) FROM dbo.ClientRule) = 0 DROP TABLE dbo.ClientRule') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ClientRule'')) CREATE TABLE dbo.ClientRule (ClientRuleId Int IDENTITY NOT NULL, RuleTypeId TinyInt NOT NULL, RuleName NVarChar(100) NOT NULL, RuleDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, ScreenId Int NULL, ReportId Int NULL, CultureId SmallInt NOT NULL, ScreenObjHlpId Int NULL, ScreenCriHlpId Int NULL, ReportCriHlpId Int NULL, ClientScript SmallInt NULL, UserScriptEvent VarChar(50) NULL, UserScriptName VarChar(500) NULL, ScriptParam VarChar(300) NULL, ClientRuleProg NVarChar(max) NULL, CONSTRAINT PK_ClientRule PRIMARY KEY CLUSTERED (ClientRuleId, CultureId))') EXEC (' SET IDENTITY_INSERT dbo.ClientRule ON INSERT INTO dbo.ClientRule (ClientRuleId, RuleTypeId, RuleName, RuleDesc, RuleDescription, ScreenId, ReportId, CultureId, ScreenObjHlpId, ScreenCriHlpId, ReportCriHlpId, ClientScript, UserScriptEvent, UserScriptName, ScriptParam) SELECT ClientRuleId, RuleTypeId, RuleName, RuleDesc, RuleDescription, ScreenId, ReportId, CultureId, ScreenObjHlpId, ScreenCriHlpId, ReportCriHlpId, ClientScript, UserScriptEvent, UserScriptName, ScriptParam FROM dbo.Tmp_ClientRule SET IDENTITY_INSERT dbo.ClientRule OFF IF (SELECT COUNT(1) FROM dbo.ClientRule) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ClientRule) = 0 DROP TABLE dbo.Tmp_ClientRule')
  10.   6.60113~@~10~@~M~@~Change table RuleTier~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_RuleTier (RuleTierId tinyint NULL, EntityId int NULL, RuleTierName nvarchar(50) NULL, LanguageCd char(1) NULL, FrameworkCd char(1) NULL, IsDefault char(1) NULL, DevProgramPath varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_RuleTier (RuleTierId, EntityId, RuleTierName, LanguageCd, FrameworkCd, IsDefault, DevProgramPath) SELECT convert(tinyint,RuleTierId), convert(int,EntityId), RuleTierName, LanguageCd, FrameworkCd, IsDefault, DevProgramPath FROM dbo.RuleTier IF (SELECT COUNT(1) FROM dbo.Tmp_RuleTier) > 0 OR (SELECT COUNT(1) FROM dbo.RuleTier) = 0 DROP TABLE dbo.RuleTier') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.RuleTier'')) CREATE TABLE dbo.RuleTier (RuleTierId TinyInt IDENTITY NOT NULL, RuleTierName NVarChar(50) NOT NULL, EntityId Int NOT NULL, LanguageCd Char(1) NOT NULL, FrameworkCd Char(1) NOT NULL, DevProgramPath VarChar(100) NOT NULL, IsDefault Char(1) NOT NULL, CONSTRAINT PK_RuleTier PRIMARY KEY CLUSTERED (RuleTierId))') EXEC (' SET IDENTITY_INSERT dbo.RuleTier ON INSERT INTO dbo.RuleTier (RuleTierId, RuleTierName, EntityId, LanguageCd, FrameworkCd, DevProgramPath, IsDefault) SELECT RuleTierId, RuleTierName, EntityId, LanguageCd, FrameworkCd, DevProgramPath, IsDefault FROM dbo.Tmp_RuleTier SET IDENTITY_INSERT dbo.RuleTier OFF IF (SELECT COUNT(1) FROM dbo.RuleTier) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_RuleTier) = 0 DROP TABLE dbo.Tmp_RuleTier')
  10.   6.60113~@~20~@~M~@~Change table ClientTier~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_ClientTier (ClientTierId tinyint NULL, EntityId int NULL, ClientTierName nvarchar(50) NULL, LanguageCd char(1) NULL, FrameworkCd char(1) NULL, CombineAsm char(1) NULL, IsDefault char(1) NULL, DevProgramPath varchar(100) NULL, WsProgramPath varchar(100) NULL, XlsProgramPath varchar(100) NULL, DevCompilePath varchar(100) NULL, WsCompilePath varchar(100) NULL, XlsCompilePath varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_ClientTier (ClientTierId, EntityId, ClientTierName, LanguageCd, FrameworkCd, CombineAsm, IsDefault, DevProgramPath, WsProgramPath, XlsProgramPath, DevCompilePath, WsCompilePath, XlsCompilePath) SELECT convert(tinyint,ClientTierId), convert(int,EntityId), ClientTierName, LanguageCd, FrameworkCd, CombineAsm, IsDefault, DevProgramPath, WsProgramPath, XlsProgramPath, DevCompilePath, WsCompilePath, XlsCompilePath FROM dbo.ClientTier IF (SELECT COUNT(1) FROM dbo.Tmp_ClientTier) > 0 OR (SELECT COUNT(1) FROM dbo.ClientTier) = 0 DROP TABLE dbo.ClientTier') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ClientTier'')) CREATE TABLE dbo.ClientTier (ClientTierId TinyInt IDENTITY NOT NULL, ClientTierName NVarChar(50) NOT NULL, EntityId Int NOT NULL, LanguageCd Char(1) NOT NULL, FrameworkCd Char(1) NOT NULL, DevProgramPath VarChar(100) NOT NULL, WsProgramPath VarChar(100) NULL, XlsProgramPath VarChar(100) NULL, DevCompilePath VarChar(100) NULL, WsCompilePath VarChar(100) NULL, XlsCompilePath VarChar(100) NULL, CombineAsm Char(1) NOT NULL, IsDefault Char(1) NOT NULL, CONSTRAINT PK_ClientTier PRIMARY KEY CLUSTERED (ClientTierId))') EXEC (' ALTER TABLE dbo.ClientTier ADD CONSTRAINT DF_ClientTier_CombineAsm DEFAULT (''N'') FOR CombineAsm SET IDENTITY_INSERT dbo.ClientTier ON INSERT INTO dbo.ClientTier (ClientTierId, ClientTierName, EntityId, LanguageCd, FrameworkCd, DevProgramPath, WsProgramPath, XlsProgramPath, DevCompilePath, WsCompilePath, XlsCompilePath, CombineAsm, IsDefault) SELECT ClientTierId, ClientTierName, EntityId, LanguageCd, FrameworkCd, DevProgramPath, WsProgramPath, XlsProgramPath, DevCompilePath, WsCompilePath, XlsCompilePath, CombineAsm, IsDefault FROM dbo.Tmp_ClientTier SET IDENTITY_INSERT dbo.ClientTier OFF IF (SELECT COUNT(1) FROM dbo.ClientTier) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ClientTier) = 0 DROP TABLE dbo.Tmp_ClientTier')
  10.   6.60113~@~30~@~M~@~Change table DataTier~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_DataTier (DataTierId tinyint NULL, EntityId smallint NULL, DataTierName nvarchar(50) NULL, DbProviderCd char(1) NULL, IsDevelopment char(1) NULL, IsDefault char(1) NULL, ServerName varchar(20) NULL, DesServer varchar(20) NULL, DesDatabase varchar(20) NULL, DesUserId varchar(50) NULL, DesPassword varchar(50) NULL, PortBinPath varchar(100) NULL, InstBinPath varchar(100) NULL, ScriptPath varchar(100) NULL, DbDataPath varchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_DataTier (DataTierId, EntityId, DataTierName, DbProviderCd, IsDevelopment, IsDefault, ServerName, DesServer, DesDatabase, DesUserId, DesPassword, PortBinPath, InstBinPath, ScriptPath, DbDataPath) SELECT convert(tinyint,DataTierId), convert(smallint,EntityId), DataTierName, DbProviderCd, IsDevelopment, IsDefault, ServerName, DesServer, DesDatabase, DesUserId, DesPassword, PortBinPath, InstBinPath, ScriptPath, DbDataPath FROM dbo.DataTier IF (SELECT COUNT(1) FROM dbo.Tmp_DataTier) > 0 OR (SELECT COUNT(1) FROM dbo.DataTier) = 0 DROP TABLE dbo.DataTier') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.DataTier'')) CREATE TABLE dbo.DataTier (DataTierId TinyInt IDENTITY NOT NULL, DataTierName NVarChar(50) NOT NULL, EntityId Int NOT NULL, DbProviderCd Char(1) NOT NULL, ServerName VarChar(20) NOT NULL, DesServer VarChar(20) NOT NULL, DesDatabase VarChar(20) NOT NULL, DesUserId VarChar(50) NOT NULL, DesPassword VarChar(50) NOT NULL, PortBinPath VarChar(100) NOT NULL, InstBinPath VarChar(100) NOT NULL, ScriptPath VarChar(100) NOT NULL, DbDataPath VarChar(100) NOT NULL, IsDevelopment Char(1) NOT NULL, IsDefault Char(1) NOT NULL, CONSTRAINT PK_DataTier PRIMARY KEY CLUSTERED (DataTierId))') EXEC (' SET IDENTITY_INSERT dbo.DataTier ON INSERT INTO dbo.DataTier (DataTierId, DataTierName, EntityId, DbProviderCd, ServerName, DesServer, DesDatabase, DesUserId, DesPassword, PortBinPath, InstBinPath, ScriptPath, DbDataPath, IsDevelopment, IsDefault) SELECT DataTierId, DataTierName, CONVERT(Int,EntityId), DbProviderCd, ServerName, DesServer, DesDatabase, DesUserId, DesPassword, PortBinPath, InstBinPath, ScriptPath, DbDataPath, IsDevelopment, IsDefault FROM dbo.Tmp_DataTier SET IDENTITY_INSERT dbo.DataTier OFF IF (SELECT COUNT(1) FROM dbo.DataTier) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_DataTier) = 0 DROP TABLE dbo.Tmp_DataTier')
  10.  12.60213~@~10~@~M~@~Change table AppItem~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_AppItem (ItemOrder smallint NULL, AppItemId int NULL, AppInfoId int NULL, ScreenId int NULL, ReportId int NULL, WizardId int NULL, CustomId int NULL, AppItemCode nvarchar(max) NULL, ObjectTypeCd char(1) NULL, LanguageCd char(1) NULL, FrameworkCd char(1) NULL, DbProviderCd char(1) NULL, MultiDesignDb char(1) NULL, RemoveItem char(1) NULL, AppItemDesc varchar(200) NULL, RelativePath varchar(100) NULL, AppItemName varchar(50) NULL, AppItemLink varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_AppItem (ItemOrder, AppItemId, AppInfoId, ScreenId, ReportId, WizardId, CustomId, AppItemCode, ObjectTypeCd, LanguageCd, FrameworkCd, DbProviderCd, MultiDesignDb, RemoveItem, AppItemDesc, RelativePath, AppItemName, AppItemLink) SELECT convert(smallint,ItemOrder), convert(int,AppItemId), convert(int,AppInfoId), convert(int,ScreenId), convert(int,ReportId), convert(int,WizardId), convert(int,CustomId), AppItemCode, ObjectTypeCd, LanguageCd, FrameworkCd, DbProviderCd, MultiDesignDb, RemoveItem, AppItemDesc, RelativePath, AppItemName, AppItemLink FROM dbo.AppItem IF (SELECT COUNT(1) FROM dbo.Tmp_AppItem) > 0 OR (SELECT COUNT(1) FROM dbo.AppItem) = 0 DROP TABLE dbo.AppItem') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AppItem'')) CREATE TABLE dbo.AppItem (AppItemId Int IDENTITY NOT NULL, AppItemDesc VarChar(200) NULL, AppInfoId Int NOT NULL, ItemOrder SmallInt NULL, ObjectTypeCd Char(1) NOT NULL, LanguageCd Char(1) NULL, FrameworkCd Char(1) NULL, DbProviderCd Char(1) NULL, RelativePath VarChar(100) NULL, AppItemName VarChar(50) NOT NULL, MultiDesignDb Char(1) NOT NULL, AppItemCode NVarChar(max) NULL, RemoveItem Char(1) NOT NULL, ScreenId Int NULL, ReportId Int NULL, WizardId Int NULL, CustomId Int NULL, AppItemLink VarChar(200) NULL, CONSTRAINT PK_AppItem PRIMARY KEY CLUSTERED (AppItemId))') EXEC (' SET IDENTITY_INSERT dbo.AppItem ON INSERT INTO dbo.AppItem (AppItemId, AppItemDesc, AppInfoId, ItemOrder, ObjectTypeCd, LanguageCd, FrameworkCd, DbProviderCd, RelativePath, AppItemName, MultiDesignDb, AppItemCode, RemoveItem, ScreenId, ReportId, WizardId, CustomId, AppItemLink) SELECT AppItemId, AppItemDesc, AppInfoId, ItemOrder, ObjectTypeCd, LanguageCd, FrameworkCd, DbProviderCd, RelativePath, AppItemName, MultiDesignDb, AppItemCode, RemoveItem, ScreenId, ReportId, WizardId, CustomId, AppItemLink FROM dbo.Tmp_AppItem SET IDENTITY_INSERT dbo.AppItem OFF IF (SELECT COUNT(1) FROM dbo.AppItem) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_AppItem) = 0 DROP TABLE dbo.Tmp_AppItem')
  10.  13.60306~@~10~@~M~@~Change table CtRuleCntType~@~N~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtRuleCntType'')) DROP TABLE dbo.CtRuleCntType')
EXEC ('CREATE TABLE dbo.CtRuleCntType (RuleCntTypeId TinyInt NOT NULL, RuleCntTypeName NVarChar(50) NOT NULL, RuleCntTypeEvent VarChar(20) NOT NULL, RuleCntTypeDesc NVarChar(1000) NOT NULL, CONSTRAINT PK_CtRuleCntType PRIMARY KEY CLUSTERED (RuleCntTypeId))')
EXEC ('INSERT dbo.CtRuleCntType SELECT 1,''CSS'',''css'',''Embed the following inline CSS on page load.''')
EXEC ('INSERT dbo.CtRuleCntType SELECT 2,''JavaScript'',''js'',''Embed the following JavaScript on page load.''')
EXEC ('INSERT dbo.CtRuleCntType SELECT 3,''CSS Link'',''css_link'',''Include the following CSS library URL on page load.''')
EXEC ('INSERT dbo.CtRuleCntType SELECT 4,''JavaScript Link'',''js_link'',''Include the following JavaScript library URL on page load.''')

  10.  13.60306~@~20~@~M~@~Change table CtRuleMethod~@~N~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtRuleMethod'')) DROP TABLE dbo.CtRuleMethod')
EXEC ('CREATE TABLE dbo.CtRuleMethod (RuleMethodId TinyInt NOT NULL, RuleMethodName NVarChar(50) NOT NULL, RuleMethodDesc NVarChar(1000) NOT NULL, CONSTRAINT PK_CtRuleMethod PRIMARY KEY CLUSTERED (RuleMethodId))')
EXEC ('INSERT dbo.CtRuleMethod SELECT 1,''Embedded CSS/JS'',''Embed CSS or JavaScript on page load.''')
EXEC ('INSERT dbo.CtRuleMethod SELECT 2,''Screen Column Stock Script'',''Execute a predefined JavaScript function on a specified screen column.''')
EXEC ('INSERT dbo.CtRuleMethod SELECT 3,''Screen Column Event Override'',''Override a default JavaScript event with speific JavaScript content on a specified screen column.''')
EXEC ('INSERT dbo.CtRuleMethod SELECT 4,''Screen Criteria Stock Script'',''Execute a predefined JavaScript function on a specified screen criteria.''')
EXEC ('INSERT dbo.CtRuleMethod SELECT 5,''Screen Criteria Event Override'',''Override a default JavaScript event with speific JavaScript content on a specified screen criteria.''')
EXEC ('INSERT dbo.CtRuleMethod SELECT 6,''Report Criteria Stock Script'',''Execute a predefined JavaScript function on a specified report criteria.''')
EXEC ('INSERT dbo.CtRuleMethod SELECT 7,''Report Criteria Event Override'',''Override a default JavaScript event with speific JavaScript content on a specified report criteria.''')

  10.  13.60306~@~30~@~M~@~Change table ClientRule~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_ClientRule (RuleTypeId tinyint NULL, CultureId smallint NULL, ClientScript smallint NULL, ClientRuleId int NULL, ScreenId int NULL, ReportId int NULL, ScreenObjHlpId int NULL, ScreenCriHlpId int NULL, ReportCriHlpId int NULL, RuleName nvarchar(100) NULL, RuleDesc nvarchar(150) NULL, RuleDescription nvarchar(500) NULL, ClientRuleProg nvarchar(max) NULL, UserScriptEvent varchar(50) NULL, UserScriptName varchar(500) NULL, ScriptParam varchar(300) NULL)') EXEC (' INSERT INTO dbo.Tmp_ClientRule (RuleTypeId, CultureId, ClientScript, ClientRuleId, ScreenId, ReportId, ScreenObjHlpId, ScreenCriHlpId, ReportCriHlpId, RuleName, RuleDesc, RuleDescription, ClientRuleProg, UserScriptEvent, UserScriptName, ScriptParam) SELECT convert(tinyint,RuleTypeId), convert(smallint,CultureId), convert(smallint,ClientScript), convert(int,ClientRuleId), convert(int,ScreenId), convert(int,ReportId), convert(int,ScreenObjHlpId), convert(int,ScreenCriHlpId), convert(int,ReportCriHlpId), RuleName, RuleDesc, RuleDescription, ClientRuleProg, UserScriptEvent, UserScriptName, ScriptParam FROM dbo.ClientRule IF (SELECT COUNT(1) FROM dbo.Tmp_ClientRule) > 0 OR (SELECT COUNT(1) FROM dbo.ClientRule) = 0 DROP TABLE dbo.ClientRule') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ClientRule'')) CREATE TABLE dbo.ClientRule (ClientRuleId Int IDENTITY NOT NULL, RuleTypeId TinyInt NOT NULL, RuleName NVarChar(100) NOT NULL, RuleDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, RuleMethodId TinyInt NOT NULL, ScreenId Int NULL, ReportId Int NULL, CultureId SmallInt NOT NULL, ScreenObjHlpId Int NULL, ScreenCriHlpId Int NULL, ReportCriHlpId Int NULL, ClientScript SmallInt NULL, UserScriptEvent VarChar(50) NULL, UserScriptName NVarChar(1000) NULL, ScriptParam NVarChar(500) NULL, RuleCntTypeId TinyInt NULL, ClientRuleProg NVarChar(max) NULL, CONSTRAINT PK_ClientRule PRIMARY KEY CLUSTERED (ClientRuleId, CultureId))') EXEC (' ALTER TABLE dbo.ClientRule ADD CONSTRAINT DF_ClientRule_RuleMethodId DEFAULT (1) FOR RuleMethodId SET IDENTITY_INSERT dbo.ClientRule ON INSERT INTO dbo.ClientRule (ClientRuleId, RuleTypeId, RuleName, RuleDesc, RuleDescription, RuleMethodId, ScreenId, ReportId, CultureId, ScreenObjHlpId, ScreenCriHlpId, ReportCriHlpId, ClientScript, UserScriptEvent, UserScriptName, ScriptParam, ClientRuleProg) SELECT ClientRuleId, RuleTypeId, RuleName, RuleDesc, RuleDescription, 1, ScreenId, ReportId, CultureId, ScreenObjHlpId, ScreenCriHlpId, ReportCriHlpId, ClientScript, UserScriptEvent, CONVERT(NVarChar(1000),UserScriptName), CONVERT(NVarChar(500),ScriptParam), ClientRuleProg FROM dbo.Tmp_ClientRule SET IDENTITY_INSERT dbo.ClientRule OFF IF (SELECT COUNT(1) FROM dbo.ClientRule) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ClientRule) = 0 DROP TABLE dbo.Tmp_ClientRule')

EXEC ('UPDATE dbo.ClientRule SET RuleMethodId = 6 WHERE ReportCriHlpId is not null AND ClientScript is not null')
EXEC ('UPDATE dbo.ClientRule SET RuleMethodId = 7 WHERE ReportCriHlpId is not null AND ClientScript is null')
EXEC ('UPDATE dbo.ClientRule SET RuleMethodId = 4 WHERE ScreenCriHlpId is not null AND ClientScript is not null')
EXEC ('UPDATE dbo.ClientRule SET RuleMethodId = 5 WHERE ScreenCriHlpId is not null AND ClientScript is null')
EXEC ('UPDATE dbo.ClientRule SET RuleMethodId = 2 WHERE ScreenObjHlpId is not null AND ClientScript is not null')
EXEC ('UPDATE dbo.ClientRule SET RuleMethodId = 3 WHERE ScreenObjHlpId is not null AND ClientScript is null')

EXEC ('UPDATE dbo.ScreenObjHlp SET ScreenObjHlpDesc = b.ColumnDesc + '' ('' + c.CultureTypeName + '')''
	FROM dbo.ScreenObjHlp a
	INNER JOIN dbo.ScreenObj b ON a.ScreenObjId = b.ScreenObjId
	INNER JOIN [[?]]Design.dbo.VwCulture c ON a.CultureId = c.CultureId')
EXEC ('UPDATE dbo.ScreenCriHlp SET ScreenCriHlpDesc = b.ScreenCriDesc + '' ('' + c.CultureTypeName + '')''
	FROM dbo.ScreenCriHlp a
	INNER JOIN dbo.ScreenCri b ON a.ScreenCriId = b.ScreenCriId
	INNER JOIN [[?]]Design.dbo.VwCulture c ON a.CultureId = c.CultureId')
EXEC ('UPDATE dbo.ReportCriHlp SET ReportCriHlpDesc = b.ReportCriDesc + '' ('' + c.CultureTypeName + '')''
	FROM dbo.ReportCriHlp a
	INNER JOIN dbo.ReportCri b ON a.ReportCriId = b.ReportCriId
	INNER JOIN [[?]]Design.dbo.VwCulture c ON a.CultureId = c.CultureId')

  10.  16.60327~@~10~@~M~@~Remove redundant FK~@~Y~@~EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.FK_DbColumn_DbTable'')) ALTER TABLE dbo.DbColumn DROP CONSTRAINT FK_DbColumn_DbTable')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.FK_MenuHlp_Menu'')) ALTER TABLE dbo.MenuHlp DROP CONSTRAINT FK_MenuHlp_Menu')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.FK_MsgCenter_Msg'')) ALTER TABLE dbo.MsgCenter DROP CONSTRAINT FK_MsgCenter_Msg')
EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.FK_WizardObj_Wizard'')) ALTER TABLE dbo.WizardObj DROP CONSTRAINT FK_WizardObj_Wizard')

  10.  20.60608~@~30~@~M~@~Update message center~@~Y~@~EXEC ('UPDATE a SET a.MsgName = LEFT(''{'' + CONVERT(varchar(10),a.MsgId) + ''} '' + b.Msg,500) FROM dbo.Msg a INNER JOIN dbo.MsgCenter b ON a.MsgId = b.MsgId AND b.CultureId = 1')

  10.  20.60608~@~40~@~M~@~Change table Usr~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_Usr (DefSystemId tinyint NULL, FailedAttempt tinyint NULL, FailedAttemptFP tinyint NULL, HintQuestionId tinyint NULL, CultureId smallint NULL, PwdNoRepeat smallint NULL, PwdDuration smallint NULL, PwdWarn smallint NULL, UsrId int NULL, InvestorId int NULL, CustomerId int NULL, VendorId int NULL, AgentId int NULL, BrokerId int NULL, MemberId int NULL, DefProjectId int NULL, DefCompanyId int NULL, UsrPassword varbinary(32) NULL, ConfirmPwd varbinary(32) NULL, ExtPassword varbinary(255) NULL, PicMed varbinary(max) NULL, LoginName nvarchar(32) NULL, UsrEmail nvarchar(50) NULL, UsrName nvarchar(50) NULL, HintAnswer nvarchar(50) NULL, LastFailedDt datetime NULL, LastSuccessDt datetime NULL, LastPwdChgDt datetime NULL, ModifiedOn datetime NULL, InternalUsr char(1) NULL, TechnicalUsr char(1) NULL, Active char(1) NULL, IPAlert char(1) NULL, UsrGroupLs varchar(1000) NULL, CompanyLs varchar(1000) NULL, ProjectLs varchar(1000) NULL, UsrImprLink varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_Usr (DefSystemId, FailedAttempt, FailedAttemptFP, HintQuestionId, CultureId, PwdNoRepeat, PwdDuration, PwdWarn, UsrId, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefProjectId, DefCompanyId, UsrPassword, ConfirmPwd, ExtPassword, PicMed, LoginName, UsrEmail, UsrName, HintAnswer, LastFailedDt, LastSuccessDt, LastPwdChgDt, ModifiedOn, InternalUsr, TechnicalUsr, Active, IPAlert, UsrGroupLs, CompanyLs, ProjectLs, UsrImprLink) SELECT convert(tinyint,DefSystemId), convert(tinyint,FailedAttempt), convert(tinyint,FailedAttemptFP), convert(tinyint,HintQuestionId), convert(smallint,CultureId), convert(smallint,PwdNoRepeat), convert(smallint,PwdDuration), convert(smallint,PwdWarn), convert(int,UsrId), convert(int,InvestorId), convert(int,CustomerId), convert(int,VendorId), convert(int,AgentId), convert(int,BrokerId), convert(int,MemberId), convert(int,DefProjectId), convert(int,DefCompanyId), UsrPassword, ConfirmPwd, ExtPassword, PicMed, LoginName, UsrEmail, UsrName, HintAnswer, LastFailedDt, LastSuccessDt, LastPwdChgDt, ModifiedOn, InternalUsr, TechnicalUsr, Active, IPAlert, UsrGroupLs, CompanyLs, ProjectLs, UsrImprLink FROM dbo.Usr IF (SELECT COUNT(1) FROM dbo.Tmp_Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Usr) = 0 DROP TABLE dbo.Usr') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Usr'')) CREATE TABLE dbo.Usr (UsrId Int IDENTITY NOT NULL, LoginName NVarChar(32) NOT NULL, UsrEmail NVarChar(50) NULL, UsrName NVarChar(50) NULL, UsrPassword VarBinary(32) NULL, ConfirmPwd VarBinary(32) NULL, ExtPassword VarBinary(255) NULL, CultureId SmallInt NOT NULL, InternalUsr Char(1) NOT NULL, TechnicalUsr Char(1) NOT NULL, UsrGroupLs VarChar(1000) NOT NULL, CompanyLs VarChar(1000) NULL, ProjectLs VarChar(1000) NULL, InvestorId Int NULL, CustomerId Int NULL, VendorId Int NULL, AgentId Int NULL, BrokerId Int NULL, MemberId Int NULL, DefSystemId TinyInt NOT NULL, DefProjectId Int NULL, DefCompanyId Int NULL, FailedAttempt TinyInt NULL, FailedAttemptFP TinyInt NULL, LastFailedDt DateTime NULL, LastSuccessDt DateTime NULL, LastPwdChgDt DateTime NULL, HintQuestionId TinyInt NULL, HintAnswer NVarChar(50) NULL, Active Char(1) NOT NULL, ModifiedOn DateTime NOT NULL, UsrImprLink VarChar(200) NULL, IPAlert Char(1) NOT NULL, PwdNoRepeat SmallInt NOT NULL, PwdDuration SmallInt NOT NULL, PwdWarn SmallInt NOT NULL, PicMed VarBinary(max) NULL, OTPSecret VarChar(64) NULL, TwoFactorAuth Char(1) NOT NULL, CONSTRAINT PK_Usr PRIMARY KEY CLUSTERED (UsrId, CultureId))') EXEC (' ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_CultureId DEFAULT (1) FOR CultureId ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_InternalUsr DEFAULT (''N'') FOR InternalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_TechnicalUsr DEFAULT (''N'') FOR TechnicalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_IPAlert DEFAULT (''N'') FOR IPAlert ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdNoRepeat DEFAULT (1) FOR PwdNoRepeat ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdDuration DEFAULT (9999) FOR PwdDuration ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdWarn DEFAULT (0) FOR PwdWarn ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_TwoFactorAuth DEFAULT (''N'') FOR TwoFactorAuth SET IDENTITY_INSERT dbo.Usr ON INSERT INTO dbo.Usr (UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, IPAlert, PwdNoRepeat, PwdDuration, PwdWarn, PicMed, TwoFactorAuth) SELECT UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, IPAlert, PwdNoRepeat, PwdDuration, PwdWarn, PicMed, ''N'' FROM dbo.Tmp_Usr SET IDENTITY_INSERT dbo.Usr OFF IF (SELECT COUNT(1) FROM dbo.Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Usr) = 0 DROP TABLE dbo.Tmp_Usr IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_Usr'') CREATE UNIQUE NONCLUSTERED INDEX IU_Usr ON dbo.Usr(LoginName)')
  10.  20.60608~@~20~@~M~@~Change table Msg~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Msg (MsgId int NULL, MsgName nvarchar(200) NULL, MsgTypeCd char(1) NULL, MsgSource varchar(50) NULL)') EXEC (' INSERT INTO dbo.Tmp_Msg (MsgId, MsgName, MsgTypeCd, MsgSource) SELECT convert(int,MsgId), MsgName, MsgTypeCd, MsgSource FROM dbo.Msg IF (SELECT COUNT(1) FROM dbo.Tmp_Msg) > 0 OR (SELECT COUNT(1) FROM dbo.Msg) = 0 DROP TABLE dbo.Msg') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Msg'')) CREATE TABLE dbo.Msg (MsgId Int IDENTITY NOT NULL, MsgTypeCd Char(1) NOT NULL, MsgSource VarChar(50) NOT NULL, MsgName NVarChar(500) NOT NULL, CONSTRAINT PK_Msg PRIMARY KEY CLUSTERED (MsgId))') EXEC (' SET IDENTITY_INSERT dbo.Msg ON INSERT INTO dbo.Msg (MsgId, MsgTypeCd, MsgSource, MsgName) SELECT MsgId, MsgTypeCd, MsgSource, MsgName FROM dbo.Tmp_Msg SET IDENTITY_INSERT dbo.Msg OFF IF (SELECT COUNT(1) FROM dbo.Msg) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Msg) = 0 DROP TABLE dbo.Tmp_Msg')
  10.  20.60608~@~10~@~M~@~Create function to satisfy dependencies~@~N~@~EXEC ('IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(''dbo.SplitStrings_XML'') AND type=''IF'') DROP FUNCTION dbo.SplitStrings_XML')
EXEC ('CREATE FUNCTION [dbo].[SplitStrings_XML]
(
   @List       NVARCHAR(MAX),
   @Delimiter  NVARCHAR(255)
)
RETURNS TABLE
AS
   RETURN 
   (  
      SELECT Item = REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(y.i.value(''(./text())[1]'', ''nvarchar(4000)''),''&quot;'',''"''),''&apos;'',''''''''),''&lt;'',''<''),''&gt;'',''>''),''&amp;'',''&'')
		,Pos = ROW_NUMBER() OVER (ORDER BY (SELECT 1))
      FROM 
      ( 
        SELECT x = CONVERT(XML, 
			''<i>''
			+ 
			REPLACE(
			REPLACE(REPLACE(REPLACE(REPLACE( 
            REPLACE(@List,''"'',''&quot;''),'''''''',''&apos;''),''<'',''&lt;''),''>'',''&gt;''),''&'',''&amp;'')
            ,@Delimiter,''</i><i>'')
          + ''</i>'').query(''.'')
      ) AS a CROSS APPLY x.nodes(''i'') AS y(i)
   );
')
  10.  26.60726~@~10~@~M~@~Change table ColOvrd~@~Y~@~EXEC (' CREATE TABLE dbo.Tmp_ColOvrd (PermKeyId smallint NULL, Priority smallint NULL, ColOvrdId int NULL, ScreenObjId int NULL, ScreenId int NULL, PermId int NULL, ToolTip nvarchar(200) NULL, ColumnHeader nvarchar(50) NULL, ErrMessage nvarchar(300) NULL, ColVisible char(1) NULL, ColReadOnly char(1) NULL, ColExport char(1) NULL, ColOvrdDesc varchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_ColOvrd (PermKeyId, Priority, ColOvrdId, ScreenObjId, ScreenId, PermId, ToolTip, ColumnHeader, ErrMessage, ColVisible, ColReadOnly, ColExport, ColOvrdDesc) SELECT convert(smallint,PermKeyId), convert(smallint,Priority), convert(int,ColOvrdId), convert(int,ScreenObjId), convert(int,ScreenId), convert(int,PermId), ToolTip, ColumnHeader, ErrMessage, ColVisible, ColReadOnly, ColExport, ColOvrdDesc FROM dbo.ColOvrd IF (SELECT COUNT(1) FROM dbo.Tmp_ColOvrd) > 0 OR (SELECT COUNT(1) FROM dbo.ColOvrd) = 0 DROP TABLE dbo.ColOvrd') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ColOvrd'')) CREATE TABLE dbo.ColOvrd (ColOvrdId Int IDENTITY NOT NULL, ColOvrdDesc VarChar(200) NULL, ScreenObjId Int NOT NULL, ScreenId Int NULL, ColVisible Char(1) NOT NULL, ColReadOnly Char(1) NOT NULL, ColExport Char(1) NOT NULL, ToolTip NVarChar(200) NULL, ColumnHeader NVarChar(50) NULL, ErrMessage NVarChar(300) NULL, PermKeyId SmallInt NULL, PermId Int NULL, Priority SmallInt NULL, PermKeyRowId Int NULL, CONSTRAINT PK_ColOvrd PRIMARY KEY CLUSTERED (ColOvrdId))') EXEC (' SET IDENTITY_INSERT dbo.ColOvrd ON INSERT INTO dbo.ColOvrd (ColOvrdId, ColOvrdDesc, ScreenObjId, ScreenId, ColVisible, ColReadOnly, ColExport, ToolTip, ColumnHeader, ErrMessage, PermKeyId, PermId, Priority) SELECT ColOvrdId, ColOvrdDesc, ScreenObjId, ScreenId, ColVisible, ColReadOnly, ColExport, ToolTip, ColumnHeader, ErrMessage, PermKeyId, PermId, Priority FROM dbo.Tmp_ColOvrd SET IDENTITY_INSERT dbo.ColOvrd OFF IF (SELECT COUNT(1) FROM dbo.ColOvrd) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ColOvrd) = 0 DROP TABLE dbo.Tmp_ColOvrd')


  10.  26.60726~@~20~@~M~@~Post ColOvrd change script~@~Y~@~EXEC ('UPDATE ScreenObj SET RequiredValid = ''N'' WHERE DisplayModeId in (4,21)')
EXEC ('UPDATE ScreenCri SET RequiredValid = ''N'' WHERE DisplayModeId in (4,21)')
EXEC ('UPDATE ReportCri SET RequiredValid = ''N'' WHERE DisplayModeId in (4,21)')


  10.  26.60726~@~30~@~M~@~Post ColOvrd change script - map PermKeyRowId~@~Y~@~/* can't be done here, as VwPermKeyRow is not created YET for existing installation 
EXEC ('update c set PermKeyRowId = p.PermKeyRowId from dbo.ColOvrd c inner join [[?]]Design.dbo.VwPermKeyRow p on c.PermId = p.PermId and c.PermKeyId = p.PermKeyId WHERE c.PermKeyRowId IS NULL')
*/

  10.  31.61014~@~10~@~M~@~Remove redundancies from all D's except Design DB~@~Y~@~EXEC ('IF DB_NAME()<>''[[?]]Design'' AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(''dbo.BreakString'') AND type=''TF'') DROP FUNCTION dbo.BreakString')
EXEC ('IF DB_NAME()<>''[[?]]Design'' AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(''dbo.SplitID_Match'') AND type=''IF'') DROP FUNCTION dbo.SplitID_Match')
EXEC ('IF DB_NAME()<>''[[?]]Design'' AND EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(''dbo.SplitStrings_XML'') AND type=''IF'') DROP FUNCTION dbo.SplitStrings_XML')

  10.  32.61030~@~10~@~M~@~Change table Systems 1 of 2~@~N~@~EXEC ('CREATE TABLE dbo.Tmp_Systems (SystemId tinyint NULL, SystemName nvarchar(50) NULL, ServerName varchar(50) NULL, dbAppProvider varchar(50) NULL, dbAppServer varchar(50) NULL, dbAppDatabase varchar(50) NULL, dbDesDatabase varchar(50) NULL, dbAppUserId varchar(50) NULL, dbAppPassword varchar(50) NULL, dbX01Provider varchar(50) NULL, dbX01Server varchar(50) NULL, dbX01Database varchar(50) NULL, dbX01UserId varchar(50) NULL, dbX01Password varchar(50) NULL, dbX01Extra varchar(200) NULL, SysProgram char(1) NULL, AdminEmail nvarchar(50) NULL, AdminPhone varchar(20) NULL, CustServEmail nvarchar(50) NULL, CustServPhone varchar(20) NULL, CustServFax varchar(20) NULL, WebAddress varchar(50) NULL)') EXEC (' INSERT INTO dbo.Tmp_Systems (SystemId, SystemName, ServerName, dbAppProvider, dbAppServer, dbAppDatabase, dbDesDatabase, dbAppUserId, dbAppPassword, dbX01Provider, dbX01Server, dbX01Database, dbX01UserId, dbX01Password, dbX01Extra, SysProgram, AdminEmail, AdminPhone, CustServEmail, CustServPhone, CustServFax, WebAddress) SELECT convert(tinyint,SystemId), SystemName, ServerName, dbAppProvider, dbAppServer, dbAppDatabase, dbDesDatabase, dbAppUserId, dbAppPassword, dbX01Provider, dbX01Server, dbX01Database, dbX01UserId, dbX01Password, dbX01Extra, SysProgram, AdminEmail, AdminPhone, CustServEmail, CustServPhone, CustServFax, WebAddress FROM dbo.Systems IF (SELECT COUNT(1) FROM dbo.Tmp_Systems) > 0 OR (SELECT COUNT(1) FROM dbo.Systems) = 0 DROP TABLE dbo.Systems') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Systems'')) CREATE TABLE dbo.Systems (SystemId TinyInt NOT NULL, SystemName NVarChar(50) NOT NULL, ServerName VarChar(50) NOT NULL, dbAppProvider VarChar(50) NOT NULL, dbAppServer VarChar(50) NOT NULL, dbAppDatabase VarChar(50) NOT NULL, dbDesDatabase VarChar(50) NOT NULL, dbAppUserId VarChar(50) NOT NULL, dbAppPassword VarChar(50) NOT NULL, dbX01Provider VarChar(50) NULL, dbX01Server VarChar(50) NULL, dbX01Database VarChar(50) NULL, dbX01UserId VarChar(50) NULL, dbX01Password VarChar(50) NULL, dbX01Extra VarChar(200) NULL, SysProgram Char(1) NOT NULL, AdminEmail NVarChar(50) NULL, AdminPhone VarChar(20) NULL, CustServEmail NVarChar(50) NULL, CustServPhone VarChar(20) NULL, CustServFax VarChar(20) NULL, WebAddress VarChar(50) NULL, Active Char(1) NOT NULL, CONSTRAINT PK_Systems PRIMARY KEY CLUSTERED (SystemId))') EXEC (' ALTER TABLE dbo.Systems ADD CONSTRAINT DF_Systems_Active DEFAULT (''Y'') FOR Active INSERT INTO dbo.Systems (SystemId, SystemName, ServerName, dbAppProvider, dbAppServer, dbAppDatabase, dbDesDatabase, dbAppUserId, dbAppPassword, dbX01Provider, dbX01Server, dbX01Database, dbX01UserId, dbX01Password, dbX01Extra, SysProgram, AdminEmail, AdminPhone, CustServEmail, CustServPhone, CustServFax, WebAddress, Active) SELECT SystemId, SystemName, ServerName, dbAppProvider, dbAppServer, dbAppDatabase, dbDesDatabase, dbAppUserId, dbAppPassword, dbX01Provider, dbX01Server, dbX01Database, dbX01UserId, dbX01Password, dbX01Extra, SysProgram, AdminEmail, AdminPhone, CustServEmail, CustServPhone, CustServFax, WebAddress, ''Y'' FROM dbo.Tmp_Systems IF (SELECT COUNT(1) FROM dbo.Systems) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Systems) = 0 DROP TABLE dbo.Tmp_Systems')

EXEC ('IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.GetCustService'')) DROP PROCEDURE dbo.GetCustService')
  10.  32.61030~@~20~@~M~@~Change table Systems 2 of 2~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_Systems (SystemId tinyint NULL, SystemName nvarchar(50) NULL, ServerName varchar(50) NULL, dbAppProvider varchar(50) NULL, dbAppServer varchar(50) NULL, dbAppDatabase varchar(50) NULL, dbDesDatabase varchar(50) NULL, dbAppUserId varchar(50) NULL, dbAppPassword varchar(50) NULL, dbX01Provider varchar(50) NULL, dbX01Server varchar(50) NULL, dbX01Database varchar(50) NULL, dbX01UserId varchar(50) NULL, dbX01Password varchar(50) NULL, dbX01Extra varchar(200) NULL, SysProgram char(1) NULL, AdminEmail nvarchar(50) NULL, AdminPhone varchar(20) NULL, CustServEmail nvarchar(50) NULL, CustServPhone varchar(20) NULL, CustServFax varchar(20) NULL, WebAddress varchar(50) NULL, Active char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Systems (SystemId, SystemName, ServerName, dbAppProvider, dbAppServer, dbAppDatabase, dbDesDatabase, dbAppUserId, dbAppPassword, dbX01Provider, dbX01Server, dbX01Database, dbX01UserId, dbX01Password, dbX01Extra, SysProgram, AdminEmail, AdminPhone, CustServEmail, CustServPhone, CustServFax, WebAddress, Active) SELECT convert(tinyint,SystemId), SystemName, ServerName, dbAppProvider, dbAppServer, dbAppDatabase, dbDesDatabase, dbAppUserId, dbAppPassword, dbX01Provider, dbX01Server, dbX01Database, dbX01UserId, dbX01Password, dbX01Extra, SysProgram, AdminEmail, AdminPhone, CustServEmail, CustServPhone, CustServFax, WebAddress, Active FROM dbo.Systems IF (SELECT COUNT(1) FROM dbo.Tmp_Systems) > 0 OR (SELECT COUNT(1) FROM dbo.Systems) = 0 DROP TABLE dbo.Systems') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Systems'')) CREATE TABLE dbo.Systems (SystemId TinyInt NOT NULL, SystemName NVarChar(50) NOT NULL, ServerName VarChar(50) NOT NULL, dbAppProvider VarChar(50) NOT NULL, dbAppServer VarChar(50) NOT NULL, dbAppDatabase VarChar(50) NOT NULL, dbDesDatabase VarChar(50) NOT NULL, dbAppUserId VarChar(50) NOT NULL, dbAppPassword VarChar(50) NOT NULL, dbX01Provider VarChar(50) NULL, dbX01Server VarChar(50) NULL, dbX01Database VarChar(50) NULL, dbX01UserId VarChar(50) NULL, dbX01Password VarChar(50) NULL, dbX01Extra VarChar(200) NULL, SysProgram Char(1) NOT NULL, AdminEmail NVarChar(50) NOT NULL, AdminPhone VarChar(20) NULL, CustServEmail NVarChar(50) NOT NULL, CustServPhone VarChar(20) NULL, CustServFax VarChar(20) NULL, WebAddress VarChar(50) NULL, Active Char(1) NOT NULL, CONSTRAINT PK_Systems PRIMARY KEY CLUSTERED (SystemId))') EXEC (' ALTER TABLE dbo.Systems ADD CONSTRAINT DF_Systems_AdminEmail DEFAULT (''noreply@robocoder.com'') FOR AdminEmail ALTER TABLE dbo.Systems ADD CONSTRAINT DF_Systems_CustServEmail DEFAULT (''noreply@robocoder.com'') FOR CustServEmail ALTER TABLE dbo.Systems ADD CONSTRAINT DF_Systems_Active DEFAULT (''Y'') FOR Active INSERT INTO dbo.Systems (SystemId, SystemName, ServerName, dbAppProvider, dbAppServer, dbAppDatabase, dbDesDatabase, dbAppUserId, dbAppPassword, dbX01Provider, dbX01Server, dbX01Database, dbX01UserId, dbX01Password, dbX01Extra, SysProgram, AdminEmail, AdminPhone, CustServEmail, CustServPhone, CustServFax, WebAddress, Active) SELECT SystemId, SystemName, ServerName, dbAppProvider, dbAppServer, dbAppDatabase, dbDesDatabase, dbAppUserId, dbAppPassword, dbX01Provider, dbX01Server, dbX01Database, dbX01UserId, dbX01Password, dbX01Extra, SysProgram, CASE WHEN AdminEmail is null THEN ''noreply@gmail.com'' ELSE AdminEmail END, AdminPhone, CASE WHEN CustServEmail is null THEN ''noreply@gmail.com'' ELSE CustServEmail END, CustServPhone, CustServFax, WebAddress, Active FROM dbo.Tmp_Systems IF (SELECT COUNT(1) FROM dbo.Systems) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Systems) = 0 DROP TABLE dbo.Tmp_Systems')
  10.  35.61123~@~10~@~M~@~Make sure UsrGroup is up-to-date~@~N~@~EXEC ('DELETE FROM dbo.UsrGroup WHERE UsrGroupId < 10')
EXEC ('DELETE FROM dbo.UsrGroup WHERE lower(UsrGroupName) = ''anonymous''')
EXEC ('DELETE FROM dbo.UsrGroup WHERE lower(UsrGroupName) = ''default user''')
EXEC ('DELETE FROM dbo.UsrGroup WHERE lower(UsrGroupName) = ''reserved #3 (tbd)''')
EXEC ('DELETE FROM dbo.UsrGroup WHERE lower(UsrGroupName) = ''Guest''')
EXEC ('DELETE FROM dbo.UsrGroup WHERE lower(UsrGroupName) = ''sys administrator''')
EXEC ('DELETE FROM dbo.UsrGroup WHERE lower(UsrGroupName) = ''usr administrator''')
EXEC ('DELETE FROM dbo.UsrGroup WHERE lower(UsrGroupName) = ''rpt administrator''')
EXEC ('DELETE FROM dbo.UsrGroup WHERE lower(UsrGroupName) = ''reserved #8 (tbd)''')
EXEC ('DELETE FROM dbo.UsrGroup WHERE lower(UsrGroupName) = ''reserved #9 (tbd)''')
EXEC ('SET IDENTITY_INSERT dbo.UsrGroup ON INSERT dbo.UsrGroup (UsrGroupId,UsrGroupName,RowAuthorityId,CompanyId) SELECT 1,''Anonymous'',7,NULL SET IDENTITY_INSERT dbo.UsrGroup OFF')
EXEC ('SET IDENTITY_INSERT dbo.UsrGroup ON INSERT dbo.UsrGroup (UsrGroupId,UsrGroupName,RowAuthorityId,CompanyId) SELECT 2,''Default User'',6,NULL SET IDENTITY_INSERT dbo.UsrGroup OFF')
EXEC ('SET IDENTITY_INSERT dbo.UsrGroup ON INSERT dbo.UsrGroup (UsrGroupId,UsrGroupName,RowAuthorityId,CompanyId) SELECT 3,''Reserved #3 (TBD)'',7,NULL SET IDENTITY_INSERT dbo.UsrGroup OFF')
EXEC ('SET IDENTITY_INSERT dbo.UsrGroup ON INSERT dbo.UsrGroup (UsrGroupId,UsrGroupName,RowAuthorityId,CompanyId) SELECT 4,''Guest'',7,NULL SET IDENTITY_INSERT dbo.UsrGroup OFF')
EXEC ('SET IDENTITY_INSERT dbo.UsrGroup ON INSERT dbo.UsrGroup (UsrGroupId,UsrGroupName,RowAuthorityId,CompanyId) SELECT 5,''Sys Administrator'',8,NULL SET IDENTITY_INSERT dbo.UsrGroup OFF')
EXEC ('SET IDENTITY_INSERT dbo.UsrGroup ON INSERT dbo.UsrGroup (UsrGroupId,UsrGroupName,RowAuthorityId,CompanyId) SELECT 6,''Usr Administrator'',9,NULL SET IDENTITY_INSERT dbo.UsrGroup OFF')
EXEC ('SET IDENTITY_INSERT dbo.UsrGroup ON INSERT dbo.UsrGroup (UsrGroupId,UsrGroupName,RowAuthorityId,CompanyId) SELECT 7,''Rpt Administrator'',9,NULL SET IDENTITY_INSERT dbo.UsrGroup OFF')
EXEC ('SET IDENTITY_INSERT dbo.UsrGroup ON INSERT dbo.UsrGroup (UsrGroupId,UsrGroupName,RowAuthorityId,CompanyId) SELECT 8,''Reserved #8 (TBD)'',7,NULL SET IDENTITY_INSERT dbo.UsrGroup OFF')
EXEC ('SET IDENTITY_INSERT dbo.UsrGroup ON INSERT dbo.UsrGroup (UsrGroupId,UsrGroupName,RowAuthorityId,CompanyId) SELECT 9,''Reserved #9 (TBD)'',7,NULL SET IDENTITY_INSERT dbo.UsrGroup OFF')
  10.  37.61207~@~10~@~M~@~Change table ScrAudit~@~Y~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScrAudit'')) CREATE TABLE dbo.ScrAudit (ScrAuditId BigInt IDENTITY NOT NULL, CudAction Char(1) NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, TableId Int NOT NULL, RowId BigInt NOT NULL, RowDesc NVarChar(max) NOT NULL, ChangedBy Int NOT NULL, ChangedOn DateTime NOT NULL, CONSTRAINT PK_ScrAudit PRIMARY KEY CLUSTERED (ScrAuditId))') EXEC ('') EXEC ('') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IX_ScrAudit'') CREATE NONCLUSTERED INDEX IX_ScrAudit ON dbo.ScrAudit(ScreenId,ChangedOn)')
  10.  37.61207~@~20~@~M~@~Change table ScrAuditDtl~@~Y~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScrAuditDtl'')) CREATE TABLE dbo.ScrAuditDtl (ScrAuditDtlId BigInt IDENTITY NOT NULL, ScrAuditId BigInt NOT NULL, ScreenObjId Int NOT NULL, ScreenObjDesc NVarChar(max) NOT NULL, ColumnId Int NOT NULL, ColumnDesc NVarChar(max) NOT NULL, ChangedFr NVarChar(max) NULL, ChangedTo NVarChar(max) NULL, CONSTRAINT PK_ScrAuditDtl PRIMARY KEY CLUSTERED (ScrAuditDtlId))') EXEC ('') EXEC ('') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IX_ScrAuditDtl'') CREATE NONCLUSTERED INDEX IX_ScrAuditDtl ON dbo.ScrAuditDtl(ScrAuditId)')
  10.  37.61207~@~30~@~M~@~Change table Screen~@~Y~@~  EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId int NULL, SearchAscending char(1) NULL, GridRows tinyint NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ShowGridHead char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, AuthRequired char(1) NULL, ViewOnly char(1) NULL, NeedRegen char(1) NULL)') 
 EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchAscending, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, NeedRegen) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(int,SearchId), SearchAscending, convert(tinyint,GridRows), ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, NeedRegen FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') 
 EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchId Int NULL, SearchAscending Char(1) NOT NULL, GridRows TinyInt NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ShowGridHead Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, ViewOnly Char(1) NOT NULL, GenAudit Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') 
 EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ShowGridHead DEFAULT (''Y'') FOR ShowGridHead ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ViewOnly DEFAULT (''N'') FOR ViewOnly ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenAudit DEFAULT (''N'') FOR GenAudit ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchAscending, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchAscending, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, ''N'', NeedRegen FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen')

  10.  37.61207~@~40~@~M~@~Change table ServerRule~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_ServerRule (ServerRuleId int NULL, ScreenId int NULL, RuleTypeId tinyint NULL, MasterTable char(1) NULL, RuleName nvarchar(100) NULL, RuleDesc nvarchar(150) NULL, RuleDescription nvarchar(500) NULL, RuleOrder smallint NULL, ProcedureName varchar(50) NULL, ParameterNames varchar(max) NULL, ParameterTypes varchar(max) NULL, CallingParams varchar(max) NULL, OnAdd char(1) NULL, OnUpd char(1) NULL, OnDel char(1) NULL, BeforeCRUD char(1) NULL, RuleCode nvarchar(max) NULL, ModifiedBy int NULL, ModifiedOn datetime NULL, LastGenDt datetime NULL)')
EXEC ('INSERT INTO dbo.Tmp_ServerRule (ServerRuleId, ScreenId, RuleTypeId, MasterTable, RuleName, RuleDesc, RuleDescription, RuleOrder, ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, ModifiedBy, ModifiedOn, LastGenDt) SELECT convert(int,ServerRuleId), convert(int,ScreenId), convert(tinyint,RuleTypeId), MasterTable, RuleName, RuleDesc, RuleDescription, convert(smallint,RuleOrder), ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, convert(int,ModifiedBy), ModifiedOn, LastGenDt FROM dbo.ServerRule IF (SELECT COUNT(1) FROM dbo.Tmp_ServerRule) > 0 OR (SELECT COUNT(1) FROM dbo.ServerRule) = 0 DROP TABLE dbo.ServerRule')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ServerRule'')) CREATE TABLE dbo.ServerRule (ServerRuleId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, RuleTypeId TinyInt NOT NULL, MasterTable Char(1) NOT NULL, RuleName NVarChar(100) NOT NULL, RuleDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, RuleOrder SmallInt NOT NULL, ProcedureName VarChar(50) NOT NULL, ParameterNames VarChar(max) NULL, ParameterTypes VarChar(max) NULL, CallingParams VarChar(max) NULL, OnAdd Char(1) NOT NULL, OnUpd Char(1) NOT NULL, OnDel Char(1) NOT NULL, BeforeCRUD Char(1) NOT NULL, RuleCode NVarChar(max) NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastGenDt DateTime NULL, CONSTRAINT PK_ServerRule PRIMARY KEY CLUSTERED (ServerRuleId))')
EXEC ('SET IDENTITY_INSERT dbo.ServerRule ON INSERT INTO dbo.ServerRule (ServerRuleId, ScreenId, RuleTypeId, MasterTable, RuleName, RuleDesc, RuleDescription, RuleOrder, ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, ModifiedBy, ModifiedOn, LastGenDt) SELECT ServerRuleId, ScreenId, RuleTypeId, MasterTable, RuleName, RuleDesc, RuleDescription, RuleOrder, ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, ModifiedBy, ModifiedOn, LastGenDt FROM dbo.Tmp_ServerRule SET IDENTITY_INSERT dbo.ServerRule OFF IF (SELECT COUNT(1) FROM dbo.ServerRule) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ServerRule) = 0 DROP TABLE dbo.Tmp_ServerRule IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IX_ServerRule'') CREATE NONCLUSTERED INDEX IX_ServerRule ON dbo.ServerRule(ScreenId,RuleOrder)')

  10.  37.61207~@~50~@~M~@~Change table CtCudAction~@~N~@~EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtCudAction'')) CREATE TABLE dbo.CtCudAction (CudAction Char(1) NOT NULL, CudActionDesc NVarChar(20) NOT NULL, CONSTRAINT PK_CtCudAction PRIMARY KEY CLUSTERED (CudAction))')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.CtCudAction WHERE CudAction=''A'') INSERT dbo.CtCudAction SELECT ''A'',''ADD''')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.CtCudAction WHERE CudAction=''U'') INSERT dbo.CtCudAction SELECT ''U'',''UPD''')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.CtCudAction WHERE CudAction=''D'') INSERT dbo.CtCudAction SELECT ''D'',''DEL''')

  10.  37.61207~@~60~@~M~@~Add content to CtButtonType~@~N~@~IF NOT EXISTS (SELECT 1 FROM dbo.CtButtonType WHERE ButtonTypeId = 66)
BEGIN
	EXEC ('INSERT dbo.CtButtonType SELECT 66,''S'',''Audit'',''Screen Audit'',''N'',''N''')
	EXEC ('INSERT dbo.CtButtonHlp (CultureId,ButtonTypeId,ButtonName,ButtonToolTip) SELECT 1,66,''Audit'',''Press this to inspect historical changes and drill down to audit details.''')
END
  10.  37.61207~@~70~@~M~@~Update deployment configuration~@~N~@~EXEC ('UPDATE dbo.ReleaseDtl SET ObjectExempt = ObjectExempt + '' |ScrAudit |ScrAuditDtl'' WHERE CHARINDEX(''ScrAudit'',ObjectExempt) <= 0 AND CHARINDEX(''Usage'',ObjectExempt) > 0')

  10.  43.70127~@~10~@~M~@~Change table Menu~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Menu (MenuId int NULL, MenuIndex smallint NULL, Miscellaneous varchar(100) NULL, ParentId int NULL, ReportId int NULL, ScreenId int NULL, WizardId int NULL, StaticPgId int NULL, IconUrl nvarchar(300) NULL)') EXEC (' INSERT INTO dbo.Tmp_Menu (MenuId, MenuIndex, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl) SELECT convert(int,MenuId), convert(smallint,MenuIndex), Miscellaneous, convert(int,ParentId), convert(int,ReportId), convert(int,ScreenId), convert(int,WizardId), convert(int,StaticPgId), IconUrl FROM dbo.Menu IF (SELECT COUNT(1) FROM dbo.Tmp_Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Menu) = 0 DROP TABLE dbo.Menu') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Menu'')) CREATE TABLE dbo.Menu (MenuId Int IDENTITY NOT NULL, MenuIndex SmallInt NOT NULL, Miscellaneous VarChar(100) NULL, ParentId Int NULL, ReportId Int NULL, ScreenId Int NULL, WizardId Int NULL, StaticPgId Int NULL, IconUrl NVarChar(300) NULL, Popup Char(1) NOT NULL, CONSTRAINT PK_Menu PRIMARY KEY CLUSTERED (MenuId))') EXEC (' ALTER TABLE dbo.Menu ADD CONSTRAINT DF_Menu_Popup DEFAULT (''N'') FOR Popup SET IDENTITY_INSERT dbo.Menu ON INSERT INTO dbo.Menu (MenuId, MenuIndex, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl, Popup) SELECT MenuId, MenuIndex, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl, ''N'' FROM dbo.Tmp_Menu SET IDENTITY_INSERT dbo.Menu OFF IF (SELECT COUNT(1) FROM dbo.Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Menu) = 0 DROP TABLE dbo.Tmp_Menu')
  10.  44.70203~@~10~@~M~@~Change table LastEmail~@~N~@~EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.LastEmail'')) CREATE TABLE dbo.LastEmail (LastEmailDt DateTime NOT NULL, LastEmailCnt Int NOT NULL, CONSTRAINT PK_LastEmail PRIMARY KEY CLUSTERED (LastEmailDt))')

EXEC ('UPDATE dbo.ReleaseDtl SET ObjectExempt = REPLACE(ObjectExempt,''|Entity'',''|Entity |LastEmail'') WHERE CHARINDEX(''|LastEmail'',ObjectExempt) <= 0')

  10.  47.70210~@~10~@~M~@~Update deployment configuration~@~N~@~EXEC ('UPDATE dbo.ReleaseDtl SET ObjectExempt = ObjectExempt + '' |dashboards'' WHERE CHARINDEX(''dashboards'',ObjectExempt) <= 0 AND CHARINDEX(''.config'',ObjectExempt) > 0')

  10.  48.70303~@~10~@~M~@~Change table CtButtonHlp~@~N~@~EXEC (' CREATE TABLE dbo.Tmp_CtButtonHlp (ButtonHlpId int NULL, CultureId smallint NULL, ButtonTypeId tinyint NULL, ButtonName nvarchar(20) NULL, ButtonToolTip nvarchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_CtButtonHlp (ButtonHlpId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip) SELECT convert(int,ButtonHlpId), convert(smallint,CultureId), convert(tinyint,ButtonTypeId), ButtonName, ButtonToolTip FROM dbo.CtButtonHlp IF (SELECT COUNT(1) FROM dbo.Tmp_CtButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.CtButtonHlp) = 0 DROP TABLE dbo.CtButtonHlp') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtButtonHlp'')) CREATE TABLE dbo.CtButtonHlp (ButtonHlpId Int IDENTITY NOT NULL, CultureId SmallInt NOT NULL, ButtonTypeId TinyInt NOT NULL, ButtonName NVarChar(50) NOT NULL, ButtonToolTip NVarChar(100) NOT NULL, CONSTRAINT PK_CtButtonHlp PRIMARY KEY CLUSTERED (ButtonHlpId, CultureId))') EXEC (' SET IDENTITY_INSERT dbo.CtButtonHlp ON INSERT INTO dbo.CtButtonHlp (ButtonHlpId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip) SELECT ButtonHlpId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip FROM dbo.Tmp_CtButtonHlp SET IDENTITY_INSERT dbo.CtButtonHlp OFF IF (SELECT COUNT(1) FROM dbo.CtButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtButtonHlp) = 0 DROP TABLE dbo.Tmp_CtButtonHlp')
  10.  48.70303~@~20~@~M~@~Change table Menu~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Menu (MenuId int NULL, MenuIndex smallint NULL, Miscellaneous varchar(100) NULL, ParentId int NULL, ReportId int NULL, ScreenId int NULL, WizardId int NULL, StaticPgId int NULL, IconUrl nvarchar(300) NULL, Popup char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Menu (MenuId, MenuIndex, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl, Popup) SELECT convert(int,MenuId), convert(smallint,MenuIndex), Miscellaneous, convert(int,ParentId), convert(int,ReportId), convert(int,ScreenId), convert(int,WizardId), convert(int,StaticPgId), IconUrl, Popup FROM dbo.Menu IF (SELECT COUNT(1) FROM dbo.Tmp_Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Menu) = 0 DROP TABLE dbo.Menu') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Menu'')) CREATE TABLE dbo.Menu (MenuId Int IDENTITY NOT NULL, MenuIndex SmallInt NOT NULL, Miscellaneous VarChar(1000) NULL, ParentId Int NULL, ReportId Int NULL, ScreenId Int NULL, WizardId Int NULL, StaticPgId Int NULL, IconUrl NVarChar(300) NULL, Popup Char(1) NOT NULL, CONSTRAINT PK_Menu PRIMARY KEY CLUSTERED (MenuId))') EXEC (' ALTER TABLE dbo.Menu ADD CONSTRAINT DF_Menu_Popup DEFAULT (''N'') FOR Popup SET IDENTITY_INSERT dbo.Menu ON INSERT INTO dbo.Menu (MenuId, MenuIndex, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl, Popup) SELECT MenuId, MenuIndex, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl, Popup FROM dbo.Tmp_Menu SET IDENTITY_INSERT dbo.Menu OFF IF (SELECT COUNT(1) FROM dbo.Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Menu) = 0 DROP TABLE dbo.Tmp_Menu')
  10.  50.70327~@~10~@~M~@~Change table Systems~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_Systems (SystemId tinyint NULL, SystemName nvarchar(50) NULL, ServerName varchar(50) NULL, dbAppProvider varchar(50) NULL, dbAppServer varchar(50) NULL, dbAppDatabase varchar(50) NULL, dbDesDatabase varchar(50) NULL, dbAppUserId varchar(50) NULL, dbAppPassword varchar(50) NULL, dbX01Provider varchar(50) NULL, dbX01Server varchar(50) NULL, dbX01Database varchar(50) NULL, dbX01UserId varchar(50) NULL, dbX01Password varchar(50) NULL, dbX01Extra varchar(200) NULL, SysProgram char(1) NULL, AdminEmail nvarchar(50) NULL, AdminPhone varchar(20) NULL, CustServEmail nvarchar(50) NULL, CustServPhone varchar(20) NULL, CustServFax varchar(20) NULL, WebAddress varchar(50) NULL, Active char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Systems (SystemId, SystemName, ServerName, dbAppProvider, dbAppServer, dbAppDatabase, dbDesDatabase, dbAppUserId, dbAppPassword, dbX01Provider, dbX01Server, dbX01Database, dbX01UserId, dbX01Password, dbX01Extra, SysProgram, AdminEmail, AdminPhone, CustServEmail, CustServPhone, CustServFax, WebAddress, Active) SELECT convert(tinyint,SystemId), SystemName, ServerName, dbAppProvider, dbAppServer, dbAppDatabase, dbDesDatabase, dbAppUserId, dbAppPassword, dbX01Provider, dbX01Server, dbX01Database, dbX01UserId, dbX01Password, dbX01Extra, SysProgram, AdminEmail, AdminPhone, CustServEmail, CustServPhone, CustServFax, WebAddress, Active FROM dbo.Systems IF (SELECT COUNT(1) FROM dbo.Tmp_Systems) > 0 OR (SELECT COUNT(1) FROM dbo.Systems) = 0 DROP TABLE dbo.Systems') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Systems'')) CREATE TABLE dbo.Systems (SystemId TinyInt NOT NULL, SystemName NVarChar(50) NOT NULL, SystemAbbr VarChar(4) NOT NULL, ServerName VarChar(50) NOT NULL, dbAppProvider VarChar(50) NOT NULL, dbAppServer VarChar(50) NOT NULL, dbAppDatabase VarChar(50) NOT NULL, dbDesDatabase VarChar(50) NOT NULL, dbAppUserId VarChar(50) NOT NULL, dbAppPassword VarChar(50) NOT NULL, dbX01Provider VarChar(50) NULL, dbX01Server VarChar(50) NULL, dbX01Database VarChar(50) NULL, dbX01UserId VarChar(50) NULL, dbX01Password VarChar(50) NULL, dbX01Extra VarChar(200) NULL, SysProgram Char(1) NOT NULL, AdminEmail NVarChar(50) NOT NULL, AdminPhone VarChar(20) NULL, CustServEmail NVarChar(50) NOT NULL, CustServPhone VarChar(20) NULL, CustServFax VarChar(20) NULL, WebAddress VarChar(50) NULL, Active Char(1) NOT NULL, CONSTRAINT PK_Systems PRIMARY KEY CLUSTERED (SystemId))') EXEC (' ALTER TABLE dbo.Systems ADD CONSTRAINT DF_Systems_SystemAbbr DEFAULT (''Abc'') FOR SystemAbbr ALTER TABLE dbo.Systems ADD CONSTRAINT DF_Systems_AdminEmail DEFAULT (''noreply@gmail.com'') FOR AdminEmail ALTER TABLE dbo.Systems ADD CONSTRAINT DF_Systems_CustServEmail DEFAULT (''noreply@gmail.com'') FOR CustServEmail ALTER TABLE dbo.Systems ADD CONSTRAINT DF_Systems_Active DEFAULT (''Y'') FOR Active INSERT INTO dbo.Systems (SystemId, SystemName, SystemAbbr, ServerName, dbAppProvider, dbAppServer, dbAppDatabase, dbDesDatabase, dbAppUserId, dbAppPassword, dbX01Provider, dbX01Server, dbX01Database, dbX01UserId, dbX01Password, dbX01Extra, SysProgram, AdminEmail, AdminPhone, CustServEmail, CustServPhone, CustServFax, WebAddress, Active) SELECT SystemId, SystemName, ''Abc'', ServerName, dbAppProvider, dbAppServer, dbAppDatabase, dbDesDatabase, dbAppUserId, dbAppPassword, dbX01Provider, dbX01Server, dbX01Database, dbX01UserId, dbX01Password, dbX01Extra, SysProgram, AdminEmail, AdminPhone, CustServEmail, CustServPhone, CustServFax, WebAddress, Active FROM dbo.Tmp_Systems IF (SELECT COUNT(1) FROM dbo.Systems) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Systems) = 0 DROP TABLE dbo.Tmp_Systems')
  10.  52.70410~@~10~@~M~@~Change table Usr~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_Usr (UsrId int NULL, LoginName nvarchar(32) NULL, UsrEmail nvarchar(50) NULL, UsrName nvarchar(50) NULL, UsrPassword varbinary(32) NULL, ConfirmPwd varbinary(32) NULL, ExtPassword varbinary(255) NULL, CultureId smallint NULL, InternalUsr char(1) NULL, TechnicalUsr char(1) NULL, UsrGroupLs varchar(1000) NULL, CompanyLs varchar(1000) NULL, ProjectLs varchar(1000) NULL, InvestorId int NULL, CustomerId int NULL, VendorId int NULL, AgentId int NULL, BrokerId int NULL, MemberId int NULL, DefSystemId tinyint NULL, DefProjectId int NULL, DefCompanyId int NULL, FailedAttempt tinyint NULL, FailedAttemptFP tinyint NULL, LastFailedDt datetime NULL, LastSuccessDt datetime NULL, LastPwdChgDt datetime NULL, HintQuestionId tinyint NULL, HintAnswer nvarchar(50) NULL, Active char(1) NULL, ModifiedOn datetime NULL, UsrImprLink varchar(200) NULL, IPAlert char(1) NULL, PwdNoRepeat smallint NULL, PwdDuration smallint NULL, PwdWarn smallint NULL, PicMed varbinary(max) NULL, OTPSecret varchar(64) NULL, TwoFactorAuth char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Usr (UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, IPAlert, PwdNoRepeat, PwdDuration, PwdWarn, PicMed, OTPSecret, TwoFactorAuth) SELECT convert(int,UsrId), LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, convert(smallint,CultureId), InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, convert(int,InvestorId), convert(int,CustomerId), convert(int,VendorId), convert(int,AgentId), convert(int,BrokerId), convert(int,MemberId), convert(tinyint,DefSystemId), convert(int,DefProjectId), convert(int,DefCompanyId), convert(tinyint,FailedAttempt), convert(tinyint,FailedAttemptFP), LastFailedDt, LastSuccessDt, LastPwdChgDt, convert(tinyint,HintQuestionId), HintAnswer, Active, ModifiedOn, UsrImprLink, IPAlert, convert(smallint,PwdNoRepeat), convert(smallint,PwdDuration), convert(smallint,PwdWarn), PicMed, OTPSecret, TwoFactorAuth FROM dbo.Usr IF (SELECT COUNT(1) FROM dbo.Tmp_Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Usr) = 0 DROP TABLE dbo.Usr') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Usr'')) CREATE TABLE dbo.Usr (UsrId Int IDENTITY NOT NULL, LoginName NVarChar(32) NOT NULL, UsrEmail NVarChar(50) NULL, UsrMobile VarChar(50) NULL, UsrName NVarChar(50) NULL, UsrPassword VarBinary(32) NULL, ConfirmPwd VarBinary(32) NULL, ExtPassword VarBinary(255) NULL, CultureId SmallInt NOT NULL, InternalUsr Char(1) NOT NULL, TechnicalUsr Char(1) NOT NULL, UsrGroupLs VarChar(1000) NOT NULL, CompanyLs VarChar(1000) NULL, ProjectLs VarChar(1000) NULL, InvestorId Int NULL, CustomerId Int NULL, VendorId Int NULL, AgentId Int NULL, BrokerId Int NULL, MemberId Int NULL, DefSystemId TinyInt NOT NULL, DefProjectId Int NULL, DefCompanyId Int NULL, FailedAttempt TinyInt NULL, FailedAttemptFP TinyInt NULL, LastFailedDt DateTime NULL, LastSuccessDt DateTime NULL, LastPwdChgDt DateTime NULL, HintQuestionId TinyInt NULL, HintAnswer NVarChar(50) NULL, Active Char(1) NOT NULL, ModifiedOn DateTime NOT NULL, UsrImprLink VarChar(200) NULL, IPAlert Char(1) NOT NULL, PwdNoRepeat SmallInt NOT NULL, PwdDuration SmallInt NOT NULL, PwdWarn SmallInt NOT NULL, PicMed VarBinary(max) NULL, OTPSecret VarChar(64) NULL, TwoFactorAuth Char(1) NOT NULL, CONSTRAINT PK_Usr PRIMARY KEY CLUSTERED (UsrId, CultureId))') EXEC (' ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_CultureId DEFAULT (1) FOR CultureId ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_InternalUsr DEFAULT (''N'') FOR InternalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_TechnicalUsr DEFAULT (''N'') FOR TechnicalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_IPAlert DEFAULT (''N'') FOR IPAlert ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdNoRepeat DEFAULT (1) FOR PwdNoRepeat ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdDuration DEFAULT (9999) FOR PwdDuration ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdWarn DEFAULT (0) FOR PwdWarn ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_TwoFactorAuth DEFAULT (''N'') FOR TwoFactorAuth SET IDENTITY_INSERT dbo.Usr ON INSERT INTO dbo.Usr (UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, IPAlert, PwdNoRepeat, PwdDuration, PwdWarn, PicMed, OTPSecret, TwoFactorAuth) SELECT UsrId, LoginName, UsrEmail, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, IPAlert, PwdNoRepeat, PwdDuration, PwdWarn, PicMed, OTPSecret, TwoFactorAuth FROM dbo.Tmp_Usr SET IDENTITY_INSERT dbo.Usr OFF IF (SELECT COUNT(1) FROM dbo.Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Usr) = 0 DROP TABLE dbo.Tmp_Usr IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_Usr'') CREATE UNIQUE NONCLUSTERED INDEX IU_Usr ON dbo.Usr(LoginName)')
  10.  56.70510~@~10~@~M~@~Change table Screen 1 of 2~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchId int NULL, SearchAscending char(1) NULL, GridRows tinyint NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ShowGridHead char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, AuthRequired char(1) NULL, ViewOnly char(1) NULL, GenAudit char(1) NULL, NeedRegen char(1) NULL)')
EXEC ('INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchId, SearchAscending, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(int,SearchId), SearchAscending, convert(tinyint,GridRows), ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen')
EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchTableId Int NOT NULL, SearchId Int NOT NULL, SearchAscending Char(1) NOT NULL, SearchDtlId Int NULL, SearchUrlId int NULL, SearchImgId int NULL, GridRows TinyInt NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ShowGridHead Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, ViewOnly Char(1) NOT NULL, GenAudit Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))')
EXEC ('ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_SearchTableId DEFAULT (0) FOR SearchTableId ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_SearchId DEFAULT (0) FOR SearchId ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ShowGridHead DEFAULT (''Y'') FOR ShowGridHead ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ViewOnly DEFAULT (''N'') FOR ViewOnly ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenAudit DEFAULT (''N'') FOR GenAudit ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, 0, CASE WHEN SearchId is null THEN 0 ELSE SearchId END, SearchAscending, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen')

EXEC ('UPDATE dbo.Screen SET SearchTableId = MasterTableId WHERE SearchTableId = 0')
EXEC('UPDATE a SET SearchId = b.ColumnId
FROM dbo.Screen a INNER JOIN dbo.DbColumn b ON a.MasterTableId = b.TableId AND b.PrimaryKey = ''Y''
WHERE (a.SearchId is NULL OR a.SearchId = 0) AND a.ScreenTypeId IN (5,6)')

  10.  56.70510~@~20~@~M~@~Change table Screen 2 of 2~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchTableId int NULL, SearchId int NULL, SearchAscending char(1) NULL, SearchDtlId int NULL, SearchUrlId int NULL, SearchImgId int NULL, GridRows tinyint NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ShowGridHead char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, AuthRequired char(1) NULL, ViewOnly char(1) NULL, GenAudit char(1) NULL, NeedRegen char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchDtlId, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(int,SearchTableId), convert(int,SearchId), SearchAscending, convert(int,SearchDtlId), convert(int,SearchUrlId), convert(int,SearchImgId), convert(tinyint,GridRows), ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchTableId Int NOT NULL, SearchId Int NOT NULL, SearchAscending Char(1) NOT NULL, SearchDtlId Int NULL, SearchUrlId Int NULL, SearchImgId Int NULL, GridRows TinyInt NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ShowGridHead Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, ViewOnly Char(1) NOT NULL, GenAudit Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_SearchTableId DEFAULT (0) FOR SearchTableId ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_SearchId DEFAULT (0) FOR SearchId ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ShowGridHead DEFAULT (''Y'') FOR ShowGridHead ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ViewOnly DEFAULT (''N'') FOR ViewOnly ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenAudit DEFAULT (''N'') FOR GenAudit ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchDtlId, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchDtlId, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen')
  10.  60.70606~@~10~@~M~@~Change table Screen~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchTableId int NULL, SearchId int NULL, SearchAscending char(1) NULL, SearchDtlId int NULL, SearchUrlId int NULL, SearchImgId int NULL, GridRows tinyint NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ShowGridHead char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, AuthRequired char(1) NULL, ViewOnly char(1) NULL, GenAudit char(1) NULL, NeedRegen char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchDtlId, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(int,SearchTableId), convert(int,SearchId), SearchAscending, convert(int,SearchDtlId), convert(int,SearchUrlId), convert(int,SearchImgId), convert(tinyint,GridRows), ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchTableId Int NULL, SearchId Int NULL, SearchAscending Char(1) NOT NULL, SearchDtlId Int NULL, SearchUrlId Int NULL, SearchImgId Int NULL, GridRows TinyInt NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ShowGridHead Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, ViewOnly Char(1) NOT NULL, GenAudit Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ShowGridHead DEFAULT (''Y'') FOR ShowGridHead ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ViewOnly DEFAULT (''N'') FOR ViewOnly ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenAudit DEFAULT (''N'') FOR GenAudit ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchDtlId, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchDtlId, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen')

EXEC ('UPDATE Screen SET SearchTableId = NULL, SearchId = NULL where ScreenTypeId = 7')

  10.  67.80921~@~10~@~M~@~Change table CtButtonType~@~N~@~IF NOT EXISTS (SELECT 1 FROM dbo.CtButtonType WHERE ButtonTypeId >= 67)
BEGIN
EXEC ('CREATE TABLE dbo.Tmp_CtButtonType (ButtonTypeId tinyint NULL, ObjectType char(1) NULL, ButtonTypeName varchar(20) NULL, ButtonTypeDesc nvarchar(50) NULL, ButtonVisible char(1) NULL, ViewOnlyVisible char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_CtButtonType (ButtonTypeId, ObjectType, ButtonTypeName, ButtonTypeDesc, ButtonVisible, ViewOnlyVisible) SELECT convert(tinyint,ButtonTypeId), ObjectType, ButtonTypeName, ButtonTypeDesc, ButtonVisible, ViewOnlyVisible FROM dbo.CtButtonType IF (SELECT COUNT(1) FROM dbo.Tmp_CtButtonType) > 0 OR (SELECT COUNT(1) FROM dbo.CtButtonType) = 0 DROP TABLE dbo.CtButtonType') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtButtonType'')) CREATE TABLE dbo.CtButtonType (ButtonTypeId TinyInt NOT NULL, ObjectType Char(1) NOT NULL, ButtonTypeName VarChar(20) NOT NULL, ButtonTypeDesc NVarChar(50) NOT NULL, ButtonVisible Char(1) NOT NULL, ViewOnlyVisible Char(1) NOT NULL, TopVisible Char(1) NOT NULL, RowVisible Char(1) NOT NULL, BotVisible Char(1) NOT NULL, CONSTRAINT PK_CtButtonType PRIMARY KEY CLUSTERED (ButtonTypeId))') EXEC (' ALTER TABLE dbo.CtButtonType ADD CONSTRAINT DF_CtButtonType_ViewOnlyVisible DEFAULT (''Y'') FOR ViewOnlyVisible ALTER TABLE dbo.CtButtonType ADD CONSTRAINT DF_CtButtonType_TopVisible DEFAULT (''N'') FOR TopVisible ALTER TABLE dbo.CtButtonType ADD CONSTRAINT DF_CtButtonType_RowVisible DEFAULT (''N'') FOR RowVisible ALTER TABLE dbo.CtButtonType ADD CONSTRAINT DF_CtButtonType_BotVisible DEFAULT (''N'') FOR BotVisible INSERT INTO dbo.CtButtonType (ButtonTypeId, ObjectType, ButtonTypeName, ButtonTypeDesc, ButtonVisible, ViewOnlyVisible, TopVisible, RowVisible, BotVisible) SELECT ButtonTypeId, ObjectType, ButtonTypeName, ButtonTypeDesc, ButtonVisible, ViewOnlyVisible, ''N'', ''N'', ''N'' FROM dbo.Tmp_CtButtonType IF (SELECT COUNT(1) FROM dbo.CtButtonType) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtButtonType) = 0 DROP TABLE dbo.Tmp_CtButtonType')

EXEC ('UPDATE dbo.CtButtonType SET TopVisible = ''L'',RowVisible = ''L'',BotVisible = ''N'' WHERE ButtonVisible = ''Y''')
EXEC ('UPDATE dbo.CtButtonType SET TopVisible = ''B'',RowVisible = ''N'',BotVisible = ''B'' WHERE ButtonTypeName = ''InsRow''')
EXEC ('INSERT dbo.CtButtonType SELECT 67,''S'',''DelRow'',''Screen Delete Row'',''N'',''N'',''L'',''B'',''N''')
EXEC ('INSERT dbo.CtButtonType SELECT 68,''S'',''CopyRow'',''Screen Copy Row'',''N'',''N'',''L'',''L'',''N''')
EXEC ('INSERT dbo.CtButtonType SELECT 69,''S'',''EditRow'',''Screen Eidt Row'',''N'',''N'',''L'',''B'',''N''')
EXEC ('INSERT dbo.CtButtonType SELECT 70,''S'',''EditHdr'',''Screen Edit Header'',''N'',''N'',''L'',''B'',''N''')
EXEC ('INSERT dbo.CtButtonType SELECT 71,''S'',''DrillDown'',''Screen Drill Down'',''N'',''N'',''L'',''B'',''N''')
END
  10.  67.80921~@~20~@~M~@~Change table CtButtonHlp~@~N~@~IF NOT EXISTS (SELECT 1 FROM dbo.CtButtonHlp WHERE ButtonTypeId >= 67)
BEGIN
EXEC (' CREATE TABLE dbo.Tmp_CtButtonHlp (ButtonHlpId int NULL, CultureId smallint NULL, ButtonTypeId tinyint NULL, ButtonName nvarchar(50) NULL, ButtonToolTip nvarchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_CtButtonHlp (ButtonHlpId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip) SELECT convert(int,ButtonHlpId), convert(smallint,CultureId), convert(tinyint,ButtonTypeId), ButtonName, ButtonToolTip FROM dbo.CtButtonHlp IF (SELECT COUNT(1) FROM dbo.Tmp_CtButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.CtButtonHlp) = 0 DROP TABLE dbo.CtButtonHlp') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtButtonHlp'')) CREATE TABLE dbo.CtButtonHlp (ButtonHlpId Int IDENTITY NOT NULL, CultureId SmallInt NOT NULL, ButtonTypeId TinyInt NOT NULL, ButtonName NVarChar(50) NOT NULL, ButtonLongNm NVarChar(100) NOT NULL, ButtonToolTip NVarChar(200) NOT NULL, CONSTRAINT PK_CtButtonHlp PRIMARY KEY CLUSTERED (ButtonHlpId, CultureId))') EXEC (' ALTER TABLE dbo.CtButtonHlp ADD CONSTRAINT DF_CtButtonHlp_ButtonLongNm DEFAULT (''.'') FOR ButtonLongNm SET IDENTITY_INSERT dbo.CtButtonHlp ON INSERT INTO dbo.CtButtonHlp (ButtonHlpId, CultureId, ButtonTypeId, ButtonName, ButtonLongNm, ButtonToolTip) SELECT ButtonHlpId, CultureId, ButtonTypeId, ButtonName, ''.'', ButtonToolTip FROM dbo.Tmp_CtButtonHlp SET IDENTITY_INSERT dbo.CtButtonHlp OFF IF (SELECT COUNT(1) FROM dbo.CtButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtButtonHlp) = 0 DROP TABLE dbo.Tmp_CtButtonHlp')

EXEC ('UPDATE dbo.CtButtonHlp SET ButtonLongNm = ButtonName')
EXEC ('INSERT dbo.CtButtonHlp (CultureId,ButtonTypeId,ButtonName,ButtonLongNm,ButtonToolTip) SELECT 1,67,''Delete'',''Delete Row'',''Press this to delete selected row''')
EXEC ('INSERT dbo.CtButtonHlp (CultureId,ButtonTypeId,ButtonName,ButtonLongNm,ButtonToolTip) SELECT 1,68,''Copy'',''Copy Row'',''Press this to duplicate selected row''')
EXEC ('INSERT dbo.CtButtonHlp (CultureId,ButtonTypeId,ButtonName,ButtonLongNm,ButtonToolTip) SELECT 1,69,''Edit'',''Edit Row'',''Press this to view/edit selected row''')
EXEC ('INSERT dbo.CtButtonHlp (CultureId,ButtonTypeId,ButtonName,ButtonLongNm,ButtonToolTip) SELECT 1,70,''Edit'',''Edit Header'',''Press this to view/edit selected header record''')
EXEC ('INSERT dbo.CtButtonHlp (CultureId,ButtonTypeId,ButtonName,ButtonLongNm,ButtonToolTip) SELECT 1,71,''Drilldown'',''Detail List'',''Press this to drill down to detail list''')
END
  10.  67.80921~@~30~@~M~@~Change table ButtonHlp~@~Y~@~EXEC (' CREATE TABLE dbo.Tmp_ButtonHlp (ButtonHlpId int NULL, ScreenId int NULL, ReportId int NULL, WizardId int NULL, CultureId smallint NULL, ButtonTypeId tinyint NULL, ButtonName nvarchar(200) NULL, ButtonToolTip nvarchar(400) NULL, ButtonVisible char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_ButtonHlp (ButtonHlpId, ScreenId, ReportId, WizardId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip, ButtonVisible) SELECT convert(int,ButtonHlpId), convert(int,ScreenId), convert(int,ReportId), convert(int,WizardId), convert(smallint,CultureId), convert(tinyint,ButtonTypeId), ButtonName, ButtonToolTip, ButtonVisible FROM dbo.ButtonHlp IF (SELECT COUNT(1) FROM dbo.Tmp_ButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.ButtonHlp) = 0 DROP TABLE dbo.ButtonHlp') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ButtonHlp'')) CREATE TABLE dbo.ButtonHlp (ButtonHlpId Int IDENTITY NOT NULL, ScreenId Int NULL, ReportId Int NULL, WizardId Int NULL, CultureId SmallInt NOT NULL, ButtonTypeId TinyInt NOT NULL, ButtonName NVarChar(200) NULL, ButtonLongNm NVarChar(400) NULL, ButtonToolTip NVarChar(400) NULL, ButtonVisible Char(1) NOT NULL, TopVisible Char(1) NOT NULL, RowVisible Char(1) NOT NULL, BotVisible Char(1) NOT NULL, CONSTRAINT PK_ButtonHlp PRIMARY KEY CLUSTERED (ButtonHlpId, CultureId))') EXEC (' ALTER TABLE dbo.ButtonHlp ADD CONSTRAINT DF_ButtonHlp_TopVisible DEFAULT (''N'') FOR TopVisible ALTER TABLE dbo.ButtonHlp ADD CONSTRAINT DF_ButtonHlp_RowVisible DEFAULT (''N'') FOR RowVisible ALTER TABLE dbo.ButtonHlp ADD CONSTRAINT DF_ButtonHlp_BotVisible DEFAULT (''N'') FOR BotVisible SET IDENTITY_INSERT dbo.ButtonHlp ON INSERT INTO dbo.ButtonHlp (ButtonHlpId, ScreenId, ReportId, WizardId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip, ButtonVisible, TopVisible, RowVisible, BotVisible) SELECT ButtonHlpId, ScreenId, ReportId, WizardId, CultureId, ButtonTypeId, ButtonName, ButtonToolTip, ButtonVisible, ''N'', ''N'', ''N'' FROM dbo.Tmp_ButtonHlp SET IDENTITY_INSERT dbo.ButtonHlp OFF IF (SELECT COUNT(1) FROM dbo.ButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ButtonHlp) = 0 DROP TABLE dbo.Tmp_ButtonHlp')
  10.  67.80921~@~40~@~M~@~Add table CtButtonStyle~@~N~@~IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id('dbo.CtButtonStyle'))
BEGIN
EXEC ('CREATE TABLE dbo.CtButtonStyle (ButtonStyleCd Char(1) NOT NULL, ButtonStyleDesc NVarChar(100) NOT NULL, CONSTRAINT PK_CtButtonStyle PRIMARY KEY CLUSTERED (ButtonStyleCd))')
EXEC ('INSERT dbo.CtButtonStyle SELECT ''B'',''Display as a button''')
EXEC ('INSERT dbo.CtButtonStyle SELECT ''L'',''Display inside a list''')
EXEC ('INSERT dbo.CtButtonStyle SELECT ''N'',''Not displayed''')
END

  10.  69.81011~@~10~@~M~@~Change table Screen~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchTableId int NULL, SearchId int NULL, SearchAscending char(1) NULL, SearchDtlId int NULL, SearchUrlId int NULL, SearchImgId int NULL, GridRows tinyint NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ShowGridHead char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, AuthRequired char(1) NULL, ViewOnly char(1) NULL, GenAudit char(1) NULL, NeedRegen char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchDtlId, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(int,SearchTableId), convert(int,SearchId), SearchAscending, convert(int,SearchDtlId), convert(int,SearchUrlId), convert(int,SearchImgId), convert(tinyint,GridRows), ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchTableId Int NULL, SearchId Int NULL, SearchAscending Char(1) NOT NULL, SearchIdR Int NULL, SearchDtlId Int NULL, SearchDtlIdR Int NULL, SearchUrlId Int NULL, SearchImgId Int NULL, GridRows TinyInt NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ShowGridHead Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, ViewOnly Char(1) NOT NULL, GenAudit Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ShowGridHead DEFAULT (''Y'') FOR ShowGridHead ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ViewOnly DEFAULT (''N'') FOR ViewOnly ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenAudit DEFAULT (''N'') FOR GenAudit ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchDtlId, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchDtlId, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen')
  10.  70.81013~@~10~@~M~@~Change table ScreenObj~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_ScreenObj (ScreenObjId int NULL, ScreenId int NULL, MasterTable char(1) NULL, NewGroupRow char(1) NULL, GroupRowId smallint NULL, GroupColId smallint NULL, LabelVertical char(1) NULL, LabelCss varchar(1000) NULL, ContentCss varchar(1000) NULL, ColumnId int NULL, ColumnName varchar(50) NULL, ColumnDesc varchar(200) NULL, DefaultValue nvarchar(200) NULL, HyperLinkUrl nvarchar(200) NULL, DefAfter char(1) NULL, SystemValue nvarchar(200) NULL, DefAlways char(1) NULL, ColumnWrap char(1) NULL, GridGrpCd char(1) NULL, HideOnTablet char(1) NULL, HideOnMobile char(1) NULL, ColumnJustify char(1) NULL, ColumnSize smallint NULL, ColumnHeight smallint NULL, DisplayModeId tinyint NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, TabFolderId int NULL, TabIndex smallint NULL, SortOrder smallint NULL, RequiredValid char(1) NULL, MaskValid varchar(100) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL, IgnoreConfirm char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (ScreenObjId, ScreenId, MasterTable, NewGroupRow, GroupRowId, GroupColId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, HideOnTablet, HideOnMobile, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT convert(int,ScreenObjId), convert(int,ScreenId), MasterTable, NewGroupRow, convert(smallint,GroupRowId), convert(smallint,GroupColId), LabelVertical, LabelCss, ContentCss, convert(int,ColumnId), ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, HideOnTablet, HideOnMobile, ColumnJustify, convert(smallint,ColumnSize), convert(smallint,ColumnHeight), convert(tinyint,DisplayModeId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), AggregateCd, GenerateSp, convert(int,TabFolderId), convert(smallint,TabIndex), convert(smallint,SortOrder), RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj')
IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id('dbo.ScreenObj'))
BEGIN
EXEC ('CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, NewGroupRow Char(1) NOT NULL, GroupRowId SmallInt NOT NULL, GroupColId SmallInt NOT NULL, LabelVertical Char(1) NOT NULL, LabelCss VarChar(1000) NULL, ContentCss VarChar(1000) NULL, ColumnId Int NULL, ColumnName VarChar(50) NOT NULL, ColumnDesc VarChar(200) NULL, DefaultValue NVarChar(200) NULL, HyperLinkUrl NVarChar(200) NULL, DefAfter Char(1) NOT NULL, SystemValue NVarChar(200) NULL, DefAlways Char(1) NOT NULL, ColumnWrap Char(1) NOT NULL, GridGrpCd Char(1) NOT NULL, HideOnTablet Char(1) NOT NULL, HideOnMobile Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ResizeWidth SmallInt NULL, ColumnHeight SmallInt NULL, ResizeHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NOT NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(100) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_NewGroupRow DEFAULT (''N'') FOR NewGroupRow ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GroupRowId DEFAULT (78) FOR GroupRowId ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_LabelVertical DEFAULT (''N'') FOR LabelVertical ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAfter DEFAULT (''N'') FOR DefAfter ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAlways DEFAULT (''N'') FOR DefAlways ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GridGrpCd DEFAULT (''N'') FOR GridGrpCd ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_HideOnTablet DEFAULT (''N'') FOR HideOnTablet ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_HideOnMobile DEFAULT (''N'') FOR HideOnMobile ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, NewGroupRow, GroupRowId, GroupColId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, HideOnTablet, HideOnMobile, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, NewGroupRow, GroupRowId, GroupColId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, HideOnTablet, HideOnMobile, ColumnJustify, ColumnSize, ColumnHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj')
EXEC ('UPDATE dbo.ScreenObj SET ResizeHeight = ColumnHeight, ResizeWidth = ColumnSize WHERE DisplayModeId = 28')
END
  10.  70.81013~@~20~@~M~@~Change table ScreenHlp~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_ScreenHlp (ScreenHlpId int NULL, ScreenId int NULL, CultureId smallint NULL, DefaultHlpMsg nvarchar(max) NULL, FootNote nvarchar(400) NULL, ScreenTitle nvarchar(50) NULL, AddMsg nvarchar(100) NULL, UpdMsg nvarchar(100) NULL, DelMsg nvarchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenHlp (ScreenHlpId, ScreenId, CultureId, DefaultHlpMsg, FootNote, ScreenTitle, AddMsg, UpdMsg, DelMsg) SELECT convert(int,ScreenHlpId), convert(int,ScreenId), convert(smallint,CultureId), DefaultHlpMsg, FootNote, ScreenTitle, AddMsg, UpdMsg, DelMsg FROM dbo.ScreenHlp IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenHlp) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenHlp) = 0 DROP TABLE dbo.ScreenHlp')
IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id('dbo.ScreenHlp'))
BEGIN
EXEC ('CREATE TABLE dbo.ScreenHlp (ScreenHlpId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, CultureId SmallInt NOT NULL, DefaultHlpMsg NVarChar(max) NOT NULL, FootNote NVarChar(400) NULL, ScreenTitle NVarChar(50) NOT NULL, AddMsg NVarChar(100) NULL, UpdMsg NVarChar(100) NULL, DelMsg NVarChar(100) NULL, IncrementMsg NVarChar(100) NULL, MasterLstTitle NVarChar(100) NULL, MasterLstSubtitle NVarChar(100) NULL, MasterRecTitle NVarChar(100) NULL, MasterRecSubtitle NVarChar(100) NULL, DetailLstTitle NVarChar(100) NULL, DetailLstSubtitle NVarChar(100) NULL, DetailRecTitle NVarChar(100) NULL, DetailRecSubtitle NVarChar(100) NULL, CONSTRAINT PK_ScreenHlp PRIMARY KEY CLUSTERED (ScreenHlpId, CultureId))') EXEC (' SET IDENTITY_INSERT dbo.ScreenHlp ON INSERT INTO dbo.ScreenHlp (ScreenHlpId, ScreenId, CultureId, DefaultHlpMsg, FootNote, ScreenTitle, AddMsg, UpdMsg, DelMsg) SELECT ScreenHlpId, ScreenId, CultureId, DefaultHlpMsg, FootNote, ScreenTitle, AddMsg, UpdMsg, DelMsg FROM dbo.Tmp_ScreenHlp SET IDENTITY_INSERT dbo.ScreenHlp OFF IF (SELECT COUNT(1) FROM dbo.ScreenHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenHlp) = 0 DROP TABLE dbo.Tmp_ScreenHlp')
EXEC ('delete from ScreenHlp where CultureId <> 1')
EXEC ('update ScreenHlp SET MasterLstTitle = ''Master list'', MasterLstSubtitle = ''Create or select a master record''')
EXEC ('update ScreenHlp SET DetailLstTitle = ''Detail list'', DetailLstSubtitle = ''Add or edit a detail record''')
EXEC ('update ScreenHlp SET MasterRecTitle = ''Master record'', MasterRecSubtitle = ''Manage your master information''')
EXEC ('update ScreenHlp SET DetailRecTitle = ''Detail record'', DetailRecSubtitle = ''Enter or update detail information''')
EXEC ('update ScreenHlp SET IncrementMsg = ''View {10} more''')
END
  10.  70.81013~@~30~@~M~@~Change table CtButtonHlp~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_CtButtonHlp (ButtonHlpId int NULL, CultureId smallint NULL, ButtonTypeId tinyint NULL, ButtonName nvarchar(50) NULL, ButtonLongNm nvarchar(100) NULL, ButtonToolTip nvarchar(200) NULL)') EXEC (' INSERT INTO dbo.Tmp_CtButtonHlp (ButtonHlpId, CultureId, ButtonTypeId, ButtonName, ButtonLongNm, ButtonToolTip) SELECT convert(int,ButtonHlpId), convert(smallint,CultureId), convert(tinyint,ButtonTypeId), ButtonName, ButtonLongNm, ButtonToolTip FROM dbo.CtButtonHlp IF (SELECT COUNT(1) FROM dbo.Tmp_CtButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.CtButtonHlp) = 0 DROP TABLE dbo.CtButtonHlp') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtButtonHlp'')) CREATE TABLE dbo.CtButtonHlp (ButtonHlpId Int IDENTITY NOT NULL, CultureId SmallInt NOT NULL, ButtonTypeId TinyInt NOT NULL, ButtonName NVarChar(50) NOT NULL, ButtonLongNm NVarChar(100) NOT NULL, ButtonToolTip NVarChar(200) NOT NULL, CONSTRAINT PK_CtButtonHlp PRIMARY KEY CLUSTERED (ButtonHlpId, CultureId))') EXEC (' ALTER TABLE dbo.CtButtonHlp ADD CONSTRAINT DF_CtButtonHlp_ButtonLongNm DEFAULT (''.'') FOR ButtonLongNm SET IDENTITY_INSERT dbo.CtButtonHlp ON INSERT INTO dbo.CtButtonHlp (ButtonHlpId, CultureId, ButtonTypeId, ButtonName, ButtonLongNm, ButtonToolTip) SELECT ButtonHlpId, CultureId, ButtonTypeId, ButtonName, ButtonLongNm, ButtonToolTip FROM dbo.Tmp_CtButtonHlp SET IDENTITY_INSERT dbo.CtButtonHlp OFF IF (SELECT COUNT(1) FROM dbo.CtButtonHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_CtButtonHlp) = 0 DROP TABLE dbo.Tmp_CtButtonHlp IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_CtButtonHlp'') CREATE UNIQUE NONCLUSTERED INDEX IU_CtButtonHlp ON dbo.CtButtonHlp(CultureId,ButtonTypeId)')
  10.  71.81014~@~10~@~M~@~Change table ScreenHlp~@~Y~@~EXEC ('CREATE TABLE dbo.Tmp_ScreenHlp (ScreenHlpId int NULL, ScreenId int NULL, CultureId smallint NULL, DefaultHlpMsg nvarchar(max) NULL, FootNote nvarchar(400) NULL, ScreenTitle nvarchar(50) NULL, AddMsg nvarchar(100) NULL, UpdMsg nvarchar(100) NULL, DelMsg nvarchar(100) NULL, IncrementMsg nvarchar(100) NULL, MasterLstTitle nvarchar(100) NULL, MasterLstSubtitle nvarchar(100) NULL, MasterRecTitle nvarchar(100) NULL, MasterRecSubtitle nvarchar(100) NULL, DetailLstTitle nvarchar(100) NULL, DetailLstSubtitle nvarchar(100) NULL, DetailRecTitle nvarchar(100) NULL, DetailRecSubtitle nvarchar(100) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenHlp (ScreenHlpId, ScreenId, CultureId, DefaultHlpMsg, FootNote, ScreenTitle, AddMsg, UpdMsg, DelMsg, IncrementMsg, MasterLstTitle, MasterLstSubtitle, MasterRecTitle, MasterRecSubtitle, DetailLstTitle, DetailLstSubtitle, DetailRecTitle, DetailRecSubtitle) SELECT convert(int,ScreenHlpId), convert(int,ScreenId), convert(smallint,CultureId), DefaultHlpMsg, FootNote, ScreenTitle, AddMsg, UpdMsg, DelMsg, IncrementMsg, MasterLstTitle, MasterLstSubtitle, MasterRecTitle, MasterRecSubtitle, DetailLstTitle, DetailLstSubtitle, DetailRecTitle, DetailRecSubtitle FROM dbo.ScreenHlp IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenHlp) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenHlp) = 0 DROP TABLE dbo.ScreenHlp')
IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id('dbo.ScreenHlp'))
BEGIN
EXEC ('CREATE TABLE dbo.ScreenHlp (ScreenHlpId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, CultureId SmallInt NOT NULL, DefaultHlpMsg NVarChar(max) NOT NULL, FootNote NVarChar(400) NULL, ScreenTitle NVarChar(50) NOT NULL, AddMsg NVarChar(100) NULL, UpdMsg NVarChar(100) NULL, DelMsg NVarChar(100) NULL, IncrementMsg NVarChar(100) NULL, MasterLstTitle NVarChar(100) NULL, MasterLstSubtitle NVarChar(100) NULL, MasterRecTitle NVarChar(100) NULL, MasterRecSubtitle NVarChar(100) NULL, DetailLstTitle NVarChar(100) NULL, DetailLstSubtitle NVarChar(100) NULL, DetailRecTitle NVarChar(100) NULL, DetailRecSubtitle NVarChar(100) NULL, NoMasterMsg NVarChar(100) NULL, NoDetailMsg NVarChar(100) NULL, AddMasterMsg NVarChar(100) NULL, AddDetailMsg NVarChar(100) NULL, MasterFoundMsg NVarChar(100) NULL, DetailFoundMsg NVarChar(100) NULL, CONSTRAINT PK_ScreenHlp PRIMARY KEY CLUSTERED (ScreenHlpId, CultureId))') EXEC (' SET IDENTITY_INSERT dbo.ScreenHlp ON INSERT INTO dbo.ScreenHlp (ScreenHlpId, ScreenId, CultureId, DefaultHlpMsg, FootNote, ScreenTitle, AddMsg, UpdMsg, DelMsg, IncrementMsg, MasterLstTitle, MasterLstSubtitle, MasterRecTitle, MasterRecSubtitle, DetailLstTitle, DetailLstSubtitle, DetailRecTitle, DetailRecSubtitle) SELECT ScreenHlpId, ScreenId, CultureId, DefaultHlpMsg, FootNote, ScreenTitle, AddMsg, UpdMsg, DelMsg, IncrementMsg, MasterLstTitle, MasterLstSubtitle, MasterRecTitle, MasterRecSubtitle, DetailLstTitle, DetailLstSubtitle, DetailRecTitle, DetailRecSubtitle FROM dbo.Tmp_ScreenHlp SET IDENTITY_INSERT dbo.ScreenHlp OFF IF (SELECT COUNT(1) FROM dbo.ScreenHlp) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenHlp) = 0 DROP TABLE dbo.Tmp_ScreenHlp')
EXEC ('update ScreenHlp SET NoMasterMsg = ''No master record selected'', NoDetailMsg = ''No detail record selected''')
EXEC ('update ScreenHlp SET AddMasterMsg = ''Click here to enter a new master record'', AddDetailMsg = ''Click here to enter a new detail record''')
EXEC ('update ScreenHlp SET MasterFoundMsg = ''Master records found'', DetailFoundMsg = ''Detail records found''')
END
  10.  75.81024~@~10~@~M~@~Change table Usr~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_Usr (UsrId int NULL, LoginName nvarchar(32) NULL, UsrEmail nvarchar(50) NULL, UsrMobile varchar(50) NULL, UsrName nvarchar(50) NULL, UsrPassword varbinary(32) NULL, ConfirmPwd varbinary(32) NULL, ExtPassword varbinary(255) NULL, CultureId smallint NULL, InternalUsr char(1) NULL, TechnicalUsr char(1) NULL, UsrGroupLs varchar(1000) NULL, CompanyLs varchar(1000) NULL, ProjectLs varchar(1000) NULL, InvestorId int NULL, CustomerId int NULL, VendorId int NULL, AgentId int NULL, BrokerId int NULL, MemberId int NULL, DefSystemId tinyint NULL, DefProjectId int NULL, DefCompanyId int NULL, FailedAttempt tinyint NULL, FailedAttemptFP tinyint NULL, LastFailedDt datetime NULL, LastSuccessDt datetime NULL, LastPwdChgDt datetime NULL, HintQuestionId tinyint NULL, HintAnswer nvarchar(50) NULL, Active char(1) NULL, ModifiedOn datetime NULL, UsrImprLink varchar(200) NULL, IPAlert char(1) NULL, PwdNoRepeat smallint NULL, PwdDuration smallint NULL, PwdWarn smallint NULL, PicMed varbinary(max) NULL, OTPSecret varchar(64) NULL, TwoFactorAuth char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Usr (UsrId, LoginName, UsrEmail, UsrMobile, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, IPAlert, PwdNoRepeat, PwdDuration, PwdWarn, PicMed, OTPSecret, TwoFactorAuth) SELECT convert(int,UsrId), LoginName, UsrEmail, UsrMobile, UsrName, UsrPassword, ConfirmPwd, ExtPassword, convert(smallint,CultureId), InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, convert(int,InvestorId), convert(int,CustomerId), convert(int,VendorId), convert(int,AgentId), convert(int,BrokerId), convert(int,MemberId), convert(tinyint,DefSystemId), convert(int,DefProjectId), convert(int,DefCompanyId), convert(tinyint,FailedAttempt), convert(tinyint,FailedAttemptFP), LastFailedDt, LastSuccessDt, LastPwdChgDt, convert(tinyint,HintQuestionId), HintAnswer, Active, ModifiedOn, UsrImprLink, IPAlert, convert(smallint,PwdNoRepeat), convert(smallint,PwdDuration), convert(smallint,PwdWarn), PicMed, OTPSecret, TwoFactorAuth FROM dbo.Usr IF (SELECT COUNT(1) FROM dbo.Tmp_Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Usr) = 0 DROP TABLE dbo.Usr') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Usr'')) CREATE TABLE dbo.Usr (UsrId Int IDENTITY NOT NULL, LoginName NVarChar(32) NOT NULL, UsrEmail NVarChar(50) NULL, UsrMobile VarChar(50) NULL, UsrName NVarChar(50) NULL, UsrPassword VarBinary(32) NULL, ConfirmPwd VarBinary(32) NULL, ExtPassword VarBinary(255) NULL, CultureId SmallInt NOT NULL, InternalUsr Char(1) NOT NULL, TechnicalUsr Char(1) NOT NULL, UsrGroupLs VarChar(1000) NOT NULL, CompanyLs VarChar(1000) NULL, ProjectLs VarChar(1000) NULL, InvestorId Int NULL, CustomerId Int NULL, VendorId Int NULL, AgentId Int NULL, BrokerId Int NULL, MemberId Int NULL, LenderId Int NULL, BorrowerId Int NULL, GuarantorId Int NULL, DefSystemId TinyInt NOT NULL, DefProjectId Int NULL, DefCompanyId Int NULL, FailedAttempt TinyInt NULL, FailedAttemptFP TinyInt NULL, LastFailedDt DateTime NULL, LastSuccessDt DateTime NULL, LastPwdChgDt DateTime NULL, HintQuestionId TinyInt NULL, HintAnswer NVarChar(50) NULL, Active Char(1) NOT NULL, ModifiedOn DateTime NOT NULL, UsrImprLink VarChar(200) NULL, IPAlert Char(1) NOT NULL, PwdNoRepeat SmallInt NOT NULL, PwdDuration SmallInt NOT NULL, PwdWarn SmallInt NOT NULL, PicMed VarBinary(max) NULL, OTPSecret VarChar(64) NULL, TwoFactorAuth Char(1) NOT NULL, CONSTRAINT PK_Usr PRIMARY KEY CLUSTERED (UsrId, CultureId))') EXEC (' ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_CultureId DEFAULT (1) FOR CultureId ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_InternalUsr DEFAULT (''N'') FOR InternalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_TechnicalUsr DEFAULT (''N'') FOR TechnicalUsr ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_IPAlert DEFAULT (''N'') FOR IPAlert ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdNoRepeat DEFAULT (1) FOR PwdNoRepeat ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdDuration DEFAULT (9999) FOR PwdDuration ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_PwdWarn DEFAULT (0) FOR PwdWarn ALTER TABLE dbo.Usr ADD CONSTRAINT DF_Usr_TwoFactorAuth DEFAULT (''N'') FOR TwoFactorAuth SET IDENTITY_INSERT dbo.Usr ON INSERT INTO dbo.Usr (UsrId, LoginName, UsrEmail, UsrMobile, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, IPAlert, PwdNoRepeat, PwdDuration, PwdWarn, PicMed, OTPSecret, TwoFactorAuth) SELECT UsrId, LoginName, UsrEmail, UsrMobile, UsrName, UsrPassword, ConfirmPwd, ExtPassword, CultureId, InternalUsr, TechnicalUsr, UsrGroupLs, CompanyLs, ProjectLs, InvestorId, CustomerId, VendorId, AgentId, BrokerId, MemberId, DefSystemId, DefProjectId, DefCompanyId, FailedAttempt, FailedAttemptFP, LastFailedDt, LastSuccessDt, LastPwdChgDt, HintQuestionId, HintAnswer, Active, ModifiedOn, UsrImprLink, IPAlert, PwdNoRepeat, PwdDuration, PwdWarn, PicMed, OTPSecret, TwoFactorAuth FROM dbo.Tmp_Usr SET IDENTITY_INSERT dbo.Usr OFF IF (SELECT COUNT(1) FROM dbo.Usr) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Usr) = 0 DROP TABLE dbo.Tmp_Usr IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_Usr'') CREATE UNIQUE NONCLUSTERED INDEX IU_Usr ON dbo.Usr(LoginName)')
  10.  75.81024~@~20~@~M~@~Change table UsrPref~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_UsrPref (UsrPrefId int NULL, UsrId int NULL, UsrGroupId smallint NULL, CompanyId int NULL, MemberId int NULL, AgentId int NULL, BrokerId int NULL, CustomerId int NULL, InvestorId int NULL, VendorId int NULL, ProjectId int NULL, SystemId tinyint NULL, PrefDefault char(1) NULL, UsrPrefDesc nvarchar(50) NULL, SysListVisible char(1) NULL, ComListVisible char(1) NULL, PrjListVisible char(1) NULL, MenuOptId int NULL, UsrStyleSheet varchar(max) NULL, MasterPgFile varchar(100) NULL, LoginImage varchar(200) NULL, MobileImage varchar(200) NULL, SampleImage varbinary(max) NULL)') EXEC (' INSERT INTO dbo.Tmp_UsrPref (UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, UsrStyleSheet, MasterPgFile, LoginImage, MobileImage, SampleImage) SELECT convert(int,UsrPrefId), convert(int,UsrId), convert(smallint,UsrGroupId), convert(int,CompanyId), convert(int,MemberId), convert(int,AgentId), convert(int,BrokerId), convert(int,CustomerId), convert(int,InvestorId), convert(int,VendorId), convert(int,ProjectId), convert(tinyint,SystemId), PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, convert(int,MenuOptId), UsrStyleSheet, MasterPgFile, LoginImage, MobileImage, SampleImage FROM dbo.UsrPref IF (SELECT COUNT(1) FROM dbo.Tmp_UsrPref) > 0 OR (SELECT COUNT(1) FROM dbo.UsrPref) = 0 DROP TABLE dbo.UsrPref') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrPref'')) CREATE TABLE dbo.UsrPref (UsrPrefId Int IDENTITY NOT NULL, UsrId Int NULL, UsrGroupId SmallInt NULL, CompanyId Int NULL, MemberId Int NULL, AgentId Int NULL, BrokerId Int NULL, CustomerId Int NULL, InvestorId Int NULL, VendorId Int NULL, LenderId Int NULL, BorrowerId Int NULL, GuarantorId Int NULL, ProjectId Int NULL, SystemId TinyInt NULL, PrefDefault Char(1) NOT NULL, UsrPrefDesc NVarChar(50) NOT NULL, SysListVisible Char(1) NOT NULL, ComListVisible Char(1) NOT NULL, PrjListVisible Char(1) NOT NULL, MenuOptId Int NOT NULL, UsrStyleSheet VarChar(max) NULL, MasterPgFile VarChar(100) NULL, LoginImage VarChar(200) NULL, MobileImage VarChar(200) NULL, SampleImage VarBinary(max) NULL, CONSTRAINT PK_UsrPref PRIMARY KEY CLUSTERED (UsrPrefId))') EXEC (' ALTER TABLE dbo.UsrPref ADD CONSTRAINT DF_UsrPref_PrjListVisible DEFAULT (''N'') FOR PrjListVisible SET IDENTITY_INSERT dbo.UsrPref ON INSERT INTO dbo.UsrPref (UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, UsrStyleSheet, MasterPgFile, LoginImage, MobileImage, SampleImage) SELECT UsrPrefId, UsrId, UsrGroupId, CompanyId, MemberId, AgentId, BrokerId, CustomerId, InvestorId, VendorId, ProjectId, SystemId, PrefDefault, UsrPrefDesc, SysListVisible, ComListVisible, PrjListVisible, MenuOptId, UsrStyleSheet, MasterPgFile, LoginImage, MobileImage, SampleImage FROM dbo.Tmp_UsrPref SET IDENTITY_INSERT dbo.UsrPref OFF IF (SELECT COUNT(1) FROM dbo.UsrPref) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UsrPref) = 0 DROP TABLE dbo.Tmp_UsrPref')
  10.  75.81024~@~30~@~M~@~Add table Guarantor~@~N~@~EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''[[?]]Cmon.dbo.Guarantor'')) CREATE TABLE [[?]]Cmon.dbo.Guarantor (GuarantorId Int IDENTITY NOT NULL, FirmId Int NOT NULL, ParentId Int NULL, GuarantorName NVarChar(100) NOT NULL, Active Char(1) NOT NULL, CONSTRAINT PK_Guarantor PRIMARY KEY CLUSTERED (GuarantorId))')

  10.  75.81024~@~40~@~M~@~Add table Borrower~@~N~@~EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''[[?]]Cmon.dbo.Borrower'')) CREATE TABLE [[?]]Cmon.dbo.Borrower (BorrowerId Int IDENTITY NOT NULL, FirmId Int NOT NULL, ParentId Int NULL, BorrowerName NVarChar(100) NOT NULL, Active Char(1) NOT NULL, CONSTRAINT PK_Borrower PRIMARY KEY CLUSTERED (BorrowerId))')

  10.  75.81024~@~50~@~M~@~Add table Lender~@~N~@~EXEC ('IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''[[?]]Cmon.dbo.Lender'')) CREATE TABLE [[?]]Cmon.dbo.Lender (LenderId Int IDENTITY NOT NULL, FirmId Int NOT NULL, ParentId Int NULL, LenderName NVarChar(100) NOT NULL, Active Char(1) NOT NULL, CONSTRAINT PK_Lender PRIMARY KEY CLUSTERED (LenderId))')

  10.  78.90513~@~10~@~M~@~Change table Screen~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchTableId int NULL, SearchId int NULL, SearchAscending char(1) NULL, SearchIdR int NULL, SearchDtlId int NULL, SearchDtlIdR int NULL, SearchUrlId int NULL, SearchImgId int NULL, GridRows tinyint NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, HasDeleteAll char(1) NULL, ShowGridHead char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, AuthRequired char(1) NULL, ViewOnly char(1) NULL, GenAudit char(1) NULL, NeedRegen char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchIdR, SearchDtlId, SearchDtlIdR, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(int,SearchTableId), convert(int,SearchId), SearchAscending, convert(int,SearchIdR), convert(int,SearchDtlId), convert(int,SearchDtlIdR), convert(int,SearchUrlId), convert(int,SearchImgId), convert(tinyint,GridRows), ScreenObj, ScreenFilter, GenerateSc, GenerateSr, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchTableId Int NULL, SearchId Int NULL, SearchAscending Char(1) NOT NULL, SearchIdR Int NULL, SearchDtlId Int NULL, SearchDtlIdR Int NULL, SearchUrlId Int NULL, SearchImgId Int NULL, GridRows TinyInt NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, ReactGenerated Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ShowGridHead Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, ViewOnly Char(1) NOT NULL, GenAudit Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ReactGenerated DEFAULT (''N'') FOR ReactGenerated ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ShowGridHead DEFAULT (''Y'') FOR ShowGridHead ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ViewOnly DEFAULT (''N'') FOR ViewOnly ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenAudit DEFAULT (''N'') FOR GenAudit ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchIdR, SearchDtlId, SearchDtlIdR, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, ReactGenerated, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchIdR, SearchDtlId, SearchDtlIdR, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, ''N'', HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen')
  10.  79.90531~@~10~@~M~@~Change table CtRuleAsmxType~@~N~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtRuleAsmxType'')) CREATE TABLE dbo.CtRuleAsmxType (RuleAsmxTypeId TinyInt NOT NULL, RuleAsmxTypeDesc NVarChar(50) NOT NULL, CONSTRAINT PK_CtRuleAsmxType PRIMARY KEY CLUSTERED (RuleAsmxTypeId))') EXEC ('') EXEC ('') EXEC ('')
  10.  79.90531~@~20~@~M~@~Change table CtRuleReactType~@~N~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtRuleReactType'')) CREATE TABLE dbo.CtRuleReactType (RuleReactTypeId TinyInt NOT NULL, RuleReactTypeDesc NVarChar(50) NOT NULL, CONSTRAINT PK_CtRuleReactType PRIMARY KEY CLUSTERED (RuleReactTypeId))') EXEC ('') EXEC ('') EXEC ('')
  10.  79.90531~@~30~@~M~@~Change table RuleReact~@~Y~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.RuleReact'')) CREATE TABLE dbo.RuleReact (RuleReactId Int IDENTITY NOT NULL, RuleReactTypeId TinyInt NOT NULL, RuleReactName NVarChar(100) NOT NULL, RuleReactDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, ScreenId Int NOT NULL, ScreenObjId Int NULL, RuleReactProg NVarChar(max) NOT NULL, CONSTRAINT PK_RuleReact PRIMARY KEY CLUSTERED (RuleReactId))') EXEC ('') EXEC ('') EXEC ('')
  10.  79.90531~@~40~@~M~@~Change table RuleAsmx~@~Y~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.RuleAsmx'')) CREATE TABLE dbo.RuleAsmx (RuleAsmxId Int IDENTITY NOT NULL, RuleAsmxTypeId TinyInt NOT NULL, RuleAsmxName NVarChar(100) NOT NULL, RuleAsmxDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, ScreenId Int NOT NULL, RuleAsmxProg NVarChar(max) NOT NULL, CONSTRAINT PK_RuleAsmx PRIMARY KEY CLUSTERED (RuleAsmxId))') EXEC ('') EXEC ('') EXEC ('')
  10.  79.90531~@~50~@~M~@~Change table Screen~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Screen (ScreenId int NULL, ProgramName varchar(20) NULL, ScreenDesc nvarchar(50) NULL, ScreenTypeId tinyint NULL, MasterTableId int NULL, DetailTableId int NULL, SearchTableId int NULL, SearchId int NULL, SearchAscending char(1) NULL, SearchIdR int NULL, SearchDtlId int NULL, SearchDtlIdR int NULL, SearchUrlId int NULL, SearchImgId int NULL, GridRows tinyint NULL, ScreenObj varchar(100) NULL, ScreenFilter varchar(100) NULL, GenerateSc char(1) NULL, GenerateSr char(1) NULL, ReactGenerated char(1) NULL, HasDeleteAll char(1) NULL, ShowGridHead char(1) NULL, ValidateReq char(1) NULL, DeferError char(1) NULL, AuthRequired char(1) NULL, ViewOnly char(1) NULL, GenAudit char(1) NULL, NeedRegen char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchIdR, SearchDtlId, SearchDtlIdR, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, ReactGenerated, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen) SELECT convert(int,ScreenId), ProgramName, ScreenDesc, convert(tinyint,ScreenTypeId), convert(int,MasterTableId), convert(int,DetailTableId), convert(int,SearchTableId), convert(int,SearchId), SearchAscending, convert(int,SearchIdR), convert(int,SearchDtlId), convert(int,SearchDtlIdR), convert(int,SearchUrlId), convert(int,SearchImgId), convert(tinyint,GridRows), ScreenObj, ScreenFilter, GenerateSc, GenerateSr, ReactGenerated, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen FROM dbo.Screen IF (SELECT COUNT(1) FROM dbo.Tmp_Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Screen) = 0 DROP TABLE dbo.Screen') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Screen'')) CREATE TABLE dbo.Screen (ScreenId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ScreenDesc NVarChar(50) NULL, ScreenTypeId TinyInt NOT NULL, MasterTableId Int NULL, DetailTableId Int NULL, SearchTableId Int NULL, SearchId Int NULL, SearchAscending Char(1) NOT NULL, SearchIdR Int NULL, SearchDtlId Int NULL, SearchDtlIdR Int NULL, SearchUrlId Int NULL, SearchImgId Int NULL, GridRows TinyInt NULL, ScreenObj VarChar(100) NULL, ScreenFilter VarChar(100) NULL, GenerateSc Char(1) NOT NULL, GenerateSr Char(1) NOT NULL, ReactGenerated Char(1) NOT NULL, HasDeleteAll Char(1) NOT NULL, ShowGridHead Char(1) NOT NULL, ValidateReq Char(1) NOT NULL, DeferError Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, ViewOnly Char(1) NOT NULL, GenAudit Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, NeedReactRegen Char(1) NOT NULL, CONSTRAINT PK_Screen PRIMARY KEY CLUSTERED (ScreenId))') EXEC (' ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSc DEFAULT (''Y'') FOR GenerateSc ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenerateSr DEFAULT (''Y'') FOR GenerateSr ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ReactGenerated DEFAULT (''N'') FOR ReactGenerated ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ShowGridHead DEFAULT (''Y'') FOR ShowGridHead ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_DeferError DEFAULT (''N'') FOR DeferError ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_AuthRequired DEFAULT (''Y'') FOR AuthRequired ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_ViewOnly DEFAULT (''N'') FOR ViewOnly ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_GenAudit DEFAULT (''N'') FOR GenAudit ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Screen ADD CONSTRAINT DF_Screen_NeedReactRegen DEFAULT (''N'') FOR NeedReactRegen SET IDENTITY_INSERT dbo.Screen ON INSERT INTO dbo.Screen (ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchIdR, SearchDtlId, SearchDtlIdR, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, ReactGenerated, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen, NeedReactRegen) SELECT ScreenId, ProgramName, ScreenDesc, ScreenTypeId, MasterTableId, DetailTableId, SearchTableId, SearchId, SearchAscending, SearchIdR, SearchDtlId, SearchDtlIdR, SearchUrlId, SearchImgId, GridRows, ScreenObj, ScreenFilter, GenerateSc, GenerateSr, ReactGenerated, HasDeleteAll, ShowGridHead, ValidateReq, DeferError, AuthRequired, ViewOnly, GenAudit, NeedRegen, ''N'' FROM dbo.Tmp_Screen SET IDENTITY_INSERT dbo.Screen OFF IF (SELECT COUNT(1) FROM dbo.Screen) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Screen) = 0 DROP TABLE dbo.Tmp_Screen')
  10.  82.90820~@~10~@~M~@~Change table CtDtlLstPos~@~N~@~IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id('dbo.CtDtlLstPos'))
BEGIN
EXEC ('CREATE TABLE dbo.CtDtlLstPos (DtlLstPosId tinyint NOT NULL, DtlLstPosNm NVarChar(20) NOT NULL, CONSTRAINT PK_CtDtlLstPos PRIMARY KEY CLUSTERED (DtlLstPosId))')
EXEC ('INSERT dbo.CtDtlLstPos SELECT 1, ''Top Left''')
EXEC ('INSERT dbo.CtDtlLstPos SELECT 2, ''Bottom Left''')
EXEC ('INSERT dbo.CtDtlLstPos SELECT 3, ''Top Right''')
EXEC ('INSERT dbo.CtDtlLstPos SELECT 4, ''Bottom Right''')
END
  10.  82.90820~@~20~@~M~@~Change table ScreenObj~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ScreenObj (ScreenObjId int NULL, ScreenId int NULL, MasterTable char(1) NULL, NewGroupRow char(1) NULL, GroupRowId smallint NULL, GroupColId smallint NULL, LabelVertical char(1) NULL, LabelCss varchar(1000) NULL, ContentCss varchar(1000) NULL, ColumnId int NULL, ColumnName varchar(50) NULL, ColumnDesc varchar(200) NULL, DefaultValue nvarchar(200) NULL, HyperLinkUrl nvarchar(200) NULL, DefAfter char(1) NULL, SystemValue nvarchar(200) NULL, DefAlways char(1) NULL, ColumnWrap char(1) NULL, GridGrpCd char(1) NULL, HideOnTablet char(1) NULL, HideOnMobile char(1) NULL, ColumnJustify char(1) NULL, ColumnSize smallint NULL, ResizeWidth smallint NULL, ColumnHeight smallint NULL, ResizeHeight smallint NULL, DisplayModeId tinyint NULL, DdlKeyColumnId int NULL, DdlRefColumnId int NULL, DdlSrtColumnId int NULL, DdlAdnColumnId int NULL, DdlFtrColumnId int NULL, AggregateCd char(1) NULL, GenerateSp char(1) NULL, TabFolderId int NULL, TabIndex smallint NULL, SortOrder smallint NULL, RequiredValid char(1) NULL, MaskValid varchar(100) NULL, RangeValidType varchar(50) NULL, RangeValidMax varchar(50) NULL, RangeValidMin varchar(50) NULL, ColumnLink varchar(1000) NULL, RefreshOnCUD char(1) NULL, TrimOnEntry char(1) NULL, MatchCd char(1) NULL, IgnoreConfirm char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_ScreenObj (ScreenObjId, ScreenId, MasterTable, NewGroupRow, GroupRowId, GroupColId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, HideOnTablet, HideOnMobile, ColumnJustify, ColumnSize, ResizeWidth, ColumnHeight, ResizeHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT convert(int,ScreenObjId), convert(int,ScreenId), MasterTable, NewGroupRow, convert(smallint,GroupRowId), convert(smallint,GroupColId), LabelVertical, LabelCss, ContentCss, convert(int,ColumnId), ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, HideOnTablet, HideOnMobile, ColumnJustify, convert(smallint,ColumnSize), convert(smallint,ResizeWidth), convert(smallint,ColumnHeight), convert(smallint,ResizeHeight), convert(tinyint,DisplayModeId), convert(int,DdlKeyColumnId), convert(int,DdlRefColumnId), convert(int,DdlSrtColumnId), convert(int,DdlAdnColumnId), convert(int,DdlFtrColumnId), AggregateCd, GenerateSp, convert(int,TabFolderId), convert(smallint,TabIndex), convert(smallint,SortOrder), RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.ScreenObj IF (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.ScreenObj) = 0 DROP TABLE dbo.ScreenObj') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ScreenObj'')) CREATE TABLE dbo.ScreenObj (ScreenObjId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, MasterTable Char(1) NOT NULL, NewGroupRow Char(1) NOT NULL, GroupRowId SmallInt NOT NULL, GroupColId SmallInt NOT NULL, LabelVertical Char(1) NOT NULL, LabelCss VarChar(1000) NULL, ContentCss VarChar(1000) NULL, ColumnId Int NULL, ColumnName VarChar(50) NOT NULL, ColumnDesc VarChar(200) NULL, DefaultValue NVarChar(200) NULL, HyperLinkUrl NVarChar(200) NULL, DefAfter Char(1) NOT NULL, SystemValue NVarChar(200) NULL, DefAlways Char(1) NOT NULL, ColumnWrap Char(1) NOT NULL, GridGrpCd Char(1) NOT NULL, HideOnTablet Char(1) NOT NULL, HideOnMobile Char(1) NOT NULL, ColumnJustify Char(1) NULL, ColumnSize SmallInt NULL, ResizeWidth SmallInt NULL, ColumnHeight SmallInt NULL, ResizeHeight SmallInt NULL, DisplayModeId TinyInt NOT NULL, DdlKeyColumnId Int NULL, DdlRefColumnId Int NULL, DdlSrtColumnId Int NULL, DdlAdnColumnId Int NULL, DdlFtrColumnId Int NULL, AggregateCd Char(1) NULL, GenerateSp Char(1) NOT NULL, TabFolderId Int NOT NULL, TabIndex SmallInt NOT NULL, SortOrder SmallInt NULL, DtlLstPosId TinyInt NULL, RequiredValid Char(1) NOT NULL, MaskValid VarChar(100) NULL, RangeValidType VarChar(50) NULL, RangeValidMax VarChar(50) NULL, RangeValidMin VarChar(50) NULL, ColumnLink VarChar(1000) NULL, RefreshOnCUD Char(1) NOT NULL, TrimOnEntry Char(1) NOT NULL, MatchCd Char(1) NULL, IgnoreConfirm Char(1) NOT NULL, CONSTRAINT PK_ScreenObj PRIMARY KEY CLUSTERED (ScreenObjId))') EXEC (' ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_NewGroupRow DEFAULT (''N'') FOR NewGroupRow ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GroupRowId DEFAULT (78) FOR GroupRowId ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_LabelVertical DEFAULT (''N'') FOR LabelVertical ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAfter DEFAULT (''N'') FOR DefAfter ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_DefAlways DEFAULT (''N'') FOR DefAlways ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_GridGrpCd DEFAULT (''N'') FOR GridGrpCd ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_HideOnTablet DEFAULT (''N'') FOR HideOnTablet ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_HideOnMobile DEFAULT (''N'') FOR HideOnMobile ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_TrimOnEntry DEFAULT (''Y'') FOR TrimOnEntry ALTER TABLE dbo.ScreenObj ADD CONSTRAINT DF_ScreenObj_IgnoreConfirm DEFAULT (''Y'') FOR IgnoreConfirm SET IDENTITY_INSERT dbo.ScreenObj ON INSERT INTO dbo.ScreenObj (ScreenObjId, ScreenId, MasterTable, NewGroupRow, GroupRowId, GroupColId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, HideOnTablet, HideOnMobile, ColumnJustify, ColumnSize, ResizeWidth, ColumnHeight, ResizeHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm) SELECT ScreenObjId, ScreenId, MasterTable, NewGroupRow, GroupRowId, GroupColId, LabelVertical, LabelCss, ContentCss, ColumnId, ColumnName, ColumnDesc, DefaultValue, HyperLinkUrl, DefAfter, SystemValue, DefAlways, ColumnWrap, GridGrpCd, HideOnTablet, HideOnMobile, ColumnJustify, ColumnSize, ResizeWidth, ColumnHeight, ResizeHeight, DisplayModeId, DdlKeyColumnId, DdlRefColumnId, DdlSrtColumnId, DdlAdnColumnId, DdlFtrColumnId, AggregateCd, GenerateSp, TabFolderId, TabIndex, SortOrder, RequiredValid, MaskValid, RangeValidType, RangeValidMax, RangeValidMin, ColumnLink, RefreshOnCUD, TrimOnEntry, MatchCd, IgnoreConfirm FROM dbo.Tmp_ScreenObj SET IDENTITY_INSERT dbo.ScreenObj OFF IF (SELECT COUNT(1) FROM dbo.ScreenObj) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ScreenObj) = 0 DROP TABLE dbo.Tmp_ScreenObj')
  10.  83.90829~@~10~@~M~@~Change table WebRule~@~Y~@~EXEC (' CREATE TABLE dbo.Tmp_WebRule (WebRuleId int NULL, RuleTypeId tinyint NULL, RuleName nvarchar(100) NULL, RuleDesc nvarchar(150) NULL, RuleDescription nvarchar(500) NULL, ScreenId int NULL, ScreenObjId int NULL, ButtonTypeId tinyint NULL, EventId tinyint NULL, WebRuleProg nvarchar(max) NULL)') EXEC (' INSERT INTO dbo.Tmp_WebRule (WebRuleId, RuleTypeId, RuleName, RuleDesc, RuleDescription, ScreenId, ScreenObjId, ButtonTypeId, EventId, WebRuleProg) SELECT convert(int,WebRuleId), convert(tinyint,RuleTypeId), RuleName, RuleDesc, RuleDescription, convert(int,ScreenId), convert(int,ScreenObjId), convert(tinyint,ButtonTypeId), convert(tinyint,EventId), WebRuleProg FROM dbo.WebRule IF (SELECT COUNT(1) FROM dbo.Tmp_WebRule) > 0 OR (SELECT COUNT(1) FROM dbo.WebRule) = 0 DROP TABLE dbo.WebRule') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.WebRule'')) CREATE TABLE dbo.WebRule (WebRuleId Int IDENTITY NOT NULL, RuleTypeId TinyInt NOT NULL, RuleName NVarChar(100) NOT NULL, RuleDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, ScreenId Int NOT NULL, ScreenObjId Int NULL, ButtonTypeId TinyInt NULL, EventId TinyInt NOT NULL, WebRuleProg NVarChar(max) NOT NULL, ReactEventId TinyInt NULL, ReactRuleProg NVarChar(max) NULL, ReduxEventId TinyInt NULL, ReduxRuleProg NVarChar(max) NULL, ServiceEventId TinyInt NULL, ServiceRuleProg NVarChar(max) NULL, AsmxEventId TinyInt NULL, AsmxRuleProg NVarChar(max) NULL, CONSTRAINT PK_WebRule PRIMARY KEY CLUSTERED (WebRuleId))') EXEC (' SET IDENTITY_INSERT dbo.WebRule ON INSERT INTO dbo.WebRule (WebRuleId, RuleTypeId, RuleName, RuleDesc, RuleDescription, ScreenId, ScreenObjId, ButtonTypeId, EventId, WebRuleProg) SELECT WebRuleId, RuleTypeId, RuleName, RuleDesc, RuleDescription, ScreenId, ScreenObjId, ButtonTypeId, EventId, WebRuleProg FROM dbo.Tmp_WebRule SET IDENTITY_INSERT dbo.WebRule OFF IF (SELECT COUNT(1) FROM dbo.WebRule) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_WebRule) = 0 DROP TABLE dbo.Tmp_WebRule')


  10.  83.90829~@~20~@~M~@~Change table CtRuleServiceType~@~N~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.CtRuleServiceType'')) CREATE TABLE dbo.CtRuleServiceType (RuleServiceTypeId TinyInt NOT NULL, RuleServiceTypeDesc NVarChar(50) NOT NULL, CONSTRAINT PK_CtRuleServiceType PRIMARY KEY CLUSTERED (RuleServiceTypeId))') EXEC ('') EXEC ('') EXEC ('')
  10.  83.90829~@~30~@~M~@~Change table CtRuleReduxType~@~N~@~IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id('dbo.CtRuleReduxType'))
BEGIN
EXEC ('CREATE TABLE dbo.CtRuleReduxType (RuleReduxTypeId TinyInt NOT NULL, RuleReduxTypeDesc NVarChar(50) NOT NULL, CONSTRAINT PK_CtRuleReduxType PRIMARY KEY CLUSTERED (RuleReduxTypeId))') EXEC ('INSERT dbo.CtRuleReduxType SELECT 1, ''Custom Function''')
EXEC ('INSERT dbo.CtRuleServiceType SELECT 1, ''Custom Function''')
EXEC ('DELETE FROM dbo.CtRuleReactType WHERE RuleReactTypeId in (4,5,6,7,8)')
EXEC ('INSERT dbo.CtRuleReactType SELECT 4, ''Master Record Screen Column''')
EXEC ('INSERT dbo.CtRuleReactType SELECT 5, ''Detail Record Custom Function''')
EXEC ('INSERT dbo.CtRuleReactType SELECT 6, ''Detail Record Save''')
EXEC ('INSERT dbo.CtRuleReactType SELECT 7, ''Detail Record Render''')
EXEC ('INSERT dbo.CtRuleReactType SELECT 8, ''Detail Record Screen Column''')
END
  11. 141.00403~@~10~@~M~@~Change table Menu~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Menu (MenuIndex smallint NULL, MenuId int NULL, ParentId int NULL, ReportId int NULL, ScreenId int NULL, WizardId int NULL, StaticPgId int NULL, IconUrl nvarchar(300) NULL, Popup char(1) NULL, Miscellaneous varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_Menu (MenuIndex, MenuId, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl, Popup, Miscellaneous) SELECT convert(smallint,MenuIndex), convert(int,MenuId), convert(int,ParentId), convert(int,ReportId), convert(int,ScreenId), convert(int,WizardId), convert(int,StaticPgId), IconUrl, Popup, Miscellaneous FROM dbo.Menu IF (SELECT COUNT(1) FROM dbo.Tmp_Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Menu) = 0 DROP TABLE dbo.Menu') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Menu'')) CREATE TABLE dbo.Menu (MenuId Int IDENTITY NOT NULL, MenuIndex SmallInt NOT NULL, Miscellaneous VarChar(1000) NULL, ParentId Int NULL, ReportId Int NULL, ScreenId Int NULL, WizardId Int NULL, StaticPgId Int NULL, IconUrl NVarChar(300) NULL, Popup Char(1) NOT NULL, ReactQuickMenu Char(1) NOT NULL, CONSTRAINT PK_Menu PRIMARY KEY CLUSTERED (MenuId))') EXEC (' ALTER TABLE dbo.Menu ADD CONSTRAINT DF_Menu_Popup DEFAULT (''N'') FOR Popup ALTER TABLE dbo.Menu ADD CONSTRAINT DF_Menu_ReactQuickMenu DEFAULT (''N'') FOR ReactQuickMenu SET IDENTITY_INSERT dbo.Menu ON INSERT INTO dbo.Menu (MenuId, MenuIndex, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl, Popup, ReactQuickMenu) SELECT MenuId, MenuIndex, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl, Popup, ''N'' FROM dbo.Tmp_Menu SET IDENTITY_INSERT dbo.Menu OFF IF (SELECT COUNT(1) FROM dbo.Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Menu) = 0 DROP TABLE dbo.Tmp_Menu')
  11. 141.00403~@~20~@~M~@~Change table Menu~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Menu (MenuIndex smallint NULL, MenuId int NULL, ParentId int NULL, ReportId int NULL, ScreenId int NULL, WizardId int NULL, StaticPgId int NULL, IconUrl nvarchar(300) NULL, Popup char(1) NULL, ReactQuickMenu char(1) NULL, Miscellaneous varchar(1000) NULL)') EXEC (' INSERT INTO dbo.Tmp_Menu (MenuIndex, MenuId, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl, Popup, ReactQuickMenu, Miscellaneous) SELECT convert(smallint,MenuIndex), convert(int,MenuId), convert(int,ParentId), convert(int,ReportId), convert(int,ScreenId), convert(int,WizardId), convert(int,StaticPgId), IconUrl, Popup, ReactQuickMenu, Miscellaneous FROM dbo.Menu IF (SELECT COUNT(1) FROM dbo.Tmp_Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Menu) = 0 DROP TABLE dbo.Menu') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Menu'')) CREATE TABLE dbo.Menu (MenuId Int IDENTITY NOT NULL, MenuIndex SmallInt NOT NULL, Miscellaneous VarChar(1000) NULL, ParentId Int NULL, ReportId Int NULL, ScreenId Int NULL, WizardId Int NULL, StaticPgId Int NULL, IconUrl NVarChar(300) NULL, Popup Char(1) NOT NULL, ReactQuickMenu Char(1) NOT NULL, CONSTRAINT PK_Menu PRIMARY KEY CLUSTERED (MenuId))') EXEC (' ALTER TABLE dbo.Menu ADD CONSTRAINT DF_Menu_Popup DEFAULT (''N'') FOR Popup ALTER TABLE dbo.Menu ADD CONSTRAINT DF_Menu_ReactQuickMenu DEFAULT (''N'') FOR ReactQuickMenu SET IDENTITY_INSERT dbo.Menu ON INSERT INTO dbo.Menu (MenuId, MenuIndex, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl, Popup, ReactQuickMenu) SELECT MenuId, MenuIndex, Miscellaneous, ParentId, ReportId, ScreenId, WizardId, StaticPgId, IconUrl, Popup, ReactQuickMenu FROM dbo.Tmp_Menu SET IDENTITY_INSERT dbo.Menu OFF IF (SELECT COUNT(1) FROM dbo.Menu) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Menu) = 0 DROP TABLE dbo.Tmp_Menu')
  11. 154.00422~@~10~@~M~@~Change table ServerRule~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ServerRule (RuleTypeId tinyint NULL, RuleOrder smallint NULL, ServerRuleId int NULL, ScreenId int NULL, ModifiedBy int NULL, RuleName nvarchar(100) NULL, RuleDesc nvarchar(150) NULL, RuleDescription nvarchar(500) NULL, RuleCode nvarchar(max) NULL, ModifiedOn datetime NULL, LastGenDt datetime NULL, MasterTable char(1) NULL, OnAdd char(1) NULL, OnUpd char(1) NULL, OnDel char(1) NULL, BeforeCRUD char(1) NULL, ProcedureName varchar(50) NULL, ParameterNames varchar(max) NULL, ParameterTypes varchar(max) NULL, CallingParams varchar(max) NULL)') EXEC (' INSERT INTO dbo.Tmp_ServerRule (RuleTypeId, RuleOrder, ServerRuleId, ScreenId, ModifiedBy, RuleName, RuleDesc, RuleDescription, RuleCode, ModifiedOn, LastGenDt, MasterTable, OnAdd, OnUpd, OnDel, BeforeCRUD, ProcedureName, ParameterNames, ParameterTypes, CallingParams) SELECT convert(tinyint,RuleTypeId), convert(smallint,RuleOrder), convert(int,ServerRuleId), convert(int,ScreenId), convert(int,ModifiedBy), RuleName, RuleDesc, RuleDescription, RuleCode, ModifiedOn, LastGenDt, MasterTable, OnAdd, OnUpd, OnDel, BeforeCRUD, ProcedureName, ParameterNames, ParameterTypes, CallingParams FROM dbo.ServerRule IF (SELECT COUNT(1) FROM dbo.Tmp_ServerRule) > 0 OR (SELECT COUNT(1) FROM dbo.ServerRule) = 0 DROP TABLE dbo.ServerRule') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ServerRule'')) CREATE TABLE dbo.ServerRule (ServerRuleId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, RuleTypeId TinyInt NOT NULL, MasterTable Char(1) NOT NULL, RuleName NVarChar(100) NOT NULL, RuleDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, RuleOrder SmallInt NOT NULL, ProcedureName VarChar(50) NOT NULL, ParameterNames VarChar(max) NULL, ParameterTypes VarChar(max) NULL, CallingParams VarChar(max) NULL, OnAdd Char(1) NOT NULL, OnUpd Char(1) NOT NULL, OnDel Char(1) NOT NULL, BeforeCRUD Char(1) NOT NULL, RuleCode NVarChar(max) NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastGenDt DateTime NULL, Guid VarChar(50) NOT NULL, RunMode Char(1) NULL, CONSTRAINT PK_ServerRule PRIMARY KEY CLUSTERED (ServerRuleId))') EXEC (' ALTER TABLE dbo.ServerRule ADD CONSTRAINT DF_ServerRule_Guid DEFAULT (NEWID()) FOR Guid SET IDENTITY_INSERT dbo.ServerRule ON INSERT INTO dbo.ServerRule (ServerRuleId, ScreenId, RuleTypeId, MasterTable, RuleName, RuleDesc, RuleDescription, RuleOrder, ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, ModifiedBy, ModifiedOn, LastGenDt, Guid) SELECT ServerRuleId, ScreenId, RuleTypeId, MasterTable, RuleName, RuleDesc, RuleDescription, RuleOrder, ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, ModifiedBy, ModifiedOn, LastGenDt, NEWID() FROM dbo.Tmp_ServerRule SET IDENTITY_INSERT dbo.ServerRule OFF IF (SELECT COUNT(1) FROM dbo.ServerRule) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ServerRule) = 0 DROP TABLE dbo.Tmp_ServerRule IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IX_ServerRule'') CREATE NONCLUSTERED INDEX IX_ServerRule ON dbo.ServerRule(ScreenId,RuleOrder)')
  11. 155.00423~@~10~@~M~@~Add table AtServerRule~@~Y~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AtServerRule'')) CREATE TABLE dbo.AtServerRule (ServerRuleId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, RuleTypeId TinyInt NOT NULL, MasterTable Char(1) NOT NULL, RuleName NVarChar(100) NOT NULL, RuleDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, RuleOrder SmallInt NOT NULL, ProcedureName VarChar(50) NOT NULL, ParameterNames VarChar(max) NULL, ParameterTypes VarChar(max) NULL, CallingParams VarChar(max) NULL, OnAdd Char(1) NOT NULL, OnUpd Char(1) NOT NULL, OnDel Char(1) NOT NULL, BeforeCRUD Char(1) NOT NULL, RuleCode NVarChar(max) NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastGenDt DateTime NULL, Guid VarChar(50) NOT NULL, RunMode Char(1) NULL, CONSTRAINT PK_AtServerRule PRIMARY KEY CLUSTERED (ServerRuleId))') 

  11. 155.00423~@~20~@~M~@~Change table ServerRule~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_ServerRule (RuleTypeId tinyint NULL, RuleOrder smallint NULL, ServerRuleId int NULL, ScreenId int NULL, ModifiedBy int NULL, RuleName nvarchar(100) NULL, RuleDesc nvarchar(150) NULL, RuleDescription nvarchar(500) NULL, RuleCode nvarchar(max) NULL, ModifiedOn datetime NULL, LastGenDt datetime NULL, MasterTable char(1) NULL, OnAdd char(1) NULL, OnUpd char(1) NULL, OnDel char(1) NULL, BeforeCRUD char(1) NULL, RunMode char(1) NULL, ProcedureName varchar(50) NULL, ParameterNames varchar(max) NULL, ParameterTypes varchar(max) NULL, CallingParams varchar(max) NULL, Guid varchar(50) NULL)') EXEC (' INSERT INTO dbo.Tmp_ServerRule (RuleTypeId, RuleOrder, ServerRuleId, ScreenId, ModifiedBy, RuleName, RuleDesc, RuleDescription, RuleCode, ModifiedOn, LastGenDt, MasterTable, OnAdd, OnUpd, OnDel, BeforeCRUD, RunMode, ProcedureName, ParameterNames, ParameterTypes, CallingParams, Guid) SELECT convert(tinyint,RuleTypeId), convert(smallint,RuleOrder), convert(int,ServerRuleId), convert(int,ScreenId), convert(int,ModifiedBy), RuleName, RuleDesc, RuleDescription, RuleCode, ModifiedOn, LastGenDt, MasterTable, OnAdd, OnUpd, OnDel, BeforeCRUD, RunMode, ProcedureName, ParameterNames, ParameterTypes, CallingParams, Guid FROM dbo.ServerRule IF (SELECT COUNT(1) FROM dbo.Tmp_ServerRule) > 0 OR (SELECT COUNT(1) FROM dbo.ServerRule) = 0 DROP TABLE dbo.ServerRule') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.ServerRule'')) CREATE TABLE dbo.ServerRule (ServerRuleId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, RuleTypeId TinyInt NOT NULL, MasterTable Char(1) NOT NULL, RuleName NVarChar(100) NOT NULL, RuleDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, RuleOrder SmallInt NOT NULL, ProcedureName VarChar(50) NOT NULL, ParameterNames VarChar(max) NULL, ParameterTypes VarChar(max) NULL, CallingParams VarChar(max) NULL, OnAdd Char(1) NOT NULL, OnUpd Char(1) NOT NULL, OnDel Char(1) NOT NULL, BeforeCRUD Char(1) NOT NULL, RuleCode NVarChar(max) NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastGenDt DateTime NULL, Guid VarChar(50) NOT NULL, RunMode Char(1) NULL, SrcNS VarChar(30) NULL, CONSTRAINT PK_ServerRule PRIMARY KEY CLUSTERED (ServerRuleId))') EXEC (' ALTER TABLE dbo.ServerRule ADD CONSTRAINT DF_ServerRule_Guid DEFAULT (NEWID()) FOR Guid SET IDENTITY_INSERT dbo.ServerRule ON INSERT INTO dbo.ServerRule (ServerRuleId, ScreenId, RuleTypeId, MasterTable, RuleName, RuleDesc, RuleDescription, RuleOrder, ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, ModifiedBy, ModifiedOn, LastGenDt, Guid, RunMode) SELECT ServerRuleId, ScreenId, RuleTypeId, MasterTable, RuleName, RuleDesc, RuleDescription, RuleOrder, ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, ModifiedBy, ModifiedOn, LastGenDt, Guid, RunMode FROM dbo.Tmp_ServerRule SET IDENTITY_INSERT dbo.ServerRule OFF IF (SELECT COUNT(1) FROM dbo.ServerRule) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_ServerRule) = 0 DROP TABLE dbo.Tmp_ServerRule IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IX_ServerRule'') CREATE NONCLUSTERED INDEX IX_ServerRule ON dbo.ServerRule(ScreenId,RuleOrder)')
  11. 155.00423~@~40~@~M~@~Change table AtServerRule~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_AtServerRule (RuleTypeId tinyint NULL, RuleOrder smallint NULL, ServerRuleId int NULL, ScreenId int NULL, ModifiedBy int NULL, RuleName nvarchar(100) NULL, RuleDesc nvarchar(150) NULL, RuleDescription nvarchar(500) NULL, RuleCode nvarchar(max) NULL, ModifiedOn datetime NULL, LastGenDt datetime NULL, MasterTable char(1) NULL, OnAdd char(1) NULL, OnUpd char(1) NULL, OnDel char(1) NULL, BeforeCRUD char(1) NULL, RunMode char(1) NULL, ProcedureName varchar(50) NULL, ParameterNames varchar(max) NULL, ParameterTypes varchar(max) NULL, CallingParams varchar(max) NULL, Guid varchar(50) NULL)') EXEC (' INSERT INTO dbo.Tmp_AtServerRule (RuleTypeId, RuleOrder, ServerRuleId, ScreenId, ModifiedBy, RuleName, RuleDesc, RuleDescription, RuleCode, ModifiedOn, LastGenDt, MasterTable, OnAdd, OnUpd, OnDel, BeforeCRUD, RunMode, ProcedureName, ParameterNames, ParameterTypes, CallingParams, Guid) SELECT convert(tinyint,RuleTypeId), convert(smallint,RuleOrder), convert(int,ServerRuleId), convert(int,ScreenId), convert(int,ModifiedBy), RuleName, RuleDesc, RuleDescription, RuleCode, ModifiedOn, LastGenDt, MasterTable, OnAdd, OnUpd, OnDel, BeforeCRUD, RunMode, ProcedureName, ParameterNames, ParameterTypes, CallingParams, Guid FROM dbo.AtServerRule IF (SELECT COUNT(1) FROM dbo.Tmp_AtServerRule) > 0 OR (SELECT COUNT(1) FROM dbo.AtServerRule) = 0 DROP TABLE dbo.AtServerRule') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AtServerRule'')) CREATE TABLE dbo.AtServerRule (ServerRuleId Int IDENTITY NOT NULL, ScreenId Int NOT NULL, RuleTypeId TinyInt NOT NULL, MasterTable Char(1) NOT NULL, RuleName NVarChar(100) NOT NULL, RuleDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, RuleOrder SmallInt NOT NULL, ProcedureName VarChar(50) NOT NULL, ParameterNames VarChar(max) NULL, ParameterTypes VarChar(max) NULL, CallingParams VarChar(max) NULL, OnAdd Char(1) NOT NULL, OnUpd Char(1) NOT NULL, OnDel Char(1) NOT NULL, BeforeCRUD Char(1) NOT NULL, RuleCode NVarChar(max) NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastGenDt DateTime NULL, Guid VarChar(50) NOT NULL, RunMode Char(1) NULL, SrcNS VarChar(30) NULL, CONSTRAINT PK_AtServerRule PRIMARY KEY CLUSTERED (ServerRuleId))') EXEC (' SET IDENTITY_INSERT dbo.AtServerRule ON INSERT INTO dbo.AtServerRule (ServerRuleId, ScreenId, RuleTypeId, MasterTable, RuleName, RuleDesc, RuleDescription, RuleOrder, ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, ModifiedBy, ModifiedOn, LastGenDt, Guid, RunMode) SELECT ServerRuleId, ScreenId, RuleTypeId, MasterTable, RuleName, RuleDesc, RuleDescription, RuleOrder, ProcedureName, ParameterNames, ParameterTypes, CallingParams, OnAdd, OnUpd, OnDel, BeforeCRUD, RuleCode, ModifiedBy, ModifiedOn, LastGenDt, Guid, RunMode FROM dbo.Tmp_AtServerRule SET IDENTITY_INSERT dbo.AtServerRule OFF IF (SELECT COUNT(1) FROM dbo.AtServerRule) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_AtServerRule) = 0 DROP TABLE dbo.Tmp_AtServerRule')
  11. 155.00423~@~30~@~M~@~Update SrvNS for ServerRule~@~Y~@~EXEC('
UPDATE r
SET SrcNS = ISNULL(SrcNS, ns.MyNS)
FROM
dbo.ServerRule r
INNER JOIN
(
SELECT
MyNS = REPLACE(s.dbDesDatabase, ''Design'', '''')
FROM
[[?]]Design.dbo.Systems s
WHERE s.SysProgram = ''Y''
AND s.Active =''Y''
) ns ON 1=1
WHERE r.SrcNS IS NULL
')
  11. 157.00424~@~10~@~M~@~Add table AtServerRuleOvrdPrm~@~Y~@~EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AtServerRuleOvrdPrm'')) CREATE TABLE dbo.AtServerRuleOvrdPrm (ServerRuledOvrdPrmId Int IDENTITY NOT NULL, ServerRuleId Int NOT NULL, PermKeyId SmallInt NOT NULL, Suppress Char(1) NOT NULL, AndCondition Char(1) NOT NULL, CONSTRAINT PK_AtServerRuleOvrdPrm PRIMARY KEY CLUSTERED (ServerRuledOvrdPrmId))') 
  11. 158.00425~@~10~@~M~@~Change table AtServerRuleOvrdPrm~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_AtServerRuleOvrdPrm (PermKeyId smallint NULL, ServerRuledOvrdPrmId int NULL, ServerRuleId int NULL, Suppress char(1) NULL, AndCondition char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_AtServerRuleOvrdPrm (PermKeyId, ServerRuledOvrdPrmId, ServerRuleId, Suppress, AndCondition) SELECT convert(smallint,PermKeyId), convert(int,ServerRuledOvrdPrmId), convert(int,ServerRuleId), Suppress, AndCondition FROM dbo.AtServerRuleOvrdPrm IF (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.AtServerRuleOvrdPrm) = 0 DROP TABLE dbo.AtServerRuleOvrdPrm') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AtServerRuleOvrdPrm'')) CREATE TABLE dbo.AtServerRuleOvrdPrm (ServerRuledOvrdPrmId Int IDENTITY NOT NULL, ServerRuleId Int NOT NULL, PermKeyId SmallInt NOT NULL, AndCondition Char(1) NOT NULL, CONSTRAINT PK_AtServerRuleOvrdPrm PRIMARY KEY CLUSTERED (ServerRuledOvrdPrmId))') EXEC (' SET IDENTITY_INSERT dbo.AtServerRuleOvrdPrm ON INSERT INTO dbo.AtServerRuleOvrdPrm (ServerRuledOvrdPrmId, ServerRuleId, PermKeyId, AndCondition) SELECT ServerRuledOvrdPrmId, ServerRuleId, PermKeyId, AndCondition FROM dbo.Tmp_AtServerRuleOvrdPrm SET IDENTITY_INSERT dbo.AtServerRuleOvrdPrm OFF IF (SELECT COUNT(1) FROM dbo.AtServerRuleOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrdPrm) = 0 DROP TABLE dbo.Tmp_AtServerRuleOvrdPrm')
  11. 158.00425~@~20~@~M~@~Add table AtServerRuleOvrd~@~Y~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AtServerRuleOvrd'')) CREATE TABLE dbo.AtServerRuleOvrd (AtServerRuleOvrdId Int IDENTITY NOT NULL, ServerRuleOvrdDesc VarChar(1000) NULL, ServerRuleOvrdName VarChar(500) NOT NULL, ServerRuleId Int NOT NULL, Disable Char(1) NOT NULL, CONSTRAINT PK_AtServerRuleOvrd PRIMARY KEY CLUSTERED (AtServerRuleOvrdId))')
  11. 158.00425~@~30~@~M~@~Change table AtServerRuleOvrdPrm~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_AtServerRuleOvrdPrm (PermKeyId smallint NULL, ServerRuledOvrdPrmId int NULL, ServerRuleId int NULL, AndCondition char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_AtServerRuleOvrdPrm (PermKeyId, ServerRuledOvrdPrmId, ServerRuleId, AndCondition) SELECT convert(smallint,PermKeyId), convert(int,ServerRuledOvrdPrmId), convert(int,ServerRuleId), AndCondition FROM dbo.AtServerRuleOvrdPrm IF (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.AtServerRuleOvrdPrm) = 0 DROP TABLE dbo.AtServerRuleOvrdPrm') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AtServerRuleOvrdPrm'')) CREATE TABLE dbo.AtServerRuleOvrdPrm (ServerRuledOvrdPrmId Int IDENTITY NOT NULL, PermKeyId SmallInt NOT NULL, AndCondition Char(1) NOT NULL, ServerRuleOvrdId Int NOT NULL, CONSTRAINT PK_AtServerRuleOvrdPrm PRIMARY KEY CLUSTERED (ServerRuledOvrdPrmId))') EXEC (' ALTER TABLE dbo.AtServerRuleOvrdPrm ADD CONSTRAINT DF_AtServerRuleOvrdPrm_ServerRuleOvrdId DEFAULT (-1) FOR ServerRuleOvrdId SET IDENTITY_INSERT dbo.AtServerRuleOvrdPrm ON INSERT INTO dbo.AtServerRuleOvrdPrm (ServerRuledOvrdPrmId, PermKeyId, AndCondition, ServerRuleOvrdId) SELECT ServerRuledOvrdPrmId, PermKeyId, AndCondition, -1 FROM dbo.Tmp_AtServerRuleOvrdPrm SET IDENTITY_INSERT dbo.AtServerRuleOvrdPrm OFF IF (SELECT COUNT(1) FROM dbo.AtServerRuleOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrdPrm) = 0 DROP TABLE dbo.Tmp_AtServerRuleOvrdPrm')
  11. 158.00425~@~40~@~M~@~Change table AtServerRuleOvrdPrm~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_AtServerRuleOvrdPrm (PermKeyId smallint NULL, ServerRuledOvrdPrmId int NULL, ServerRuleOvrdId int NULL, AndCondition char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_AtServerRuleOvrdPrm (PermKeyId, ServerRuledOvrdPrmId, ServerRuleOvrdId, AndCondition) SELECT convert(smallint,PermKeyId), convert(int,ServerRuledOvrdPrmId), convert(int,ServerRuleOvrdId), AndCondition FROM dbo.AtServerRuleOvrdPrm IF (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.AtServerRuleOvrdPrm) = 0 DROP TABLE dbo.AtServerRuleOvrdPrm') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AtServerRuleOvrdPrm'')) CREATE TABLE dbo.AtServerRuleOvrdPrm (ServerRuledOvrdPrmId Int IDENTITY NOT NULL, PermKeyId SmallInt NOT NULL, AndCondition Char(1) NOT NULL, AtServerRuleOvrdId Int NOT NULL, CONSTRAINT PK_AtServerRuleOvrdPrm PRIMARY KEY CLUSTERED (ServerRuledOvrdPrmId))') EXEC (' ALTER TABLE dbo.AtServerRuleOvrdPrm ADD CONSTRAINT DF_AtServerRuleOvrdPrm_AtServerRuleOvrdId DEFAULT (-1) FOR AtServerRuleOvrdId SET IDENTITY_INSERT dbo.AtServerRuleOvrdPrm ON INSERT INTO dbo.AtServerRuleOvrdPrm (ServerRuledOvrdPrmId, PermKeyId, AndCondition, AtServerRuleOvrdId) SELECT ServerRuledOvrdPrmId, PermKeyId, AndCondition, -1 FROM dbo.Tmp_AtServerRuleOvrdPrm SET IDENTITY_INSERT dbo.AtServerRuleOvrdPrm OFF IF (SELECT COUNT(1) FROM dbo.AtServerRuleOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrdPrm) = 0 DROP TABLE dbo.Tmp_AtServerRuleOvrdPrm')
  11. 158.00425~@~50~@~M~@~Change table AtServerRuleOvrd~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_AtServerRuleOvrd (AtServerRuleOvrdId int NULL, ServerRuleId int NULL, Disable char(1) NULL, ServerRuleOvrdDesc varchar(1000) NULL, ServerRuleOvrdName varchar(500) NULL)') EXEC (' INSERT INTO dbo.Tmp_AtServerRuleOvrd (AtServerRuleOvrdId, ServerRuleId, Disable, ServerRuleOvrdDesc, ServerRuleOvrdName) SELECT convert(int,AtServerRuleOvrdId), convert(int,ServerRuleId), Disable, ServerRuleOvrdDesc, ServerRuleOvrdName FROM dbo.AtServerRuleOvrd IF (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrd) > 0 OR (SELECT COUNT(1) FROM dbo.AtServerRuleOvrd) = 0 DROP TABLE dbo.AtServerRuleOvrd') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AtServerRuleOvrd'')) CREATE TABLE dbo.AtServerRuleOvrd (AtServerRuleOvrdId Int IDENTITY NOT NULL, ServerRuleOvrdDesc VarChar(1000) NULL, ServerRuleOvrdName VarChar(500) NOT NULL, ServerRuleId Int NOT NULL, Disable Char(1) NOT NULL, ServerRuleGuid VarChar(50) NULL, ScreenId Int NULL, Priority SmallInt NULL, CONSTRAINT PK_AtServerRuleOvrd PRIMARY KEY CLUSTERED (AtServerRuleOvrdId))') EXEC (' SET IDENTITY_INSERT dbo.AtServerRuleOvrd ON INSERT INTO dbo.AtServerRuleOvrd (AtServerRuleOvrdId, ServerRuleOvrdDesc, ServerRuleOvrdName, ServerRuleId, Disable) SELECT AtServerRuleOvrdId, ServerRuleOvrdDesc, ServerRuleOvrdName, ServerRuleId, Disable FROM dbo.Tmp_AtServerRuleOvrd SET IDENTITY_INSERT dbo.AtServerRuleOvrd OFF IF (SELECT COUNT(1) FROM dbo.AtServerRuleOvrd) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrd) = 0 DROP TABLE dbo.Tmp_AtServerRuleOvrd')
  11. 158.00425~@~60~@~M~@~Change table AtServerRuleOvrdPrm~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_AtServerRuleOvrdPrm (PermKeyId smallint NULL, ServerRuledOvrdPrmId int NULL, AtServerRuleOvrdId int NULL, AndCondition char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_AtServerRuleOvrdPrm (PermKeyId, ServerRuledOvrdPrmId, AtServerRuleOvrdId, AndCondition) SELECT convert(smallint,PermKeyId), convert(int,ServerRuledOvrdPrmId), convert(int,AtServerRuleOvrdId), AndCondition FROM dbo.AtServerRuleOvrdPrm IF (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.AtServerRuleOvrdPrm) = 0 DROP TABLE dbo.AtServerRuleOvrdPrm') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AtServerRuleOvrdPrm'')) CREATE TABLE dbo.AtServerRuleOvrdPrm (ServerRuledOvrdPrmId Int IDENTITY NOT NULL, PermKeyId SmallInt NOT NULL, AndCondition Char(1) NOT NULL, AtServerRuleOvrdId Int NOT NULL, PermKeyRowIdLs VarChar(max) NULL, PermIdLs VarChar(max) NULL, CONSTRAINT PK_AtServerRuleOvrdPrm PRIMARY KEY CLUSTERED (ServerRuledOvrdPrmId))') EXEC (' ALTER TABLE dbo.AtServerRuleOvrdPrm ADD CONSTRAINT DF_AtServerRuleOvrdPrm_AtServerRuleOvrdId DEFAULT (-1) FOR AtServerRuleOvrdId SET IDENTITY_INSERT dbo.AtServerRuleOvrdPrm ON INSERT INTO dbo.AtServerRuleOvrdPrm (ServerRuledOvrdPrmId, PermKeyId, AndCondition, AtServerRuleOvrdId) SELECT ServerRuledOvrdPrmId, PermKeyId, AndCondition, AtServerRuleOvrdId FROM dbo.Tmp_AtServerRuleOvrdPrm SET IDENTITY_INSERT dbo.AtServerRuleOvrdPrm OFF IF (SELECT COUNT(1) FROM dbo.AtServerRuleOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrdPrm) = 0 DROP TABLE dbo.Tmp_AtServerRuleOvrdPrm')
  11. 159.00425~@~10~@~M~@~Change table AtServerRuleOvrdPrm~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_AtServerRuleOvrdPrm (PermKeyId smallint NULL, ServerRuledOvrdPrmId int NULL, AtServerRuleOvrdId int NULL, AndCondition char(1) NULL, PermKeyRowIdLs varchar(max) NULL, PermIdLs varchar(max) NULL)') EXEC (' INSERT INTO dbo.Tmp_AtServerRuleOvrdPrm (PermKeyId, ServerRuledOvrdPrmId, AtServerRuleOvrdId, AndCondition, PermKeyRowIdLs, PermIdLs) SELECT convert(smallint,PermKeyId), convert(int,ServerRuledOvrdPrmId), convert(int,AtServerRuleOvrdId), AndCondition, PermKeyRowIdLs, PermIdLs FROM dbo.AtServerRuleOvrdPrm IF (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.AtServerRuleOvrdPrm) = 0 DROP TABLE dbo.AtServerRuleOvrdPrm') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AtServerRuleOvrdPrm'')) CREATE TABLE dbo.AtServerRuleOvrdPrm (ServerRuledOvrdPrmId Int IDENTITY NOT NULL, PermKeyId SmallInt NOT NULL, AndCondition Char(1) NOT NULL, AtServerRuleOvrdId Int NOT NULL, Match Char(1) NOT NULL, PermKeyRowId Int NULL, PermId Int NULL, CONSTRAINT PK_AtServerRuleOvrdPrm PRIMARY KEY CLUSTERED (ServerRuledOvrdPrmId))') EXEC (' ALTER TABLE dbo.AtServerRuleOvrdPrm ADD CONSTRAINT DF_AtServerRuleOvrdPrm_AtServerRuleOvrdId DEFAULT (-1) FOR AtServerRuleOvrdId ALTER TABLE dbo.AtServerRuleOvrdPrm ADD CONSTRAINT DF_AtServerRuleOvrdPrm_Match DEFAULT (''Y'') FOR Match SET IDENTITY_INSERT dbo.AtServerRuleOvrdPrm ON INSERT INTO dbo.AtServerRuleOvrdPrm (ServerRuledOvrdPrmId, PermKeyId, AndCondition, AtServerRuleOvrdId, Match) SELECT ServerRuledOvrdPrmId, PermKeyId, AndCondition, AtServerRuleOvrdId, ''Y'' FROM dbo.Tmp_AtServerRuleOvrdPrm SET IDENTITY_INSERT dbo.AtServerRuleOvrdPrm OFF IF (SELECT COUNT(1) FROM dbo.AtServerRuleOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrdPrm) = 0 DROP TABLE dbo.Tmp_AtServerRuleOvrdPrm')
  11. 161.00429~@~10~@~M~@~Change table AtServerRuleOvrd~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_AtServerRuleOvrd (Priority smallint NULL, AtServerRuleOvrdId int NULL, ServerRuleId int NULL, ScreenId int NULL, Disable char(1) NULL, ServerRuleOvrdDesc varchar(1000) NULL, ServerRuleOvrdName varchar(500) NULL, ServerRuleGuid varchar(50) NULL)') EXEC (' INSERT INTO dbo.Tmp_AtServerRuleOvrd (Priority, AtServerRuleOvrdId, ServerRuleId, ScreenId, Disable, ServerRuleOvrdDesc, ServerRuleOvrdName, ServerRuleGuid) SELECT convert(smallint,Priority), convert(int,AtServerRuleOvrdId), convert(int,ServerRuleId), convert(int,ScreenId), Disable, ServerRuleOvrdDesc, ServerRuleOvrdName, ServerRuleGuid FROM dbo.AtServerRuleOvrd IF (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrd) > 0 OR (SELECT COUNT(1) FROM dbo.AtServerRuleOvrd) = 0 DROP TABLE dbo.AtServerRuleOvrd') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AtServerRuleOvrd'')) CREATE TABLE dbo.AtServerRuleOvrd (AtServerRuleOvrdId Int IDENTITY NOT NULL, ServerRuleOvrdDesc VarChar(1000) NULL, ServerRuleOvrdName VarChar(500) NOT NULL, ServerRuleId Int NOT NULL, Disable Char(1) NOT NULL, ServerRuleGuid VarChar(50) NULL, ScreenId Int NULL, Priority SmallInt NULL, Guid VarChar(50) NOT NULL, CONSTRAINT PK_AtServerRuleOvrd PRIMARY KEY CLUSTERED (AtServerRuleOvrdId))') EXEC (' ALTER TABLE dbo.AtServerRuleOvrd ADD CONSTRAINT DF_AtServerRuleOvrd_Guid DEFAULT (NEWID()) FOR Guid SET IDENTITY_INSERT dbo.AtServerRuleOvrd ON INSERT INTO dbo.AtServerRuleOvrd (AtServerRuleOvrdId, ServerRuleOvrdDesc, ServerRuleOvrdName, ServerRuleId, Disable, ServerRuleGuid, ScreenId, Priority, Guid) SELECT AtServerRuleOvrdId, ServerRuleOvrdDesc, ServerRuleOvrdName, ServerRuleId, Disable, ServerRuleGuid, ScreenId, Priority, NEWID() FROM dbo.Tmp_AtServerRuleOvrd SET IDENTITY_INSERT dbo.AtServerRuleOvrd OFF IF (SELECT COUNT(1) FROM dbo.AtServerRuleOvrd) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrd) = 0 DROP TABLE dbo.Tmp_AtServerRuleOvrd')
  11. 161.00429~@~20~@~M~@~Change table AtServerRuleOvrdPrm~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_AtServerRuleOvrdPrm (PermKeyId smallint NULL, ServerRuledOvrdPrmId int NULL, AtServerRuleOvrdId int NULL, PermKeyRowId int NULL, PermId int NULL, AndCondition char(1) NULL, Match char(1) NULL)') EXEC (' INSERT INTO dbo.Tmp_AtServerRuleOvrdPrm (PermKeyId, ServerRuledOvrdPrmId, AtServerRuleOvrdId, PermKeyRowId, PermId, AndCondition, Match) SELECT convert(smallint,PermKeyId), convert(int,ServerRuledOvrdPrmId), convert(int,AtServerRuleOvrdId), convert(int,PermKeyRowId), convert(int,PermId), AndCondition, Match FROM dbo.AtServerRuleOvrdPrm IF (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.AtServerRuleOvrdPrm) = 0 DROP TABLE dbo.AtServerRuleOvrdPrm') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AtServerRuleOvrdPrm'')) CREATE TABLE dbo.AtServerRuleOvrdPrm (ServerRuledOvrdPrmId Int IDENTITY NOT NULL, PermKeyId SmallInt NOT NULL, AndCondition Char(1) NOT NULL, AtServerRuleOvrdId Int NOT NULL, Match Char(1) NOT NULL, PermKeyRowId Int NULL, PermId Int NULL, Guid VarChar(50) NOT NULL, AtServerRuleOvrdGuid VarChar(50) NULL, CONSTRAINT PK_AtServerRuleOvrdPrm PRIMARY KEY CLUSTERED (ServerRuledOvrdPrmId))') EXEC (' ALTER TABLE dbo.AtServerRuleOvrdPrm ADD CONSTRAINT DF_AtServerRuleOvrdPrm_AtServerRuleOvrdId DEFAULT (-1) FOR AtServerRuleOvrdId ALTER TABLE dbo.AtServerRuleOvrdPrm ADD CONSTRAINT DF_AtServerRuleOvrdPrm_Match DEFAULT (''Y'') FOR Match ALTER TABLE dbo.AtServerRuleOvrdPrm ADD CONSTRAINT DF_AtServerRuleOvrdPrm_Guid DEFAULT (NEWID()) FOR Guid SET IDENTITY_INSERT dbo.AtServerRuleOvrdPrm ON INSERT INTO dbo.AtServerRuleOvrdPrm (ServerRuledOvrdPrmId, PermKeyId, AndCondition, AtServerRuleOvrdId, Match, PermKeyRowId, PermId, Guid) SELECT ServerRuledOvrdPrmId, PermKeyId, AndCondition, AtServerRuleOvrdId, Match, PermKeyRowId, PermId, NEWID() FROM dbo.Tmp_AtServerRuleOvrdPrm SET IDENTITY_INSERT dbo.AtServerRuleOvrdPrm OFF IF (SELECT COUNT(1) FROM dbo.AtServerRuleOvrdPrm) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrdPrm) = 0 DROP TABLE dbo.Tmp_AtServerRuleOvrdPrm')
  11. 162.00430~@~10~@~M~@~Change table AtServerRuleOvrd~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_AtServerRuleOvrd (Priority smallint NULL, AtServerRuleOvrdId int NULL, ServerRuleId int NULL, ScreenId int NULL, Disable char(1) NULL, ServerRuleOvrdDesc varchar(1000) NULL, ServerRuleOvrdName varchar(500) NULL, ServerRuleGuid varchar(50) NULL, Guid varchar(50) NULL)') EXEC (' INSERT INTO dbo.Tmp_AtServerRuleOvrd (Priority, AtServerRuleOvrdId, ServerRuleId, ScreenId, Disable, ServerRuleOvrdDesc, ServerRuleOvrdName, ServerRuleGuid, Guid) SELECT convert(smallint,Priority), convert(int,AtServerRuleOvrdId), convert(int,ServerRuleId), convert(int,ScreenId), Disable, ServerRuleOvrdDesc, ServerRuleOvrdName, ServerRuleGuid, Guid FROM dbo.AtServerRuleOvrd IF (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrd) > 0 OR (SELECT COUNT(1) FROM dbo.AtServerRuleOvrd) = 0 DROP TABLE dbo.AtServerRuleOvrd') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.AtServerRuleOvrd'')) CREATE TABLE dbo.AtServerRuleOvrd (AtServerRuleOvrdId Int IDENTITY NOT NULL, ServerRuleOvrdDesc VarChar(1000) NULL, ServerRuleOvrdName VarChar(500) NOT NULL, ServerRuleId Int NOT NULL, Disable Char(1) NOT NULL, ServerRuleGuid VarChar(50) NULL, ScreenId Int NULL, Priority SmallInt NULL, Guid VarChar(50) NOT NULL, RunMode Char(1) NULL, CONSTRAINT PK_AtServerRuleOvrd PRIMARY KEY CLUSTERED (AtServerRuleOvrdId))') EXEC (' ALTER TABLE dbo.AtServerRuleOvrd ADD CONSTRAINT DF_AtServerRuleOvrd_Guid DEFAULT (NEWID()) FOR Guid SET IDENTITY_INSERT dbo.AtServerRuleOvrd ON INSERT INTO dbo.AtServerRuleOvrd (AtServerRuleOvrdId, ServerRuleOvrdDesc, ServerRuleOvrdName, ServerRuleId, Disable, ServerRuleGuid, ScreenId, Priority, Guid) SELECT AtServerRuleOvrdId, ServerRuleOvrdDesc, ServerRuleOvrdName, ServerRuleId, Disable, ServerRuleGuid, ScreenId, Priority, Guid FROM dbo.Tmp_AtServerRuleOvrd SET IDENTITY_INSERT dbo.AtServerRuleOvrd OFF IF (SELECT COUNT(1) FROM dbo.AtServerRuleOvrd) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_AtServerRuleOvrd) = 0 DROP TABLE dbo.Tmp_AtServerRuleOvrd')
  11. 162.00430~@~20~@~M~@~Add table utServerRuleOvrd~@~Y~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.utServerRuleOvrd'')) CREATE TABLE dbo.utServerRuleOvrd (AtServerRuleOvrdId Int NOT NULL, ServerRuleOvrdDesc VarChar(1000) NULL, ServerRuleOvrdName VarChar(500) NOT NULL, ServerRuleId Int NOT NULL, Disable Char(1) NOT NULL, ServerRuleGuid VarChar(50) NULL, ScreenId Int NULL, Priority SmallInt NULL, Guid VarChar(50) NOT NULL, RunMode Char(1) NULL, CONSTRAINT PK_utServerRuleOvrd PRIMARY KEY CLUSTERED (AtServerRuleOvrdId))') EXEC (' ALTER TABLE dbo.utServerRuleOvrd ADD CONSTRAINT DF_utServerRuleOvrd_Guid DEFAULT (NEWID()) FOR Guid') EXEC ('') EXEC ('')
  11. 162.00430~@~30~@~M~@~Add table utServerRuleOvrdPrm~@~Y~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.utServerRuleOvrdPrm'')) CREATE TABLE dbo.utServerRuleOvrdPrm (ServerRuledOvrdPrmId Int IDENTITY NOT NULL, PermKeyId SmallInt NOT NULL, AndCondition Char(1) NOT NULL, AtServerRuleOvrdId Int NOT NULL, Match Char(1) NOT NULL, PermKeyRowId Int NULL, PermId Int NULL, Guid VarChar(50) NOT NULL, AtServerRuleOvrdGuid VarChar(50) NULL, CONSTRAINT PK_utServerRuleOvrdPrm PRIMARY KEY CLUSTERED (ServerRuledOvrdPrmId))') EXEC (' ALTER TABLE dbo.utServerRuleOvrdPrm ADD CONSTRAINT DF_utServerRuleOvrdPrm_AtServerRuleOvrdId DEFAULT (-1) FOR AtServerRuleOvrdId ALTER TABLE dbo.utServerRuleOvrdPrm ADD CONSTRAINT DF_utServerRuleOvrdPrm_Match DEFAULT (''Y'') FOR Match ALTER TABLE dbo.utServerRuleOvrdPrm ADD CONSTRAINT DF_utServerRuleOvrdPrm_Guid DEFAULT (NEWID()) FOR Guid') EXEC ('') EXEC ('')
  11. 168.00505~@~10~@~M~@~remove dangling foreign keys~@~Y~@~if exists (select * from dbo.sysobjects where id = object_id(N'dbo.FK_ScreenLstCri_UsrId') and OBJECTPROPERTY(id, N'IsForeignKey') = 1)
ALTER TABLE dbo.ScreenLstCri DROP CONSTRAINT FK_ScreenLstCri_UsrId 

if exists (select * from dbo.sysobjects where id = object_id(N'dbo.FK_ScreenObj_Screen') and OBJECTPROPERTY(id, N'IsForeignKey') = 1)
ALTER TABLE dbo.ScreenObj DROP CONSTRAINT FK_ScreenObj_Screen 
  11. 169.00507~@~10~@~M~@~Change table Wizard~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Wizard (WizardTypeId tinyint NULL, DefStartRow smallint NULL, WizardId int NULL, MasterTableId int NULL, WizardTitle nvarchar(50) NULL, DefWorkSheet nvarchar(50) NULL, DefOverwrite char(1) NULL, OvwrReadonly char(1) NULL, NeedRegen char(1) NULL, AuthRequired char(1) NULL, ProgramName varchar(50) NULL)') EXEC (' INSERT INTO dbo.Tmp_Wizard (WizardTypeId, DefStartRow, WizardId, MasterTableId, WizardTitle, DefWorkSheet, DefOverwrite, OvwrReadonly, NeedRegen, AuthRequired, ProgramName) SELECT convert(tinyint,WizardTypeId), convert(smallint,DefStartRow), convert(int,WizardId), convert(int,MasterTableId), WizardTitle, DefWorkSheet, DefOverwrite, OvwrReadonly, NeedRegen, AuthRequired, ProgramName FROM dbo.Wizard IF (SELECT COUNT(1) FROM dbo.Tmp_Wizard) > 0 OR (SELECT COUNT(1) FROM dbo.Wizard) = 0 DROP TABLE dbo.Wizard') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Wizard'')) CREATE TABLE dbo.Wizard (WizardId Int IDENTITY NOT NULL, WizardTypeId TinyInt NOT NULL, MasterTableId Int NOT NULL, WizardTitle NVarChar(50) NOT NULL, ProgramName VarChar(50) NOT NULL, DefWorkSheet NVarChar(50) NOT NULL, DefStartRow SmallInt NOT NULL, DefOverwrite Char(1) NOT NULL, OvwrReadonly Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, NoTrans Char(1) NOT NULL, CONSTRAINT PK_Wizard PRIMARY KEY CLUSTERED (WizardId))') EXEC (' ALTER TABLE dbo.Wizard ADD CONSTRAINT DF_Wizard_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Wizard ADD CONSTRAINT DF_Wizard_AuthRequired DEFAULT (''Y'') FOR AuthRequired ALTER TABLE dbo.Wizard ADD CONSTRAINT DF_Wizard_NoTrans DEFAULT (''N'') FOR NoTrans SET IDENTITY_INSERT dbo.Wizard ON INSERT INTO dbo.Wizard (WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, NeedRegen, AuthRequired, NoTrans) SELECT WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, NeedRegen, AuthRequired, ''N'' FROM dbo.Tmp_Wizard SET IDENTITY_INSERT dbo.Wizard OFF IF (SELECT COUNT(1) FROM dbo.Wizard) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Wizard) = 0 DROP TABLE dbo.Tmp_Wizard IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_Wizard'') CREATE UNIQUE NONCLUSTERED INDEX IU_Wizard ON dbo.Wizard(ProgramName)')
  11. 169.00507~@~20~@~M~@~Change table Wizard~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Wizard (WizardTypeId tinyint NULL, DefStartRow smallint NULL, WizardId int NULL, MasterTableId int NULL, WizardTitle nvarchar(50) NULL, DefWorkSheet nvarchar(50) NULL, DefOverwrite char(1) NULL, OvwrReadonly char(1) NULL, NeedRegen char(1) NULL, AuthRequired char(1) NULL, NoTrans char(1) NULL, ProgramName varchar(50) NULL)') EXEC (' INSERT INTO dbo.Tmp_Wizard (WizardTypeId, DefStartRow, WizardId, MasterTableId, WizardTitle, DefWorkSheet, DefOverwrite, OvwrReadonly, NeedRegen, AuthRequired, NoTrans, ProgramName) SELECT convert(tinyint,WizardTypeId), convert(smallint,DefStartRow), convert(int,WizardId), convert(int,MasterTableId), WizardTitle, DefWorkSheet, DefOverwrite, OvwrReadonly, NeedRegen, AuthRequired, NoTrans, ProgramName FROM dbo.Wizard IF (SELECT COUNT(1) FROM dbo.Tmp_Wizard) > 0 OR (SELECT COUNT(1) FROM dbo.Wizard) = 0 DROP TABLE dbo.Wizard') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Wizard'')) CREATE TABLE dbo.Wizard (WizardId Int IDENTITY NOT NULL, WizardTypeId TinyInt NOT NULL, MasterTableId Int NOT NULL, WizardTitle NVarChar(50) NOT NULL, ProgramName VarChar(50) NOT NULL, DefWorkSheet NVarChar(50) NOT NULL, DefStartRow SmallInt NOT NULL, DefOverwrite Char(1) NOT NULL, OvwrReadonly Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, NoTrans Char(1) NOT NULL, CommandTimeOut SmallInt NULL, CONSTRAINT PK_Wizard PRIMARY KEY CLUSTERED (WizardId))') EXEC (' ALTER TABLE dbo.Wizard ADD CONSTRAINT DF_Wizard_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Wizard ADD CONSTRAINT DF_Wizard_AuthRequired DEFAULT (''Y'') FOR AuthRequired ALTER TABLE dbo.Wizard ADD CONSTRAINT DF_Wizard_NoTrans DEFAULT (''N'') FOR NoTrans SET IDENTITY_INSERT dbo.Wizard ON INSERT INTO dbo.Wizard (WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, NeedRegen, AuthRequired, NoTrans) SELECT WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, NeedRegen, AuthRequired, NoTrans FROM dbo.Tmp_Wizard SET IDENTITY_INSERT dbo.Wizard OFF IF (SELECT COUNT(1) FROM dbo.Wizard) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Wizard) = 0 DROP TABLE dbo.Tmp_Wizard IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_Wizard'') CREATE UNIQUE NONCLUSTERED INDEX IU_Wizard ON dbo.Wizard(ProgramName)')
  11. 169.00507~@~30~@~M~@~Change table Report~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Report (ReportId int NULL, RptTemplate int NULL, CopyReportId int NULL, ModifiedBy int NULL, ReportDesc nvarchar(50) NULL, RegCode nvarchar(max) NULL, ValCode nvarchar(max) NULL, UpdCode nvarchar(max) NULL, XlsCode nvarchar(max) NULL, ModifiedOn datetime NULL, LastGenDt datetime NULL, OrientationCd char(1) NULL, ReportTypeCd char(1) NULL, UnitCd char(2) NULL, GenerateRp char(1) NULL, AllowSelect char(1) NULL, NeedRegen char(1) NULL, AuthRequired char(1) NULL, ProgramName varchar(20) NULL, TemplateName varchar(50) NULL, WhereClause varchar(1000) NULL, RegClause varchar(400) NULL, ValClause varchar(400) NULL, UpdClause varchar(200) NULL, XlsClause varchar(200) NULL, CompanyLs varchar(1000) NULL, TopMargin decimal(8,2) NULL, BottomMargin decimal(8,2) NULL, LeftMargin decimal(8,2) NULL, RightMargin decimal(8,2) NULL, PageHeight decimal(8,2) NULL, PageWidth decimal(8,2) NULL)') EXEC (' INSERT INTO dbo.Tmp_Report (ReportId, RptTemplate, CopyReportId, ModifiedBy, ReportDesc, RegCode, ValCode, UpdCode, XlsCode, ModifiedOn, LastGenDt, OrientationCd, ReportTypeCd, UnitCd, GenerateRp, AllowSelect, NeedRegen, AuthRequired, ProgramName, TemplateName, WhereClause, RegClause, ValClause, UpdClause, XlsClause, CompanyLs, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth) SELECT convert(int,ReportId), convert(int,RptTemplate), convert(int,CopyReportId), convert(int,ModifiedBy), ReportDesc, RegCode, ValCode, UpdCode, XlsCode, ModifiedOn, LastGenDt, OrientationCd, ReportTypeCd, UnitCd, GenerateRp, AllowSelect, NeedRegen, AuthRequired, ProgramName, TemplateName, WhereClause, RegClause, ValClause, UpdClause, XlsClause, CompanyLs, convert(decimal(8,2),TopMargin), convert(decimal(8,2),BottomMargin), convert(decimal(8,2),LeftMargin), convert(decimal(8,2),RightMargin), convert(decimal(8,2),PageHeight), convert(decimal(8,2),PageWidth) FROM dbo.Report IF (SELECT COUNT(1) FROM dbo.Tmp_Report) > 0 OR (SELECT COUNT(1) FROM dbo.Report) = 0 DROP TABLE dbo.Report') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Report'')) CREATE TABLE dbo.Report (ReportId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ReportDesc NVarChar(50) NULL, OrientationCd Char(1) NOT NULL, ReportTypeCd Char(1) NOT NULL, TemplateName VarChar(50) NULL, RptTemplate Int NULL, CopyReportId Int NULL, TopMargin Decimal(8,2) NOT NULL, BottomMargin Decimal(8,2) NOT NULL, LeftMargin Decimal(8,2) NOT NULL, RightMargin Decimal(8,2) NOT NULL, PageHeight Decimal(8,2) NOT NULL, PageWidth Decimal(8,2) NOT NULL, UnitCd Char(2) NOT NULL, WhereClause VarChar(1000) NULL, RegClause VarChar(400) NULL, RegCode NVarChar(max) NULL, ValClause VarChar(400) NULL, ValCode NVarChar(max) NULL, UpdClause VarChar(200) NULL, UpdCode NVarChar(max) NULL, XlsClause VarChar(200) NULL, XlsCode NVarChar(max) NULL, GenerateRp Char(1) NOT NULL, AllowSelect Char(1) NOT NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastGenDt DateTime NULL, CompanyLs VarChar(1000) NULL, NeedRegen Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, CommandTimeOut SmallInt NULL, CONSTRAINT PK_Report PRIMARY KEY CLUSTERED (ReportId))') EXEC (' ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_TopMargin DEFAULT (1) FOR TopMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_BottomMargin DEFAULT (1) FOR BottomMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_LeftMargin DEFAULT (1) FOR LeftMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_RightMargin DEFAULT (1) FOR RightMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_PageHeight DEFAULT (11) FOR PageHeight ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_PageWidth DEFAULT (8.5) FOR PageWidth ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_UnitCd DEFAULT (''in'') FOR UnitCd ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_AllowSelect DEFAULT (''N'') FOR AllowSelect ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_AuthRequired DEFAULT (''Y'') FOR AuthRequired SET IDENTITY_INSERT dbo.Report ON INSERT INTO dbo.Report (ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplate, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, NeedRegen, AuthRequired) SELECT ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplate, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, NeedRegen, AuthRequired FROM dbo.Tmp_Report SET IDENTITY_INSERT dbo.Report OFF IF (SELECT COUNT(1) FROM dbo.Report) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Report) = 0 DROP TABLE dbo.Tmp_Report')
  11. 169.00507~@~40~@~M~@~Change table Report~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Report (CommandTimeOut smallint NULL, ReportId int NULL, RptTemplate int NULL, CopyReportId int NULL, ModifiedBy int NULL, ReportDesc nvarchar(50) NULL, RegCode nvarchar(max) NULL, ValCode nvarchar(max) NULL, UpdCode nvarchar(max) NULL, XlsCode nvarchar(max) NULL, ModifiedOn datetime NULL, LastGenDt datetime NULL, OrientationCd char(1) NULL, ReportTypeCd char(1) NULL, UnitCd char(2) NULL, GenerateRp char(1) NULL, AllowSelect char(1) NULL, NeedRegen char(1) NULL, AuthRequired char(1) NULL, ProgramName varchar(20) NULL, TemplateName varchar(50) NULL, WhereClause varchar(1000) NULL, RegClause varchar(400) NULL, ValClause varchar(400) NULL, UpdClause varchar(200) NULL, XlsClause varchar(200) NULL, CompanyLs varchar(1000) NULL, TopMargin decimal(8,2) NULL, BottomMargin decimal(8,2) NULL, LeftMargin decimal(8,2) NULL, RightMargin decimal(8,2) NULL, PageHeight decimal(8,2) NULL, PageWidth decimal(8,2) NULL)') EXEC (' INSERT INTO dbo.Tmp_Report (CommandTimeOut, ReportId, RptTemplate, CopyReportId, ModifiedBy, ReportDesc, RegCode, ValCode, UpdCode, XlsCode, ModifiedOn, LastGenDt, OrientationCd, ReportTypeCd, UnitCd, GenerateRp, AllowSelect, NeedRegen, AuthRequired, ProgramName, TemplateName, WhereClause, RegClause, ValClause, UpdClause, XlsClause, CompanyLs, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth) SELECT convert(smallint,CommandTimeOut), convert(int,ReportId), convert(int,RptTemplate), convert(int,CopyReportId), convert(int,ModifiedBy), ReportDesc, RegCode, ValCode, UpdCode, XlsCode, ModifiedOn, LastGenDt, OrientationCd, ReportTypeCd, UnitCd, GenerateRp, AllowSelect, NeedRegen, AuthRequired, ProgramName, TemplateName, WhereClause, RegClause, ValClause, UpdClause, XlsClause, CompanyLs, convert(decimal(8,2),TopMargin), convert(decimal(8,2),BottomMargin), convert(decimal(8,2),LeftMargin), convert(decimal(8,2),RightMargin), convert(decimal(8,2),PageHeight), convert(decimal(8,2),PageWidth) FROM dbo.Report IF (SELECT COUNT(1) FROM dbo.Tmp_Report) > 0 OR (SELECT COUNT(1) FROM dbo.Report) = 0 DROP TABLE dbo.Report') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Report'')) CREATE TABLE dbo.Report (ReportId Int IDENTITY NOT NULL, ProgramName VarChar(20) NOT NULL, ReportDesc NVarChar(50) NULL, OrientationCd Char(1) NOT NULL, ReportTypeCd Char(1) NOT NULL, TemplateName VarChar(50) NULL, RptTemplate Int NULL, CopyReportId Int NULL, TopMargin Decimal(8,2) NOT NULL, BottomMargin Decimal(8,2) NOT NULL, LeftMargin Decimal(8,2) NOT NULL, RightMargin Decimal(8,2) NOT NULL, PageHeight Decimal(8,2) NOT NULL, PageWidth Decimal(8,2) NOT NULL, UnitCd Char(2) NOT NULL, WhereClause VarChar(1000) NULL, RegClause VarChar(400) NULL, RegCode NVarChar(max) NULL, ValClause VarChar(400) NULL, ValCode NVarChar(max) NULL, UpdClause VarChar(200) NULL, UpdCode NVarChar(max) NULL, XlsClause VarChar(200) NULL, XlsCode NVarChar(max) NULL, GenerateRp Char(1) NOT NULL, AllowSelect Char(1) NOT NULL, ModifiedBy Int NULL, ModifiedOn DateTime NULL, LastGenDt DateTime NULL, CompanyLs VarChar(1000) NULL, NeedRegen Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, CommandTimeOut SmallInt NULL, CONSTRAINT PK_Report PRIMARY KEY CLUSTERED (ReportId))') EXEC (' ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_TopMargin DEFAULT (1) FOR TopMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_BottomMargin DEFAULT (1) FOR BottomMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_LeftMargin DEFAULT (1) FOR LeftMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_RightMargin DEFAULT (1) FOR RightMargin ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_PageHeight DEFAULT (11) FOR PageHeight ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_PageWidth DEFAULT (8.5) FOR PageWidth ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_UnitCd DEFAULT (''in'') FOR UnitCd ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_AllowSelect DEFAULT (''N'') FOR AllowSelect ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Report ADD CONSTRAINT DF_Report_AuthRequired DEFAULT (''Y'') FOR AuthRequired SET IDENTITY_INSERT dbo.Report ON INSERT INTO dbo.Report (ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplate, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, NeedRegen, AuthRequired, CommandTimeOut) SELECT ReportId, ProgramName, ReportDesc, OrientationCd, ReportTypeCd, TemplateName, RptTemplate, CopyReportId, TopMargin, BottomMargin, LeftMargin, RightMargin, PageHeight, PageWidth, UnitCd, WhereClause, RegClause, RegCode, ValClause, ValCode, UpdClause, UpdCode, XlsClause, XlsCode, GenerateRp, AllowSelect, ModifiedBy, ModifiedOn, LastGenDt, CompanyLs, NeedRegen, AuthRequired, CommandTimeOut FROM dbo.Tmp_Report SET IDENTITY_INSERT dbo.Report OFF IF (SELECT COUNT(1) FROM dbo.Report) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Report) = 0 DROP TABLE dbo.Tmp_Report')
  11. 169.00507~@~50~@~M~@~Change table Wizard~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Wizard (WizardTypeId tinyint NULL, DefStartRow smallint NULL, CommandTimeOut smallint NULL, WizardId int NULL, MasterTableId int NULL, WizardTitle nvarchar(50) NULL, DefWorkSheet nvarchar(50) NULL, DefOverwrite char(1) NULL, OvwrReadonly char(1) NULL, NeedRegen char(1) NULL, AuthRequired char(1) NULL, NoTrans char(1) NULL, ProgramName varchar(50) NULL)') EXEC (' INSERT INTO dbo.Tmp_Wizard (WizardTypeId, DefStartRow, CommandTimeOut, WizardId, MasterTableId, WizardTitle, DefWorkSheet, DefOverwrite, OvwrReadonly, NeedRegen, AuthRequired, NoTrans, ProgramName) SELECT convert(tinyint,WizardTypeId), convert(smallint,DefStartRow), convert(smallint,CommandTimeOut), convert(int,WizardId), convert(int,MasterTableId), WizardTitle, DefWorkSheet, DefOverwrite, OvwrReadonly, NeedRegen, AuthRequired, NoTrans, ProgramName FROM dbo.Wizard IF (SELECT COUNT(1) FROM dbo.Tmp_Wizard) > 0 OR (SELECT COUNT(1) FROM dbo.Wizard) = 0 DROP TABLE dbo.Wizard') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Wizard'')) CREATE TABLE dbo.Wizard (WizardId Int IDENTITY NOT NULL, WizardTypeId TinyInt NOT NULL, MasterTableId Int NOT NULL, WizardTitle NVarChar(50) NOT NULL, ProgramName VarChar(50) NOT NULL, DefWorkSheet NVarChar(50) NOT NULL, DefStartRow SmallInt NOT NULL, DefOverwrite Char(1) NOT NULL, OvwrReadonly Char(1) NOT NULL, NeedRegen Char(1) NOT NULL, AuthRequired Char(1) NOT NULL, NoTrans Char(1) NOT NULL, CommandTimeOut SmallInt NULL, CONSTRAINT PK_Wizard PRIMARY KEY CLUSTERED (WizardId))') EXEC (' ALTER TABLE dbo.Wizard ADD CONSTRAINT DF_Wizard_NeedRegen DEFAULT (''N'') FOR NeedRegen ALTER TABLE dbo.Wizard ADD CONSTRAINT DF_Wizard_AuthRequired DEFAULT (''Y'') FOR AuthRequired ALTER TABLE dbo.Wizard ADD CONSTRAINT DF_Wizard_NoTrans DEFAULT (''N'') FOR NoTrans SET IDENTITY_INSERT dbo.Wizard ON INSERT INTO dbo.Wizard (WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, NeedRegen, AuthRequired, NoTrans, CommandTimeOut) SELECT WizardId, WizardTypeId, MasterTableId, WizardTitle, ProgramName, DefWorkSheet, DefStartRow, DefOverwrite, OvwrReadonly, NeedRegen, AuthRequired, NoTrans, CommandTimeOut FROM dbo.Tmp_Wizard SET IDENTITY_INSERT dbo.Wizard OFF IF (SELECT COUNT(1) FROM dbo.Wizard) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Wizard) = 0 DROP TABLE dbo.Tmp_Wizard IF NOT EXISTS (SELECT 1 FROM dbo.sysindexes WHERE name = ''IU_Wizard'') CREATE UNIQUE NONCLUSTERED INDEX IU_Wizard ON dbo.Wizard(ProgramName)')
  11. 188.00626~@~10~@~M~@~Change table FlowChart~@~Y~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.FlowChart'')) CREATE TABLE dbo.FlowChart (ChartId Int IDENTITY NOT NULL, ChartName NVarChar(500) NOT NULL, ChartDesc NVarChar(max) NULL, ChartData NVarChar(max) NULL, CONSTRAINT PK_FlowChart PRIMARY KEY CLUSTERED (ChartId))') EXEC ('') EXEC ('') EXEC ('')
  11. 193.00707~@~10~@~M~@~Change table Flowchart~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Flowchart (ChartId int NULL, ChartName nvarchar(500) NULL, ChartDesc nvarchar(max) NULL, ChartData nvarchar(max) NULL)') EXEC (' INSERT INTO dbo.Tmp_Flowchart (ChartId, ChartName, ChartDesc, ChartData) SELECT convert(int,ChartId), ChartName, ChartDesc, ChartData FROM dbo.Flowchart IF (SELECT COUNT(1) FROM dbo.Tmp_Flowchart) > 0 OR (SELECT COUNT(1) FROM dbo.Flowchart) = 0 DROP TABLE dbo.Flowchart') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Flowchart'')) CREATE TABLE dbo.Flowchart (ChartId Int IDENTITY NOT NULL, ChartName NVarChar(500) NOT NULL, ChartDesc NVarChar(max) NULL, ChartData NVarChar(max) NULL, CONSTRAINT PK_Flowchart PRIMARY KEY CLUSTERED (ChartId))') EXEC (' SET IDENTITY_INSERT dbo.Flowchart ON INSERT INTO dbo.Flowchart (ChartId, ChartName, ChartDesc, ChartData) SELECT ChartId, ChartName, ChartDesc, ChartData FROM dbo.Tmp_Flowchart SET IDENTITY_INSERT dbo.Flowchart OFF IF (SELECT COUNT(1) FROM dbo.Flowchart) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Flowchart) = 0 DROP TABLE dbo.Tmp_Flowchart')
  11. 201.00812~@~10~@~M~@~Change table UsrProvider~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_UsrProvider (UsrId int NULL, LoginName nvarchar(200) NULL, ProviderCd char(1) NULL)') 
 EXEC (' INSERT INTO dbo.Tmp_UsrProvider (UsrId, LoginName, ProviderCd) SELECT convert(int,UsrId), LoginName, ProviderCd FROM dbo.UsrProvider IF (SELECT COUNT(1) FROM dbo.Tmp_UsrProvider) > 0 OR (SELECT COUNT(1) FROM dbo.UsrProvider) = 0 DROP TABLE dbo.UsrProvider') 
 EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrProvider'')) CREATE TABLE dbo.UsrProvider (UsrProviderId Int IDENTITY(1,1) NOT NULL, UsrId Int NOT NULL, ProviderCd VarChar(5) NOT NULL, LoginName NVarChar(200) NOT NULL, LoginMeta NVarChar(max) NULL, Remark NVarChar(max) NULL, CreatedOn DateTime NOT NULL, DisabledOn DateTime NULL, Active Char(1) NOT NULL, CONSTRAINT PK_UsrProvider PRIMARY KEY CLUSTERED (UsrProviderId))') 
 EXEC (' ALTER TABLE dbo.UsrProvider ADD CONSTRAINT DF_UsrProvider_CreatedOn DEFAULT (GETUTCDATE()) FOR CreatedOn ALTER TABLE dbo.UsrProvider ADD CONSTRAINT DF_UsrProvider_Active DEFAULT (''Y'') FOR Active INSERT INTO dbo.UsrProvider (UsrId, ProviderCd, LoginName, CreatedOn, Active) SELECT UsrId, CONVERT(VarChar(5),ProviderCd), LoginName, GETUTCDATE(), ''Y'' FROM dbo.Tmp_UsrProvider IF (SELECT COUNT(1) FROM dbo.UsrProvider) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UsrProvider) = 0 DROP TABLE dbo.Tmp_UsrProvider')

  11. 212.01125~@~10~@~M~@~Change table UsrDevice~@~N~@~ EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrDevice'')) CREATE TABLE dbo.UsrDevice (UsrDeviceId Int IDENTITY NOT NULL, UsrId Int NOT NULL, DeviceId VarChar(max) NULL, PushNotificationType VarChar(5) NULL, UsrAgent VarChar(max) NULL, LastAccessOnUTC DateTime NULL, Status Char(1) NOT NULL, CONSTRAINT PK_UsrDevice PRIMARY KEY CLUSTERED (UsrDeviceId))') EXEC (' ALTER TABLE dbo.UsrDevice ADD CONSTRAINT DF_UsrDevice_Status DEFAULT (''Y'') FOR Status') EXEC ('') EXEC ('')
  11. 212.01125~@~20~@~M~@~Change table UsrDevice~@~N~@~ EXEC (' CREATE TABLE dbo.Tmp_UsrDevice (UsrDeviceId int NULL, UsrId int NULL, LastAccessOnUTC datetime NULL, Status char(1) NULL, DeviceId varchar(max) NULL, PushNotificationType varchar(5) NULL, UsrAgent varchar(max) NULL)') EXEC (' INSERT INTO dbo.Tmp_UsrDevice (UsrDeviceId, UsrId, LastAccessOnUTC, Status, DeviceId, PushNotificationType, UsrAgent) SELECT convert(int,UsrDeviceId), convert(int,UsrId), LastAccessOnUTC, Status, DeviceId, PushNotificationType, UsrAgent FROM dbo.UsrDevice IF (SELECT COUNT(1) FROM dbo.Tmp_UsrDevice) > 0 OR (SELECT COUNT(1) FROM dbo.UsrDevice) = 0 DROP TABLE dbo.UsrDevice') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.UsrDevice'')) CREATE TABLE dbo.UsrDevice (UsrDeviceId Int IDENTITY NOT NULL, UsrId Int NOT NULL, DeviceId VarChar(max) NULL, PushNotificationType VarChar(5) NULL, UsrAgent VarChar(max) NULL, LastAccessOnUTC DateTime NULL, Status Char(1) NOT NULL, Fingerprint VarChar(max) NULL, AppSig VarChar(max) NULL, ClientIP VarChar(max) NULL, CONSTRAINT PK_UsrDevice PRIMARY KEY CLUSTERED (UsrDeviceId))') EXEC (' ALTER TABLE dbo.UsrDevice ADD CONSTRAINT DF_UsrDevice_Status DEFAULT (''Y'') FOR Status SET IDENTITY_INSERT dbo.UsrDevice ON INSERT INTO dbo.UsrDevice (UsrDeviceId, UsrId, DeviceId, PushNotificationType, UsrAgent, LastAccessOnUTC, Status) SELECT UsrDeviceId, UsrId, DeviceId, PushNotificationType, UsrAgent, LastAccessOnUTC, Status FROM dbo.Tmp_UsrDevice SET IDENTITY_INSERT dbo.UsrDevice OFF IF (SELECT COUNT(1) FROM dbo.UsrDevice) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_UsrDevice) = 0 DROP TABLE dbo.Tmp_UsrDevice')
  11. 224.10106~@~10~@~M~@~Change table WebRule~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_WebRule (RuleTypeId tinyint NULL, ButtonTypeId tinyint NULL, EventId tinyint NULL, ReactEventId tinyint NULL, ReduxEventId tinyint NULL, ServiceEventId tinyint NULL, AsmxEventId tinyint NULL, WebRuleId int NULL, ScreenId int NULL, ScreenObjId int NULL, RuleName nvarchar(100) NULL, RuleDesc nvarchar(150) NULL, RuleDescription nvarchar(500) NULL, WebRuleProg nvarchar(max) NULL, ReactRuleProg nvarchar(max) NULL, ReduxRuleProg nvarchar(max) NULL, ServiceRuleProg nvarchar(max) NULL, AsmxRuleProg nvarchar(max) NULL)') EXEC (' INSERT INTO dbo.Tmp_WebRule (RuleTypeId, ButtonTypeId, EventId, ReactEventId, ReduxEventId, ServiceEventId, AsmxEventId, WebRuleId, ScreenId, ScreenObjId, RuleName, RuleDesc, RuleDescription, WebRuleProg, ReactRuleProg, ReduxRuleProg, ServiceRuleProg, AsmxRuleProg) SELECT convert(tinyint,RuleTypeId), convert(tinyint,ButtonTypeId), convert(tinyint,EventId), convert(tinyint,ReactEventId), convert(tinyint,ReduxEventId), convert(tinyint,ServiceEventId), convert(tinyint,AsmxEventId), convert(int,WebRuleId), convert(int,ScreenId), convert(int,ScreenObjId), RuleName, RuleDesc, RuleDescription, WebRuleProg, ReactRuleProg, ReduxRuleProg, ServiceRuleProg, AsmxRuleProg FROM dbo.WebRule IF (SELECT COUNT(1) FROM dbo.Tmp_WebRule) > 0 OR (SELECT COUNT(1) FROM dbo.WebRule) = 0 DROP TABLE dbo.WebRule') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.WebRule'')) CREATE TABLE dbo.WebRule (WebRuleId Int IDENTITY NOT NULL, RuleTypeId TinyInt NOT NULL, RuleName NVarChar(100) NOT NULL, RuleDesc NVarChar(150) NULL, RuleDescription NVarChar(500) NULL, ScreenId Int NOT NULL, ScreenObjId Int NULL, ButtonTypeId TinyInt NULL, EventId TinyInt NOT NULL, WebRuleProg NVarChar(max) NOT NULL, ReactEventId TinyInt NULL, ReactRuleProg NVarChar(max) NULL, ReduxEventId TinyInt NULL, ReduxRuleProg NVarChar(max) NULL, ServiceEventId TinyInt NULL, ServiceRuleProg NVarChar(max) NULL, AsmxEventId TinyInt NULL, AsmxRuleProg NVarChar(max) NULL, ForCompanyId Int NULL, CONSTRAINT PK_WebRule PRIMARY KEY CLUSTERED (WebRuleId))') EXEC (' SET IDENTITY_INSERT dbo.WebRule ON INSERT INTO dbo.WebRule (WebRuleId, RuleTypeId, RuleName, RuleDesc, RuleDescription, ScreenId, ScreenObjId, ButtonTypeId, EventId, WebRuleProg, ReactEventId, ReactRuleProg, ReduxEventId, ReduxRuleProg, ServiceEventId, ServiceRuleProg, AsmxEventId, AsmxRuleProg) SELECT WebRuleId, RuleTypeId, RuleName, RuleDesc, RuleDescription, ScreenId, ScreenObjId, ButtonTypeId, EventId, WebRuleProg, ReactEventId, ReactRuleProg, ReduxEventId, ReduxRuleProg, ServiceEventId, ServiceRuleProg, AsmxEventId, AsmxRuleProg FROM dbo.Tmp_WebRule SET IDENTITY_INSERT dbo.WebRule OFF IF (SELECT COUNT(1) FROM dbo.WebRule) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_WebRule) = 0 DROP TABLE dbo.Tmp_WebRule')
  11. 232.10218~@~10~@~M~@~Change table Flowchart~@~Y~@~ EXEC (' CREATE TABLE dbo.Tmp_Flowchart (ChartId int NULL, ChartName nvarchar(500) NULL, ChartDesc nvarchar(max) NULL, ChartData nvarchar(max) NULL)') EXEC (' INSERT INTO dbo.Tmp_Flowchart (ChartId, ChartName, ChartDesc, ChartData) SELECT convert(int,ChartId), ChartName, ChartDesc, ChartData FROM dbo.Flowchart IF (SELECT COUNT(1) FROM dbo.Tmp_Flowchart) > 0 OR (SELECT COUNT(1) FROM dbo.Flowchart) = 0 DROP TABLE dbo.Flowchart') EXEC (' IF NOT EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(''dbo.Flowchart'')) CREATE TABLE dbo.Flowchart (ChartId Int IDENTITY NOT NULL, ChartName NVarChar(500) NOT NULL, ChartDesc NVarChar(max) NULL, ChartData NVarChar(max) NULL, CompanyId Int NULL, CONSTRAINT PK_Flowchart PRIMARY KEY CLUSTERED (ChartId))') EXEC (' SET IDENTITY_INSERT dbo.Flowchart ON INSERT INTO dbo.Flowchart (ChartId, ChartName, ChartDesc, ChartData) SELECT ChartId, ChartName, ChartDesc, ChartData FROM dbo.Tmp_Flowchart SET IDENTITY_INSERT dbo.Flowchart OFF IF (SELECT COUNT(1) FROM dbo.Flowchart) > 0 OR (SELECT COUNT(1) FROM dbo.Tmp_Flowchart) = 0 DROP TABLE dbo.Tmp_Flowchart')
